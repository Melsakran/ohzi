export default class UIElement {
    constructor(vert: any, frag: any);
    is_clickable: boolean;
    position_strategy: WorldSpacePosition;
    current_state: OnIdle;
    _position: any;
    _on_idle_state: OnIdle;
    _on_enter_state: OnMouseEnter;
    _on_exit_state: OnMouseExit;
    _on_hover_state: OnMouseHover;
    on_enter: any;
    on_exit: any;
    on_hover: any;
    mouse_pos_tmp: any;
    cached_NDC_position: any;
    screen_pos_tmp: any;
    texture_size: any;
    frustumCulled: boolean;
    matrixAutoUpdate: boolean;
    renderOrder: number;
    size: number;
    pixel_offset: any;
    set_render_order(value: any): void;
    get pivot_point(): any;
    set_pixel_offset(offset: any): void;
    set_state(new_state: any): void;
    get position(): any;
    set use_depth(arg: any);
    get use_depth(): any;
    set depth_offset(arg: any);
    get depth_offset(): any;
    clear_state(): void;
    visible: boolean;
    set_world_space_coordinate_system(): void;
    set_screen_space_coordinate_system(): void;
    set_texture(texture: any): void;
    update_state(normalized_mouse_pos: any): void;
    is_mouse_over(normalized_mouse_pos: any): any;
    to_screen_position(projected_pos: any): void;
    get_screen_space_position(): any;
    set_screen_space_position(screen_pos: any): void;
    dispose(): void;
    get_size(vector2: any): any;
    on_mouse_enter(): void;
    on_mouse_exit(): void;
    on_mouse_hover(): void;
}
import WorldSpacePosition from "../ui/ui_element_position/WorldSpacePosition";
import OnIdle from "../ui/ui_element_state/OnIdle";
import OnMouseEnter from "../ui/ui_element_state/OnMouseEnter";
import OnMouseExit from "../ui/ui_element_state/OnMouseExit";
import OnMouseHover from "../ui/ui_element_state/OnMouseHover";
