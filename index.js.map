{"version":3,"sources":["utilities/ArrayUtilities.js","BaseApplication.js","shaders/basic_color/basic_color_vert.glsl","shaders/basic_color/basic_color_frag.glsl","materials/BaseShaderMaterial.js","CameraManager.js","Screen.js","Configuration.js","Time.js","KeyboardInput.js","Input.js","primitives/Sphere.js","editor/shaders/object_picker_vert.glsl","editor/shaders/object_picker_frag.glsl","Mesh.js","primitives/Arrow.js","SceneManager.js","utilities/MathUtilities.js","utilities/CameraUtilities.js","Capabilities.js","shaders/grid/grid_frag.glsl","shaders/grid/grid_vert.glsl","utilities/GeometryUtilities.js","components/Grid.js","render_mode/BaseRender.js","RenderLayers.js","shaders/box_blur/compose_frag.glsl","shaders/box_blur/box_blur_frag.glsl","shaders/copy/copy_frag.glsl","shaders/copy/copy_vert.glsl","render_mode/OutlineRender.js","materials/BlitMaterial.js","shaders/clear/clear_depth_normal_frag.glsl","materials/ClearDepthNormalMaterial.js","shaders/depth_normals/depth_normals_vert.glsl","shaders/depth_normals/depth_normals_frag.glsl","materials/DepthNormalMaterial.js","render_utilities/DepthAndNormalsRenderer.js","render_utilities/Blitter.js","Graphics.js","UI.js","shaders/ui_element/ui_element.vert","shaders/ui_element/ui_element.frag","materials/UIElementMaterial.js","shaders/ui/ss_texture_frag.glsl","shaders/ui/ss_texture_vert.glsl","ui/ui_element_position/ScreenSpacePosition.js","ui/ui_element_position/WorldSpacePosition.js","ui/ui_element_state/UIElementState.js","ui/ui_element_state/OnIdle.js","ui/ui_element_state/OnMouseEnter.js","ui/ui_element_state/OnMouseExit.js","ui/ui_element_state/OnMouseHover.js","components/UIElement.js","shaders/basic_line/basic_line_vert.glsl","shaders/basic_line/basic_line_frag.glsl","components/Line.js","Components.js","canvas_drawer/CanvasDrawer.js","components/AxisHelper.js","primitives/Cube.js","Debug.js","shaders/normal/normal.frag","shaders/normal/normal.vert","materials/NormalMaterial.js","render_mode/DebugNormalsRender.js","utilities/EasingFunctions.js","EventManager.js","utilities/ImageUtilities.js","resource_loader/AbstractLoader.js","resource_loader/JSONLoader.js","utilities/ModelUtilities.js","utilities/MeshSampler.js","ResourceContainer.js","shaders/ssao/ssao_frag.glsl","shaders/ssao/ssao_vert.glsl","materials/SSAOMaterial.js","shaders/ssao/ssao_compose_frag.glsl","materials/SSAOComposeMaterial.js","shaders/depth_normals/debug_normals_frag.glsl","materials/DisplayNormalTextureMaterial.js","materials/BoxBlurMaterial.js","render_utilities/Blurrer.js","render_mode/NormalAORender.js","render_mode/NormalRender.js","utilities/ObjectUtilities.js","PerspectiveCamera.js","static_batcher/GeometryBatch.js","static_batcher/GeometryBatcher.js","RenderLoop.js","resource_loader/TextureLoader.js","resource_loader/GLTFLoader.js","resource_loader/DAELoader.js","resource_loader/TextLoader.js","resource_loader/CubemapLoader.js","components/AudioClip.js","resource_loader/AudioLoader.js","resource_loader/OBJLoader.js","resource_loader/RGBETextureLoader.js","resource_loader/PointArrayLoader.js","resource_loader/HDRCubeTextureLoader.js","resource_loader/ResourceBatch.js","canvas_drawer/SimpleTextDrawer.js","utilities/TimeUtilities.js","utilities/Validation.js","index.js"],"names":["ArrayUtilities","source","target","push","apply","array","size","items_left_count","length","i","clone","elem","index","indexOf","splice","points","closest_point","closest_distance","distanceTo","obj","ids","Object","keys","arr","BaseApplication","module","exports","BaseShaderMaterial","vert","frag","uniforms","vertexShader","basic_vert","fragmentShader","basic_frag","_Color","value","THREE","Color","ShaderMaterial","CameraManager","_current","undefined","camera","camera_manager","Screen","width","height","render_width","render_height","width_height","Vector2","dpr","pixel_size","x","y","vector2","multiplyScalar","Configuration","parameters","window","devicePixelRatio","is_mobile","is_ios","is_ipad","vertex_image_unit_supported","min_zoom_distance","max_zoom_distance","max_zoom_distance_scale","zoom_speed","use_fxaa","use_ssaa","background_color","touch_sensitivity","zoom_sensitivity","spin_sensitivity","three_finger_rotation_speed","three_finger_allowed_x_rotation_offset","three_finger_allowed_y_rotation_offset","use_touch_gestures","texture_float_supported","use_ortographic","hover_enabled","rotation_enabled","transparency_amount","show_debug_sphere_on_floor_selection","show_debug_sphere_on_steps_in_floor","display_cleanup_log","navigation_speed_damping","navigation_speed","out_of_bounds_force","mouse_zoom_speed","touch_zoom_speed","json","configuration","Time","___time","Clock","__delta_time","__elapsed_time","__allocated_time","getDelta","getElapsedTime","delta_time","elapsed_time","time","KeyboardInput","ctrlz_pressed","ctrlz_fired","document","onkeydown","on_key_down","bind","onkeyup","on_key_up","onkeypress","on_key_press","e","keyCode","ctrlKey","key","press_key","release_keys","pressed","fired","down","key_name","up","keyboard_input","Input","mouse_pos","last_mouse_pos","mouse_dir","__clicked_time","is_mouse_down","is_mouse_up","rotation_angle","_normalized_mouse_pos","left_mouse_button_down","left_mouse_button_pressed","left_mouse_button_released","middle_mouse_button_down","right_mouse_button_down","right_mouse_button_pressed","right_mouse_button_released","mousewheel","previous_scale","previous_rotation","previous_rotation_dirty","mouse_str","tmp_mouse_velocity","bounding_client","multitouch_active","tapped","initial_zoom_distance","zoom_center","zoom_started","touch_zoom","multi_touch_dir","wheel_delta","mac","pinching_with_trackpad","scrolling_with_trackpad","scrolling_with_mouse","double_click","canvas","previous_pos_x","previous_pos_y","rect","getBoundingClientRect","left","top","container","region","ZingTouch","Region","init","scope","set_mouse_pos","addEventListener","on_double_click","on_focus_lost","on_mouse_up","on_mouse_move","on_touch_move","on_touch_end","one_finger_pan","Pan","numInputs","register","event","detail","data","two_fingers_pan","set","change","three_fingers_pan","touch_zoom_delta","distance","last_zoom_distance","center","gesture","Gesture","end","inputs","state","element","on_gesture_end","start","on_mouse_down","on_mouse_wheel","preventDefault","clientX","clientY","ev","events","get_os","is_mac","console","log","deltaY","is_int","Math","clamp","abs","current","originalEvent","which","changedTouches","middle_mouse_button_released","rotation_delta","normalize","userAgent","navigator","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","test","n","clear","normalized_mouse_pos","INPUT","Sphere","radius","color","geometry","SphereBufferGeometry","material","MeshBasicMaterial","Mesh","_selectable_material","__get_selectable_material","original_material","stored_layers","layers","mask","Arrow","dir","cone_height","cylinder_height","cylinder_geo","CylinderBufferGeometry","translate","cone_geometry","ConeBufferGeometry","buffer_geometry","BufferGeometryUtils","mergeBufferGeometries","rotateX","quaternion","setFromUnitVectors","Vector3","scale","z","SceneManager","Scene","name","scene","scene_manager","MathUtilities","from_range_start_value","from_range_end_value","to_range_start_value","to_range_end_value","min","max","rgb","r","round","toString","g","b","plane","projected_point","points_on_plane","projectPoint","from","to","t","elements","lerp","x1","x2","v","w","add","CameraUtilities","tmp_mat","Matrix4","tmp_vec","tmp_vec2","Plane","ray","Ray","tmp_size","tmp_unproj","applyQuaternion","NDC","v_fov","fov","PI","h_fov","atan","tan","aspect","distV","far","distH","plane_position","plane_normal","setFromNormalAndCoplanarPoint","get_forward_dir","isPerspectiveCamera","position","unproject_mouse_position","unproject","intersectPlane","zoom_scale","points_sphere","setFromPoints","world_space_center","camera_forward","project_points_on_plane","projected_points_center","box","Box3","getCenter","right","cross","mat","inverse_mat","getInverse","applyMatrix4","getSize","projected_center","zoom","get_zoom_to_fit_rect","bb","isOrthographicCamera","obj_x","obj_y","object_aspect","aspect_ratio","object","getWorldPosition","project","pos","copy","bottom","updateProjectionMatrix","camera_utilities","Capabilities","max_anisotropy","vertex_texture_sampler_available","fp_textures_available","capabilities","GeometryUtilities","geometry_buffer","indices","positions","getAttribute","bar_coordinates","vertices","count","getX","getY","getZ","BufferGeometry","setAttribute","BufferAttribute","Float32Array","add_barycentric_attribute","non_indexed_geometry_buffer","Grid","grid_vert","grid_frag","extensions","derivatives","transparent","depthWrite","plane_geometry","PlaneBufferGeometry","non_indexed_geometry","convert_to_non_indexed_geometry","rotation","BaseRender","context","renderer","RenderLayers","OutlineRender","webgl","main_rt","WebGLRenderTarget","rt1","rt2","compose_material","__get_compose_material","copy_material","__get_copy_material","box_blur_material","__get_box_blur_material","background_material","__get_background_material","copy_plane","PlaneGeometry","frustumCulled","copy_scene","h","setSize","_Screen","updateMatrix","updateMatrixWorld","enable","opaque","disable","outline","_renderer","setClearColor","clear_color","clearTarget","overrideMaterial","render","_MainTex","texture","_SampleDir","_Blur","copy_vert","copy_frag","depthTest","box_blur_frag","compose_frag","Vector4","background_frag","autoClear","BlitMaterial","frag_shader","vert_shader","defines","_Resolution","blending","NoBlending","AlwaysDepth","ClearDepthNormalMaterial","clear_depth","clear_normal","_DepthNormal","DepthNormalMaterial","_FarPlane","DepthAndNormalsRenderer","RT","clear_depth_normal_mat","depth_normal_material","graphics","__resize_RT_if_necessary","blit_clear_with_material","far_plane","Blitter","_blit_scene","_blit_material","_blit_quad","_blit_camera","OrthographicCamera","src","dst","setRenderTarget","dst_RT","Graphics","blitter","no_render","current_render_mode","generateDepthNormalTexture","depth_and_normals_renderer","msaa","WebGLRenderer","antialias","preserveDrawingBuffer","alpha","setPixelRatio","get","domElement","getMaxAnisotropy","maxVertexTextures","floatVertexTextures","new_state","constructor","on_exit","on_enter","check_for_resize","__update_current_camera","override_mat","__apply_override_material","buffer","readRenderTargetPixels","clear_stencil","clear_alpha","current_width","clientWidth","current_height","clientHeight","update_size","setViewport","error","src_RT","blit_with_material","blit","blob_callback","ctx","old_width","old_height","new_width","new_height","tile_width","tile_height","divisions_x","parseInt","ceil","divisions_y","ctx_2D","setViewOffset","drawImage","toBlob","clearViewOffset","blob","link","createElement","download","href","URL","createObjectURL","click","onclick","requestAnimationFrame","revokeObjectURL","a","removeAttribute","render_target","UI","ui_elements","_tmp_normalized_pos","ss_scene","autoUpdate","ws_scene","ss_camera","remove","dispose","set_screen_space_coordinate_system","set_world_space_coordinate_system","update_state","children","current_clicked_element","ui","UIElementMaterial","intensity","_ScreenSize","_TextureSize","_PixelOffset","_NDC","_PivotPoint","_DepthOffset","ScreenSpacePosition","WorldSpacePosition","tmp_vec3","UIElementState","ui_element","normalized_mouse_position","OnIdle","is_mouse_over","set_state","_on_enter_state","OnMouseEnter","on_mouse_enter","_on_hover_state","_on_exit_state","OnMouseExit","on_mouse_exit","_on_idle_state","OnMouseHover","__trigger_on_hover","on_mouse_hover","UIElement","is_clickable","position_strategy","current_state","_position","on_hover","mouse_pos_tmp","cached_NDC_position","screen_pos_tmp","texture_size","matrixAutoUpdate","renderOrder","pixel_offset","offset","visible","minFilter","NearestFilter","magFilter","needsUpdate","image","get_size","get_pos_NDC","update","to_screen_position","Box2","setFromCenterAndSize","containsPoint","projected_pos","screen_pos","remove_screen_material","boolean","Line","_Thickness","_Length","_ElapsedTime","line_vs","line_fs","setup","next_position","previous_position","orientation","coverage","accumulated_length","next_point","__get_next_position","previous_point","__get_previous_position","vertexList","nextPositionList","previousPositionList","orientationList","coverageList","setIndex","_length","sub","parent","col","CanvasDrawer","uses_dynamic_font","__textHeight","getContext","fontStyle","body","getElementsByTagName","dummy","dummyText","createTextNode","appendChild","offsetHeight","removeChild","text","font","measureText","getFontHeight","ctxOptions","font_color","__draw","draw_canvas","canvas_texture","CanvasTexture","UVMapping","ClampToEdgeWrapping","generateMipMaps","fill","stroke","tl","tr","br","bl","defaultRadius","side","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","AxisHelper","blueAxisMat","LineBasicMaterial","depthFunc","blueAxisGeo","Geometry","blueAxisLine","greenAxisMat","greenAxisGeo","greenAxisLine","redAxisMat","linewidth","redAxisGeo","redAxisLine","Object3D","Cube","segments","BoxGeometry","Debug","Vector3_one","Vector3_zero","canvas_renderer","rt_debug","origin","arrow","axis","position_2d","fillStyle","fillRect","clearRect","strokeStyle","line","cube","depth","forward_dir","forward","basic_color_vert","basic_color_frag","helper","Box3Helper","sphere","input_points","open","catmull","CatmullRomCurve3","updateArcLengths","getSpacedPoints","line_helper","draw_line","SphereGeometry","sphere_mesh","sphere1","curve","options","DEBUG","NormalMaterial","DebugNormalsRender","EasingFunctions","sin","pow","sqrt","EventManager","queue","zoom_changed_evt","store_clickd_evt","point_selected_evt","config_changed","path_substep_completed","path_completed","go_to_store_requested_evt","resource_loaded_evt","service_clicked_evt","unit_pos_updated_evt","floor_changed_evt","on_enter_floor_navigation","on_exit_floor_navigation","on_enter_floor_selection","on_exit_floor_selection","on_enter_outside_navigation","on_exit_outside_navigation","step_selected_evt","payload","callback","fire","store_id","hit_data","step_number","step_index","resource","service","unit_data","floor_id","event_manager","ImageUtilities","getImageData","imagedata","AbstractLoader","resource_id","url","progress","has_finished","has_error","error_message","message","resource_container","JSONLoader","loader","FileLoader","load","set_resource","JSON","parse","__update_progress","__loading_ended","xhr","loaded","total","msg","__set_error","ModelUtilities","result_callback","traverse","child","fromGeometry","geometries","get_mesh","gltf","animations","skinnedMeshes","node","isSkinnedMesh","cloneBones","cloneSkinnedMeshes","isBone","skinnedMesh","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","Skeleton","boneInverses","matrixWorld","cast","receive","castShadow","receiveShadow","object_name","object_type","model_utilities","MeshSampler","sample_count","face_areas","min_area","faces","area","get_face_area","normalized_faces_array","get_uniform_face_distribution","selected_faces","select_random_faces","sampled_data","sample_data_from_faces","sampled_points","sampled_normals","face","w1","random","w2","sample_point_in_face","c","normal","normals","amount","selected_face","minimum_area","extended_triangle_indices","repetitions_needed","j","v1","v2","v3","vec1","vec2","w3","mesh_sampler","ResourceContainer","resources","fire_resource_loaded","SSAOMaterial","_InverseProjMatrix","_ProjectionMatrix","_Bias","_Radius","_SampleKernel","__get_sample_kernel","_RandomRotation","__get_rotation_kernel","sample_kernel","kernel_size","rotation_kernel","Uint8Array","floor","rotation_texture","DataTexture","RGBFormat","wrapS","RepeatWrapping","wrapT","SSAOComposeMaterial","_AO","DisplayNormalTextureMaterial","depth_normals_vert","BoxBlurMaterial","Blurrer","RT1","RT2","box_blur_mat","NormalAORender","ssao_mat","ssao_compose_mat","debug_normals","ssaa","main_RT","SSAO_RT","blurrer","__check_RT_size","__update_uniforms","depth_normals_RT","blur","projectionMatrix","NormalRender","ObjectUtilities","xml","nodeType","attributes","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","xml_to_json","old","PerspectiveCamera","near","GeometryBatch","batch_width","data_textures","object_names","zero_offset","write_offset","uniform_dirty_count","tmp_uploaded_data_count","uniform_name","default_value_v3","src_tex","__create_rgb_texture","dst_tex","one_pixel_tex","new_data_tex","__add_data_texture","__flood_data_texture_rgb","default_value_v4","__create_rgba_texture","__flood_data_texture_rgba","__create_rgba_float_texture","vector3","use_r","use_g","use_b","obj_index","__get_object_index","data_texture","__get_data_texture","__set_pixel_rgb","one_pixel","last_accessed_index","dirty_count","vector4","use_a","__set_pixel_rgba","upload_budget","__partial_texture_data_upload","__full_texture_data_upload","texture_data","copyTextureToTexture","v4","RGBAFormat","RGBA","FloatType","conosle","src_texture","dst_texture","one_pixel_text","GeometryBatcher","batches","buffer_geometries","attr_accessor_uvs","texture_width","ceilPowerOfTwo","__init_uv_array","uv_index","vertex_count","buffer_attribute","upload_texture_data","uvs","geometry_batcher","RenderLoop","target_application","_frame_id","is_running","frames_passed","__update","post_start","on_pre_render","on_post_render","cancelAnimationFrame","TextureLoader","GLTFLoader","DAELoader","ColladaLoader","TextLoader","CubemapLoader","CubeTextureLoader","setPath","urls","AudioClip","loop","volume","audio","audio_listener","Audio","setBuffer","setLoop","setVolume","play","AudioLoader","OBJLoader","RGBETextureLoader","RGBELoader","setDataType","UnsignedByteType","hdr","PointArrayLoader","parse_path","raw_data","string_array","split","pop","parseFloat","HDRCubeTextureLoader","url_suffix","ResourceBatch","batch_name","resource_loaders","print_error","finished","SimpleTextDrawer","text_margin","text_size","get_text_size","globalAlpha","textBaseline","textAlignment","fillText","TimeUtilities","Validation","Number","str","Components"],"mappings":"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","file":"index.js","sourceRoot":"src","sourcesContent":["export default class ArrayUtilities\n{\n\tconstructor(){}\n\n\n  static merge_from_to(source, target)\n  {\n    target.push.apply( target, source );\n  }\n\n  static expand_vec3_array(array, size)\n  {\n    let items_left_count = size - array.length;\n\n\t\tfor (let i = 0;i < items_left_count;i++)\n    {\n      array.push(array[i].clone());\n    }\n  }\n\n  static remove_elem(array, elem)\n  {\n    let index = array.indexOf(elem);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n  }\n\n  static get_closest_point(points, target)\n  {\n    let closest_point = points[0];\n    let closest_distance = closest_point.distanceTo(target);\n    for(let i=1; i< points.length; i++)\n    {\n      if(points[i].distanceTo(target) < closest_distance)\n      {\n        closest_point = points[i];\n        closest_distance = points[i].distanceTo(target);\n      }\n    }\n    return closest_point;\n  }\n\n  static object_values_to_array(obj) {\n    let ids = Object.keys(obj)\n    let arr = [];\n    for (let i = 0; i < ids.length; i++) {\n      arr.push(obj[ids[i]]);\n    }\n    return arr;\n  }\n\n}\n\n","export default class BaseApplication\n{\n\tstart() {}\n\tpost_start() {}\n\tend() {}\n\tupdate() {}\n\ton_post_render() {}\n\ton_pre_render() {}\n\tresources_fully_loaded() {}\n}\n","module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n  vec3 pos = position;\\n  mat4 MVP = projectionMatrix * modelViewMatrix;\\n\\n  gl_Position = MVP * vec4( pos, 1.0 );\\n  vUv = uv;\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform vec3 _Color;\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(_Color, 1.0);\\n}\";","import basic_vert from '/shaders/basic_color/basic_color_vert';\nimport basic_frag from '/shaders/basic_color/basic_color_frag';\n\nexport default class BaseShaderMaterial extends THREE.ShaderMaterial\n{\n\tconstructor(vert, frag, uniforms)\n\t{\n\n\t\tsuper({\n\t\t\tvertexShader: vert \t\t|| basic_vert,\n\t\t\tfragmentShader: frag \t|| basic_frag,\n\t\t\tuniforms: uniforms \t\t|| {\n\t\t\t\t_Color: {value: new THREE.Color(\"#FF0000\")}\n\t\t\t}\n\t\t});\n\t}\n\n}\n\n\n","class CameraManager {\n\tconstructor()\n\t{\n\t\tthis._current = undefined;\n\t}\n\n\tset current(camera)\n\t{\n\t\tthis._current = camera;\n\t}\n\n\tget current()\n\t{\n\t\treturn this._current;\n\t}\n}\n\nconst camera_manager = new CameraManager();\nmodule.exports = camera_manager;\n","class Screen {\n\tconstructor()\n\t{\n\t\tthis.width = 1;\n\t\tthis.height = 1;\n\n\t\tthis.render_width = 1;\n\t\tthis.render_height = 1;\n\t\tthis.width_height = new THREE.Vector2(this.width, this.height);\n\n\n\t\tthis.dpr = 1;\n\t\tthis.pixel_size = new THREE.Vector2(1/this.width, 1/this.height);\n\t}\n\n\tupdate_size(width, height)\n\t{\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.pixel_size = new THREE.Vector2(1/this.width, 1/this.height) ;\n\n\t\tthis.width_height.x = width  ;\n\t\tthis.width_height.y = height ;\n\n\t\tthis.render_width = width * this.dpr;\n\t\tthis.render_height = height * this.dpr;\n\n\n\t}\n\n\tapply_pixel_density_v2(vector2)\n\t{\n\t\tvector2.multiplyScalar(1/this.dpr);\n\n\t\treturn vector2;\n\t}\n\tapply_pixel_density(value)\n\t{\n\t\treturn value * (1/this.dpr);\n\t}\n\n\n\tget_pixel_size()\n\t{\n\t\treturn this.pixel_size;\n\t}\n\n\tget aspect_ratio()\n\t{\n\t\treturn this.width/this.height;\n\t}\n\n\n}\n\nexport default new Screen();\n","/*\n\n  A configuration class used as a singleton\n\n*/\n\nclass Configuration {\n  constructor(parameters = {}) {\n\n    this.dpr = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    this.is_mobile = false;\n    this.is_ios = false;\n    this.is_ipad = false;\n\n    this.vertex_image_unit_supported = true;\n\n    this.min_zoom_distance = 3000;\n\n    this.max_zoom_distance = 40000;\n    this.max_zoom_distance_scale = 1.1;\n    this.zoom_speed = 0.1;\n\n\n\n    this.use_fxaa = false;\n    this.use_ssaa = true;\n\n\n\n    this.background_color = new THREE.Color(0.768,0.768,0.768);\n\n\n\n\n    //TOUCH\n    this.touch_sensitivity = 1.5;\n    this.zoom_sensitivity = 0.7;\n    this.spin_sensitivity = 2;\n    this.three_finger_rotation_speed = 3;\n    this.three_finger_allowed_x_rotation_offset = 30;\n    this.three_finger_allowed_y_rotation_offset = 20;\n\n\n    this.use_touch_gestures = false;\n\n\n    this.texture_float_supported = false;\n\n    this.use_ortographic = true;\n\n    this.hover_enabled = false;\n    this.rotation_enabled = false;\n\n    this.transparency_amount = 0.2;\n\n    this.show_debug_sphere_on_floor_selection = false;\n    this.show_debug_sphere_on_steps_in_floor = false;\n    this.display_cleanup_log = false;\n\n\n    this.navigation_speed_damping = 0.74;\n    this.navigation_speed = 200;\n    this.out_of_bounds_force = 1.5;\n    this.mouse_zoom_speed = 0.05;\n    this.touch_zoom_speed = 0.5;\n\n\n  }\n\n\n\n\n\n\n  from_json(json)\n  {\n\n\n  }\n}\n\nconst configuration = new Configuration();\nmodule.exports = configuration;\n","class Time\n{\n\tconstructor()\n\t{\n\t\tthis.___time = new THREE.Clock();\n\t\tthis.__delta_time = 0;\n\t\tthis.__elapsed_time = 0;\n\t\tthis.__allocated_time = new THREE.Vector2(0,0);\n\t}\n\n\n\tget delta_time()\n\t{\n\t\treturn this.__delta_time < 0.4? this.__delta_time : 0.016;\n\t}\n\tget elapsed_time()\n\t{\n\t\treturn this.__elapsed_time;\n\t}\n\tget shader_time()\n\t{\n\t\tthis.__allocated_time.x = this.delta_time;\n\t\tthis.__allocated_time.y = this.elapsed_time;\n\t\treturn  this.__allocated_time;\n\t}\n\n\t__update()\n\t{\n\t\tthis.__delta_time = this.___time.getDelta();\n\t\tthis.__elapsed_time = this.___time.getElapsedTime();\n\t}\n}\n\nconst time = new Time();\nmodule.exports = time;\n\n","export class KeyboardInput\n{\n\tconstructor()\n\t{\n\t\tthis.ctrlz_pressed = false;\n\t\tthis.ctrlz_fired = false;\n\n\t\tthis.keys = [];\n\t}\n\n\tinit()\n\t{\n\t\tdocument.onkeydown \t= this.on_key_down.bind(this);\n\t\tdocument.onkeyup \t\t= this.on_key_up.bind(this);\n\t\tdocument.onkeypress = this.on_key_press.bind(this);\n\t}\n\n\ton_key_down(e)\n\t{\n\t\tif(e.keyCode == 90 && e.ctrlKey && !this.ctrlz_fired)\n    {\n    \tthis.ctrlz_pressed = true;\n    \tthis.ctrlz_fired = true;\n    } \n    if(e.key)\n    {\n    \tthis.press_key(e.key);\n    }\n\t}\n\ton_key_press(e)\n\t{\n\t\t\n\t}\n\ton_key_up(e)\n\t{\n\t\tthis.release_keys();\n\t}\n\n\tclear()\n\t{\n\t\tthis.ctrlz_pressed = false;\n\t\tfor(let i=0; i< this.keys.length; i++)\n\t\t{\n\t\t\tthis.keys[i].pressed = false;\n\t\t}\n\t}\n\n\trelease_keys()\n\t{\n\t\tthis.ctrlz_fired = false;\n\t\t\n\t\tfor(let i=0; i< this.keys.length; i++)\n\t\t{\n\t\t\tthis.keys[i].fired = false;\n\t\t\tthis.keys[i].down = false;\n\t\t}\n\t}\n\n\tpress_key(key)\n\t{\n\t\tfor(let i=0; i< this.keys.length; i++)\n\t\t{\n\t\t\tif(this.keys[i].key_name === key && !this.keys[i].fired)\n\t\t\t{\n\t\t\t\tthis.keys[i].pressed = true;\n\t\t\t\tthis.keys[i].down = true;\n\t\t\t\tthis.keys[i].fired = true;\n\t\t\t}\n\t\t}\n\t}\n\tkey_is_pressed(key)\n\t{\n\t\tfor(let i=0; i< this.keys.length; i++)\n\t\t{\n\t\t\tif(this.keys[i].key_name === key)\n\t\t\t{\n\t\t\t\treturn this.keys[i].pressed;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tkey_is_down(key)\n\t{\n\t\tfor(let i=0; i< this.keys.length; i++)\n\t\t{\n\t\t\tif(this.keys[i].key_name === key)\n\t\t\t{\n\t\t\t\treturn this.keys[i].down;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tregister_key(key)\n\t{\n\t\tthis.keys.push(\n\t\t{\n\t\t\tkey_name: key,\n\t\t\tpressed: false,\n\t\t\tdown: false,\n\t\t\tup: false,\n\t\t\tfired: false\n\n\t\t});\n\t}\n\tunregister_key(key_name)\n\t{\n\t\tlet key = undefined;\n\t\tfor(let i=0; i< this.keys.length; i++)\n\t\t{\n\t\t\tif(this.keys[i].key_name === key_name)\n\t\t\t\tkey = this.keys[i];\n\t\t}\n\n\t\tlet index = this.keys.indexOf(key);\n    if (index > -1) {\n      this.keys.splice(index, 1);\n    }\n\t}\n\n}\n\nconst keyboard_input = new KeyboardInput();\nmodule.exports = keyboard_input;","import Screen from '/Screen';\nimport Configuration from '/Configuration';\nimport Time from '/Time';\nimport KeyboardInput from '/KeyboardInput';\n\nclass Input {\n\tconstructor() {\n\t\tthis.mouse_pos = new THREE.Vector2();\n\t\tthis.last_mouse_pos = new THREE.Vector2();\n\t\tthis.mouse_dir = new THREE.Vector2();\n\n\n\t\tthis.__clicked_time = 0;\n\t\tthis.__elapsed_time = 0;\n\t\tthis.__delta_time = 0;\n\n\t\tthis.is_mouse_down = false;\n\t\tthis.is_mouse_up = false;\n\n\t\tthis.rotation_angle = 0;\n\n\t\tthis._normalized_mouse_pos = new THREE.Vector2(0, 0);\n\n\t\tthis.left_mouse_button_down = false;\n\t\tthis.left_mouse_button_pressed = false;\n\t\tthis.left_mouse_button_released = false;\n\t\tthis.middle_mouse_button_down = false;\n\t\tthis.right_mouse_button_down = false;\n\t\tthis.right_mouse_button_pressed = false;\n\t\tthis.right_mouse_button_released = false;\n\n\t\tthis.mousewheel = 0;\n\n\t\tthis.previous_scale = 0;\n\t\tthis.previous_rotation = 0;\n\t\tthis.previous_rotation_dirty = true;\n\n\t\tthis.mouse_str = \"mouse\";\n\n\t\tthis.tmp_mouse_velocity = new THREE.Vector2();\n\t\tthis.bounding_client = new THREE.Vector2();\n\n\t\tthis.multitouch_active = false;\n\n\t\tthis.tapped = false;\n\t\tthis.initial_zoom_distance = 100;\n\t\tthis.zoom_center = new THREE.Vector2();\n\t\tthis.zoom_started = false;\n\t\tthis.touch_zoom = 1;\n\n\t\tthis.multi_touch_dir = new THREE.Vector2();\n\t\tthis.wheel_delta = 0;\n\n\t\tthis.mac = 'mac';\n\t\tthis.pinching_with_trackpad = false;\n\t\tthis.scrolling_with_trackpad = false;\n\t\tthis.scrolling_with_mouse = false;\n\n\t\tthis.double_click = false;\n\n\t\tthis.canvas = undefined;\n\n\t\t// Input 2.0\n\t\tthis.previous_pos_x = 0;\n\t\tthis.previous_pos_y = 0;\n\t}\n\n\tmouse_is_within_bounds(rect) {\n\t\trect = rect || this.canvas.getBoundingClientRect();\n\n\t\treturn this.mouse_pos.x > rect.left &&\n\t\t\tthis.mouse_pos.x < rect.left + rect.width &&\n\t\t\tthis.mouse_pos.y > rect.top &&\n\t\t\tthis.mouse_pos.y < rect.top + rect.height;\n\t}\n\n\tinit(container, canvas) {\n\t\tthis.canvas = canvas;\n\n\t\tlet region = new ZingTouch.Region(container, false, false);\n\t\tKeyboardInput.init();\n\n\t\tlet scope = this;\n\n\t\tregion.bind(container, 'tap', function (e) {\n\t\t\tscope.tapped = true;\n\t\t\tscope.set_mouse_pos(e);\n\n\t\t});\n\n\t\twindow.addEventListener('dblclick', this.on_double_click.bind(this));\n\n\t\tcontainer.addEventListener('mouseleave', this.on_focus_lost.bind(this));\n\n\t\tcontainer.addEventListener('mouseup', this.on_mouse_up.bind(this));\n\t\tcontainer.addEventListener('mousemove', this.on_mouse_move.bind(this));\n\n\t\tcontainer.addEventListener('touchmove', this.on_touch_move.bind(this), false);\n\t\tcontainer.addEventListener('touchend', this.on_touch_end.bind(this), false);\n\n\t\t// region.bind(container, 'pan', function(e){\n\t\t// \tscope.on_mouse_move(e);\n\t\t// \tconsole.log(\"PAN\");\n\t\t// });\n\t\tlet one_finger_pan = new ZingTouch.Pan({ numInputs: 1 });\n\t\tregion.register(\"one_finger_pan\", one_finger_pan);\n\t\tregion.bind(container, \"one_finger_pan\", (event) => {\n\t\t\tif (event.detail.data.length > 0) {\n\t\t\t\t// scope.multi_touch_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\n\t\t\t\t// scope.multi_touch_dir.multiplyScalar(scope.__delta_time);\n\t\t\t\t// scope.on_mouse_move_zingtouch(event);\n\t\t\t}\n\n\t\t})\n\t\tlet two_fingers_pan = new ZingTouch.Pan({ numInputs: 2 });\n\t\tregion.register(\"two_fingers_pan\", two_fingers_pan);\n\t\tregion.bind(container, \"two_fingers_pan\", (event) => {\n\t\t\tif (event.detail.data.length > 0) {\n\n\t\t\t\t// scope.multi_touch_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\n\t\t\t\t// scope.multi_touch_dir.multiplyScalar(scope.__delta_time);\n\t\t\t\tscope.multi_touch_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\n\t\t\t\tscope.multi_touch_dir.multiplyScalar(scope.__delta_time);\n\t\t\t}\n\t\t})\n\n\t\tlet three_fingers_pan = new ZingTouch.Pan({ numInputs: 3 });\n\t\tregion.register(\"three_fingers_pan\", three_fingers_pan);\n\t\tregion.bind(container, \"three_fingers_pan\", (event) => {\n\t\t\tif (event.detail.data.length > 0) {\n\t\t\t\tscope.multi_touch_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\n\t\t\t\tscope.multi_touch_dir.multiplyScalar(scope.__delta_time);\n\t\t\t}\n\n\t\t})\n\n\t\tregion.bind(container, 'distance', function (e) {\n\n\t\t\tif (!scope.zoom_started) {\n\t\t\t\tscope.zoom_started = true;\n\t\t\t\tscope.touch_zoom_delta = 0;\n\t\t\t\tscope.initial_zoom_distance = e.detail.distance;\n\t\t\t\tscope.last_zoom_distance = e.detail.distance;\n\n\t\t\t\tscope.zoom_center.set(e.detail.center.x, e.detail.center.y);\n\t\t\t\tscope.mouse_pos.set(e.detail.center.x, e.detail.center.y);\n\t\t\t}\n\t\t\tscope.touch_zoom_delta = e.detail.distance - scope.last_zoom_distance;\n\t\t\tscope.last_zoom_distance = e.detail.distance;\n\t\t\tscope.touch_zoom = 1;\n\t\t}, false);\n\n\t\tlet gesture = new ZingTouch.Gesture();\n\t\tgesture.end = (inputs, state, element) => { scope.on_gesture_end(inputs) }\n\t\tgesture.start = (inputs, state, element) => { scope.on_mouse_down(inputs) }\n\t\tregion.register('shortTap', gesture);\n\n\t\tregion.bind(container, 'shortTap', function (e) {\n\t\t});\n\n\t\twindow.addEventListener('wheel', this.on_mouse_wheel.bind(this))\n    container.addEventListener( 'contextmenu', (event)=>{event.preventDefault()}, false );\n\n\t\tcontainer.addEventListener(\"mousemove\", (event) => {\n\t\t\tthis.mouse_pos.x = event.clientX;\n\t\t\tthis.mouse_pos.y = event.clientY;\n\t\t\tthis.scrolling_with_mouse = false;\n\t\t\tthis.scrolling_with_trackpad = false;\n\t\t\tthis.pinching_with_trackpad = false;\n\t\t});\n\t}\n\n\tset_mouse_pos(ev) {\n\t\tthis.mouse_pos.x = ev.detail.events[0].clientX;\n\t\tthis.mouse_pos.y = ev.detail.events[0].clientY;\n\t}\n\n\tget normalized_mouse_pos() {\n\t\tthis._normalized_mouse_pos.x = (this.mouse_pos.x / Screen.width) * 2.0 - 1;\n\t\tthis._normalized_mouse_pos.y = -1 * ((this.mouse_pos.y / Screen.height) * 2.0 - 1);\n\t\treturn this._normalized_mouse_pos;\n\t}\n\n\tget NDC() {\n\t\treturn this.normalized_mouse_pos;\n\t}\n\n\tis_mac() {\n\t\treturn this.get_os() === this.mac;\n\t}\n\n\ton_double_click(event) {\n\t\tthis.double_click = true;\n\t}\n\n\ton_mouse_wheel(event) {\n\n\n\t\tthis.mouse_pos.x = event.clientX;\n\t\tthis.mouse_pos.y = event.clientY;\n\n\t\t// User is using a mac\n\t\tif (this.is_mac()) {\n\t\t\t// User is pinching\n\t\t\tif (event.ctrlKey) {\n\t\t\t\t// Negative values means pinch in.\n\t\t\t\t// Positive values means pinch out.\n\t\t\t\tconsole.log(\"Pinching with a touchpad\", event.deltaY)\n\t\t\t\tthis.pinching_with_trackpad = true;\n\t\t\t\tthis.scrolling_with_trackpad = false;\n\t\t\t\tthis.scrolling_with_mouse = false;\n\t\t\t\t// User is scrolling\n\t\t\t} else {\n\t\t\t\t// User is using the touchpad\n\t\t\t\tif (this.is_int(event.deltaY)) {\n\t\t\t\t\t// Negative values means scroll up\n\t\t\t\t\t// Positive values means scroll down\n\t\t\t\t\t// console.log(\"Scrolling with a touchpad\", (event.deltaY))\n\t\t\t\t\t// 350 is aprox the maximum value of deltaY on touchpad scroll\n\t\t\t\t\tthis.pinching_with_trackpad = false;\n\t\t\t\t\tthis.scrolling_with_trackpad = true;\n          this.scrolling_with_mouse = false;\n\n          this.wheel_delta = THREE.Math.clamp(event.deltaY / 350, -1, 1) * -1;\n\t\t\t\t} else {\n\t\t\t\t\t// Negative values means scroll up\n\t\t\t\t\t// Positive values means scroll down\n\t\t\t\t\t// console.log(\"Scrolling with a mouse\", event.deltaY)\n\t\t\t\t\tthis.pinching_with_trackpad = false;\n\t\t\t\t\tthis.scrolling_with_trackpad = false;\n\t\t\t\t\tthis.scrolling_with_mouse = true;\n\n\t\t\t\t\tthis.wheel_delta = event.deltaY / Math.abs(event.deltaY);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//probably windows\n\t\t\tthis.pinching_with_trackpad = false;\n\t\t\tthis.scrolling_with_trackpad = false;\n\t\t\tthis.scrolling_with_mouse = true;\n\n\t\t\tif (Math.abs(event.deltaY) < 0.0001)\n\t\t\t\tthis.wheel_delta = 0;\n\t\t\telse\n\t\t\t\tthis.wheel_delta = event.deltaY / Math.abs(event.deltaY);\n\n\t\t}\n\t}\n\n\ton_mouse_down(inputs) {\n\t\tthis.mouse_pos.x = inputs[0].current.clientX;\n\t\tthis.mouse_pos.y = inputs[0].current.clientY;\n\n\t\tthis.multitouch_active = inputs.length > 1;\n\n\t\tthis.mouse_dir.x = 0;\n\t\tthis.mouse_dir.y = 0;\n\n\n\t\tthis.__clicked_time = this.__elapsed_time;\n\t\tthis.is_mouse_down = true;\n\t\tthis.is_mouse_up = false;\n\n\t\tswitch (inputs[0].current.originalEvent.which) {\n\t\t\tcase 1:\n\t\t\t\tthis.left_mouse_button_down = true;\n\t\t\t\tthis.left_mouse_button_pressed = true;\n\t\t\t\tbreak;\n\t\t\tcase 2: this.middle_mouse_button_down = true; break;\n\t\t\tcase 3:\n\t\t\t\tthis.right_mouse_button_down = true;\n\t\t\t\tthis.right_mouse_button_pressed = true;\n\t\t\t\tbreak;\n\t\t\tdefault: this.left_mouse_button_down = true; this.left_mouse_button_pressed = true; break;\n\t\t}\n\n\n\t\tthis.wheel_delta = 0;\n\t\tthis.previous_scale = 0;\n\t\tthis.previous_rotation = 0;\n\n\n\t}\n\n\tmouse_clicked() {\n\t\treturn this.tapped;\n\t}\n\n\ton_touch_move(e) {\n\t\tthis.on_mouse_move({ clientX: e.changedTouches[0].clientX, clientY: e.changedTouches[0].clientY})\n\t}\n\n\ton_touch_end(e) {\n\t\tthis.on_gesture_end([{ current: { originalEvent: e } }])\n\t}\n\n\ton_mouse_up(e) {\n\t\tthis.on_gesture_end([ { current: { originalEvent: e } } ])\n\t}\n\n\ton_gesture_end(inputs) {\n\t\tthis.multitouch_active = inputs ? (inputs.length > 1) : false;\n\t\tthis.is_mouse_up = true;\n\t\tthis.zoom_started = false;\n\t\tthis.touch_zoom = 1;\n\t\tthis.mouse_dir.x = 0;\n\t\tthis.mouse_dir.y = 0;\n\t\tthis.previous_scale = 0;\n\t\tthis.previous_rotation = 0;\n\t\tthis.wheel_delta = 0;\n\n\t\tthis.left_mouse_button_down = false;\n\t\tthis.middle_mouse_button_down = false;\n\t\tthis.right_mouse_button_down = false;\n\n\t\tif (inputs) {\n\t\t\tswitch (inputs[0].current.originalEvent.which) {\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.left_mouse_button_released = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.middle_mouse_button_released = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.right_mouse_button_released = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.left_mouse_button_released = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.is_mouse_down = false;\n\t\tthis.previous_rotation_dirty = true;\n\t\tthis.rotation_delta = 0;\n\t}\n\n\n\ton_focus_lost() {\n\t\tthis.on_gesture_end();\n\t\tthis.left_mouse_button_released = true;\n\t\tthis.middle_mouse_button_released = true;\n\t\tthis.right_mouse_button_released = true;\n\t\tthis.left_mouse_button_released = true;\n\n\t}\n\n\ttime_since_last_mouse_down() {\n\t\treturn this.__elapsed_time - this.__clicked_time;\n\t}\n\n\ton_mouse_move(event) {\n\t\tthis.mouse_pos.x = event.clientX;\n\t\tthis.mouse_pos.y = event.clientY;\n\n\t\tthis.mouse_dir.set(this.mouse_pos.x - this.previous_pos_x,\n\t\t\t\t\t\t\t\t\t\t\t this.mouse_pos.x - this.previous_pos_y);\n\n\t\tthis.mouse_dir.normalize();\n\n\t\tthis.previous_pos_x = this.mouse_pos.x;\n\t\tthis.previous_pos_y = this.mouse_pos.x;\n\t}\n\n\ton_mouse_move_zingtouch(event) {\n\t\tif (event.detail.data.length > 0) {\n\t\t\tthis.set_mouse_pos(event);\n\t\t\tthis.mouse_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\n\t\t\t// this.mouse_dir.x *=  Screen.height / Screen.width;\n\n\t\t\t// this.mouse_dir.multiplyScalar(this.__delta_time/window.devicePixelRatio);\n\t\t}\n\t}\n\n\tget_os() {\n\t\tvar userAgent = window.navigator.userAgent,\n\t\t\tplatform = window.navigator.platform,\n\t\t\tmacosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n\t\t\twindowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n\t\t\tiosPlatforms = ['iPhone', 'iPad', 'iPod'],\n\t\t\tos = null;\n\n\t\tif (macosPlatforms.indexOf(platform) !== -1) {\n\t\t\tos = 'mac';\n\t\t} else if (iosPlatforms.indexOf(platform) !== -1) {\n\t\t\tos = 'ios';\n\t\t} else if (windowsPlatforms.indexOf(platform) !== -1) {\n\t\t\tos = 'windows';\n\t\t} else if (/Android/.test(userAgent)) {\n\t\t\tos = 'android';\n\t\t} else if (!os && /Linux/.test(platform)) {\n\t\t\tos = 'linux';\n\t\t}\n\n\t\treturn os;\n\t}\n\n\tis_int(n) {\n\t\treturn n % 1 === 0;\n\t}\n\n\tclear() {\n\n\t\tthis.__elapsed_time = Time.elapsed_time;\n\t\tthis.__delta_time = Time.delta_time;\n\t\tthis.is_mouse_up = false;\n\t\tthis.wheel_delta = 0;\n\t\tthis.rotation_delta = 0;\n\n\t\tthis.double_click = false;\n\n\n\t\tthis.tapped = false;\n\t\tthis.mouse_dir.multiplyScalar(0);\n\t\tthis.multi_touch_dir.multiplyScalar(0);\n\t\tthis.left_mouse_button_pressed = false;\n\t\tthis.left_mouse_button_released = false;\n\n\t\tthis.right_mouse_button_pressed = false;\n\t\tthis.right_mouse_button_released = false;\n\t\tKeyboardInput.clear();\n\n\t}\n\n}\n\nconst INPUT = new Input();\nmodule.exports = INPUT;\n","export default class Sphere extends THREE.Mesh\n{\n\tconstructor(radius, color)\n\t{\n    color = color || \"#FF0000\";\n    radius = radius || 1;\n    let geometry = new THREE.SphereBufferGeometry( radius, 64, 64);\n    let material = new THREE.MeshBasicMaterial( {color: color} );\n\t\tsuper(geometry, material);\n\t}\n}","module.exports=\"#define GLSLIFY 1\\nvoid main()\\n{\\n  vec3 pos = position;\\n  mat4 MVP = projectionMatrix * modelViewMatrix;\\n\\n  gl_Position = MVP * vec4( pos, 1.0 );\\n  //gl_Position.zw -= 0.1;\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform vec3 _Color;\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(_Color, 1.0);\\n}\";","import vert from '/editor/shaders/object_picker_vert';\nimport frag from '/editor/shaders/object_picker_frag';\nexport default class Mesh extends THREE.Mesh\n{\n\tconstructor(geometry, material)\n\t{\n\t\tsuper(geometry, material);\n\n\t\tthis._selectable_material = this.__get_selectable_material();\n\t\tthis.original_material = this.material;\n\t\tthis.stored_layers = this.layers.mask;\n\t}\n\n\t__get_selectable_material()\n\t{\n\t\treturn new THREE.ShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\t_Color: {value: new THREE.Color()}\n\t\t\t},\n\t\t\tvertexShader: vert,\n      fragmentShader: frag\n\t\t});\n\t}\n\n\trestore_material()\n\t{\n\t\tthis.material = this.original_material;\n\t}\n\n\tstore_layer_state()\n\t{\n\t\tthis.stored_layers = this.layers.mask;\n\t}\n\trestore_layer_state()\n\t{\n\t\tthis.layers.mask = this.stored_layers;\n\t}\n\n\tget selectable_material()\n\t{\n\t\treturn this._selectable_material;\n\t}\n}\n","import Mesh from '/Mesh';\n\nexport default class Arrow extends Mesh\n{\n\tconstructor(color, length, dir)\n\t{\n\t\tcolor = color || \"#FF0000\";\n\t\tlength = length || 1;\n\n\t\tlet cone_height = 0.4;\n\t\tlet cylinder_height = length - cone_height;\n\t\tlet cylinder_geo = new THREE.CylinderBufferGeometry( 0.01, 0.01, cylinder_height, 32 );\n\t\tcylinder_geo.translate(0,cylinder_height/2,0);\n\t\tlet cone_geometry = new THREE.ConeBufferGeometry( 0.1, cone_height, 32 );\n\t\tcone_geometry.translate(0, cylinder_height+cone_height/2, 0);\n\t  let buffer_geometry = THREE.BufferGeometryUtils.mergeBufferGeometries([cylinder_geo, cone_geometry]);\n\t  buffer_geometry.rotateX(3.14/2);\n    let material = new THREE.MeshBasicMaterial( {color: color} );\n\t\tsuper(buffer_geometry, material);\n\n\t\tif(dir)\n\t\t\tthis.quaternion.setFromUnitVectors(new THREE.Vector3(0,0,1), dir);\n\t}\n\n\tset dir(dir)\n\t{\n\t\tthis.quaternion.setFromUnitVectors(new THREE.Vector3(0,0,1), dir);\n\t}\n\tset length(value)\n\t{\n\t\tthis.scale.z = value;\n\t}\n}\n","class SceneManager\n{\n\tconstructor()\n\t{\n\t\tthis._current = new THREE.Scene();\n\t\tthis._current.name = \"default_scene\";\n\n\t}\n\n\tadd_scene(name)\n\t{\n\n\t}\n\n\tget current()\n\t{\n\t\treturn this._current;\n\t}\n\n\tset current(scene)\n\t{\n\t\tthis._current = scene;\n\t}\n}\n\nconst scene_manager = new SceneManager();\nmodule.exports = scene_manager;","export default class MathUtilities\n{\n\tconstructor(){}\n\n\tstatic linear_map(value,\n             from_range_start_value,\n             from_range_end_value,\n             to_range_start_value,\n             to_range_end_value)\n  {\n      return ((value - from_range_start_value)/ (from_range_end_value - from_range_start_value)) * (to_range_end_value - to_range_start_value) + to_range_start_value;\n  }\n\n  static between(value, min, max)\n  {\n\t\treturn (value >= min && value <= max)\n\n  }\n\n  static rgb_to_hex(rgb) {\n    rgb.r = Math.round(rgb.r * 255).toString(16);\n    rgb.g = Math.round(rgb.g * 255).toString(16);\n    rgb.b = Math.round(rgb.b * 255).toString(16);\n\n    if (rgb.r.length == 1)\n      rgb.r = \"0\" + rgb.r;\n    if (rgb.g.length == 1)\n      rgb.g = \"0\" + rgb.g;\n    if (rgb.b.length == 1)\n      rgb.b = \"0\" + rgb.b;\n\n    return \"#\" + rgb.r + rgb.g + rgb.b;\n  }\n\n  static project_points_on_plane(points, plane)\n  {\n    let projected_point = new THREE.Vector3();\n    let points_on_plane = [];\n    for(let i=0; i< points.length; i++)\n    {\n      plane.projectPoint(points[i], projected_point);\n      points_on_plane.push(projected_point.clone());\n    }\n\n    return points_on_plane;\n  }\n\n  static matrix4_lerp(from,to,target, t)\n  {\n    for(let i=0; i< 16; i++)\n    {\n      target.elements[i] = THREE.Math.lerp(from.elements[i], to.elements[i], t);\n    }\n  }\n\n  static equals(x1, x2) {\n    return Math.abs(x1 - x2) < 0.000001\n  }\n\n  static perspective_divide(v)\n  {\n    v.x /= v.w;\n    v.y /= v.w;\n    v.z /= v.w;\n    return v;\n  }\n\n  static points_average(points)\n  {\n    let center = points[0].clone();\n    for(let i=1; i< points.length; i++)\n    {\n      center.add(points[i]);\n    }\n    center.multiplyScalar(1/points.length);\n    return center;\n  }\n}\n","import CameraManager from '/CameraManager';\nimport Input from '/Input';\nimport Sphere from '/primitives/Sphere';\nimport Arrow from '/primitives/Arrow';\nimport SceneManager from '/SceneManager';\nimport MathUtilities from '/utilities/MathUtilities';\nimport Screen from '/Screen';\n\nclass CameraUtilities\n{\n\tconstructor()\n\t{\n\t\tthis.tmp_mat = new THREE.Matrix4();\n\t\tthis.tmp_vec = new THREE.Vector3(0,0,1);\n\t\tthis.tmp_vec2 = new THREE.Vector3(0,0,0);\n\t\tthis.plane = new THREE.Plane();\n\t\tthis.ray = new THREE.Ray();\n\n    this.tmp_size = new THREE.Vector3();\n    this.tmp_unproj = new THREE.Vector3();\n\t}\n\n  get_up_dir(camera) {\n    camera = camera || CameraManager.current;\n    this.tmp_vec.set(0, 1, 0);\n    this.tmp_vec.applyQuaternion(camera.quaternion);\n\n    return this.tmp_vec;\n  }\n\tget_forward_dir(camera)\n\t{\n    camera = camera || CameraManager.current;\n\t\tthis.tmp_vec.set(0,0,1);\n\t\tthis.tmp_vec.applyQuaternion(camera.quaternion);\n\n\t\treturn this.tmp_vec;\n\n\t}\n\tget_right_dir(camera)\n\t{\n    camera = camera || CameraManager.current;\n\t\tthis.tmp_vec.set(1,0,0);\n  \t\tthis.tmp_vec.applyQuaternion(camera.quaternion);\n  \t\treturn this.tmp_vec;\n\n\t}\n\n\tunproject_mouse_position(NDC, camera)\n  {\n    camera = camera || CameraManager.current;\n    let v_fov = (camera.fov/2) * Math.PI/180;\n    let h_fov = (2 * Math.atan(Math.tan(v_fov) * camera.aspect))/2;\n\n\n    let distV = Math.tan(v_fov) * camera.far;\n    let distH = Math.tan(h_fov) * camera.far;\n\n    this.tmp_vec.set(distH * NDC.x , distV * NDC.y, -camera.far).normalize();\n\n    return this.tmp_vec.applyQuaternion(camera.quaternion);\n  }\n\n  get_plane_intersection(plane_position, plane_normal, NDC, camera)\n  {\n    camera = camera || CameraManager.current;\n    NDC = NDC || Input.normalized_mouse_pos;\n\n\t\tthis.plane.setFromNormalAndCoplanarPoint(plane_normal || this.get_forward_dir(camera), plane_position);\n    if(camera.isPerspectiveCamera)\n    {\n      this.ray.set(camera.position, this.unproject_mouse_position(NDC, camera));\n    }\n    else\n    {\n      this.tmp_unproj.set(NDC.x, NDC.y, 1).unproject(camera);\n      this.ray.set(camera.position, this.tmp_unproj);\n    }\n\n    this.ray.intersectPlane(this.plane, this.tmp_vec2);\n    return this.tmp_vec2;\n  }\n\n\n\n\n  fit_points_on_camera(points, zoom_scale = 1)\n  {\n    let points_sphere = new THREE.Sphere().setFromPoints(points);\n    let world_space_center = points_sphere.center;\n    let camera_forward = this.get_forward_dir(CameraManager.current).clone();\n\n    let plane = new THREE.Plane().setFromNormalAndCoplanarPoint(camera_forward, world_space_center);\n\n\n\n    let points_on_plane = MathUtilities.project_points_on_plane(points, plane)\n\n    let projected_points_center = new THREE.Vector3();\n    let box =  new THREE.Box3().setFromPoints(points_on_plane);\n    box.getCenter(projected_points_center);\n\n\n    let up = new THREE.Vector3(0,1,0).applyQuaternion(CameraManager.current.quaternion)\n    let right = up.clone().cross(camera_forward).normalize();\n    let mat = new THREE.Matrix4().set(  right.x, up.x, camera_forward.x, world_space_center.x,\n                                        right.y, up.y, camera_forward.y, world_space_center.y,\n                                        right.z, up.z, camera_forward.z, world_space_center.z,\n                                              0,    0,                0,        1);\n\n    let inverse_mat = new THREE.Matrix4().getInverse(mat);\n    for(let i=0; i< points_on_plane.length; i++)\n    {\n      points_on_plane[i].applyMatrix4(inverse_mat);\n    }\n\n\n    let size = new THREE.Vector3();\n    box =  new THREE.Box3().setFromPoints(points_on_plane);\n    box.getSize(size);\n    size.multiplyScalar(zoom_scale);\n    let projected_center = new THREE.Vector3();\n    box.getCenter(projected_center);\n\n\n    return {\n      position: projected_points_center,\n      zoom: this.get_zoom_to_fit_rect(size.x/2, size.y/2)\n    }\n\n  }\n\n  get_zoom_to_fit_rect(width,height)\n  {\n    let v_fov = (CameraManager.current.fov/2) * Math.PI/180;\n    let h_fov = (2 * Math.atan(Math.tan(v_fov) * CameraManager.current.aspect))/2;\n\n    let distV = height / Math.tan(v_fov);\n    let distH = width / Math.tan(h_fov);\n\n    return Math.max(Math.abs(distH), Math.abs(distV));\n  }\n\n  get_zoom_to_fit_box(bb, camera)\n  {\n    if(camera.isOrthographicCamera)\n    {\n      bb.getSize(this.tmp_size);\n\n      let obj_x = this.tmp_size.x;\n      let obj_y = this.tmp_size.y;\n      let object_aspect = obj_x / obj_y;\n      if(Screen.aspect_ratio / object_aspect > 1)\n      {\n        return Screen.height/obj_y;\n      }\n      else\n      {\n        return Screen.width/obj_x;\n      }\n    }\n    else\n    {\n      // return this.fit_points_on_camera([bb.min, bb.max], 1).zoom;\n      let size = new THREE.Vector3();\n      bb.getSize(size);\n      return this.get_zoom_to_fit_rect(size.x, size.y);\n\n    }\n  }\n\n  get_html_screen_pos(object, camera)\n  {\n    object.getWorldPosition(this.tmp_vec);\n    this.tmp_vec.project(camera);\n\n    this.tmp_vec.x = (this.tmp_vec.x * 0.5 + 0.5) * (Screen.width);\n    this.tmp_vec.y = (1-(this.tmp_vec.y * 0.5 + 0.5)) * Screen.height;\n    return this.tmp_vec;\n  }\n\n  world_pos_to_screen(pos, camera)\n  {\n  \tcamera = camera || CameraManager.current;\n    this.tmp_vec.copy(pos);\n    this.tmp_vec.project(camera);\n\n    this.tmp_vec.x = (this.tmp_vec.x * 0.5 + 0.5) * (Screen.width);\n    this.tmp_vec.y = (1-(this.tmp_vec.y * 0.5 + 0.5)) * Screen.height;\n    return this.tmp_vec;\n  }\n\n  update_projection(camera)\n  {\n    camera.left   = -Screen.width/2;\n    camera.right  = Screen.width/2;\n    camera.top    = Screen.height/2;\n    camera.bottom = -Screen.height/2;\n    camera.aspect = Screen.aspect_ratio;\n    camera.updateProjectionMatrix(true);\n  }\n}\n\nconst camera_utilities = new CameraUtilities();\nmodule.exports = camera_utilities;\n","class Capabilities\n{\n\tconstructor()\n\t{\n\t\tthis.max_anisotropy = 0;\n\t\tthis.vertex_texture_sampler_available = false;\n\t\tthis.fp_textures_available = false;\n\t}\n}\n\nconst capabilities = new Capabilities();\nmodule.exports = capabilities;\n","module.exports=\"#define GLSLIFY 1\\nuniform vec3 _Color;\\n\\nvarying vec3 vBarycentric;\\n\\nfloat edgeFactor(vec3 baryc ){\\n    vec3 d = fwidth(baryc);\\n    vec3 a3 = smoothstep(vec3(0.0), d*1.5, baryc);\\n    return min(min(a3.x, a3.y), a3.z);\\n}\\n\\nvoid main()\\n{\\t\\n\\tfloat alpha = edgeFactor(vBarycentric + vec3(1. , 1., 0.));\\n\\tgl_FragColor.rgb = mix(_Color, vec3(0.), alpha);\\n\\tgl_FragColor.a = 1.0 - alpha;\\n\\tgl_FragColor.a *= 0.2;\\n}\";","module.exports=\"#define GLSLIFY 1\\nattribute vec3 barycentric;\\nvarying vec3 vBarycentric;\\nvoid main()\\n{\\n\\n  mat4 VP = projectionMatrix * viewMatrix;\\n  vec3 pos = (modelMatrix * vec4(position, 1.0)).xyz;\\n  gl_Position = VP * vec4(pos, 1.0);\\n  vBarycentric = barycentric;\\n}\";","export default class GeometryUtilities\n{\n\tstatic convert_to_non_indexed_geometry(geometry_buffer)\n\t{\n\t\tlet indices = geometry_buffer.index;\n\t\tlet positions = geometry_buffer.getAttribute(\"position\");\n\n\t\tlet bar_coordinates = [];\n\t\tlet vertices = [];\n\n\t\tfor(let i=0; i< indices.count; i+=3)\n\t\t{\n\t\t\t// VERTEX 1\n\t\t\tvertices.push(positions.getX(indices.array[i+0]));\n\t\t\tvertices.push(positions.getY(indices.array[i+0]));\n\t\t\tvertices.push(positions.getZ(indices.array[i+0]));\n\n\t\t\tbar_coordinates.push(1);\n\t\t\tbar_coordinates.push(0);\n\t\t\tbar_coordinates.push(0);\n\n\n\t\t\t// VERTEX 2\n\n\t\t\tvertices.push(positions.getX(indices.array[i+1]));\n\t\t\tvertices.push(positions.getY(indices.array[i+1]));\n\t\t\tvertices.push(positions.getZ(indices.array[i+1]));\n\n\t\t\tbar_coordinates.push(0);\n\t\t\tbar_coordinates.push(1);\n\t\t\tbar_coordinates.push(0);\n\n\n\t\t\t// VERTEX 3\n\n\t\t\tvertices.push(positions.getX(indices.array[i+2]));\n\t\t\tvertices.push(positions.getY(indices.array[i+2]));\n\t\t\tvertices.push(positions.getZ(indices.array[i+2]));\n\n\t\t\tbar_coordinates.push(0);\n\t\t\tbar_coordinates.push(0);\n\t\t\tbar_coordinates.push(1);\n\n\n\t\t}\n\n\t\tlet geometry = new THREE.BufferGeometry();\n\t\t// geometry.setAttribute('barycentric', new THREE.BufferAttribute( new Float32Array(bar_coordinates), 3 ));\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute( new Float32Array(vertices), 3 ) );\n\t\tGeometryUtilities.add_barycentric_attribute(geometry);\n\t\treturn geometry;\n\t}\n\n\tstatic add_barycentric_attribute(non_indexed_geometry_buffer)\n\t{\n\t\tlet bar_coordinates = [];\n\t\tlet positions = non_indexed_geometry_buffer.getAttribute(\"position\");\n\n\t\tfor(let i=0; i< positions.count; i+=3)\n\t\t{\n\t\t\tbar_coordinates.push(1);\n\t\t\tbar_coordinates.push(0);\n\t\t\tbar_coordinates.push(0);\n\n\t\t\tbar_coordinates.push(0);\n\t\t\tbar_coordinates.push(1);\n\t\t\tbar_coordinates.push(0);\n\n\t\t\tbar_coordinates.push(0);\n\t\t\tbar_coordinates.push(0);\n\t\t\tbar_coordinates.push(1);\n\n\t\t}\n\t\tnon_indexed_geometry_buffer.setAttribute('barycentric', new THREE.BufferAttribute( new Float32Array(bar_coordinates), 3 ));\n\t}\n}\n","import grid_frag from '/shaders/grid/grid_frag';\nimport grid_vert from '/shaders/grid/grid_vert';\nimport GeometryUtilities from '/utilities/GeometryUtilities';\n\nexport default class Grid extends THREE.Mesh {\n\tconstructor()\n\t{\n\n\t\tlet material = new THREE.ShaderMaterial({\n      uniforms: {\n      \t_Color: {value: new THREE.Color(\"#919191\")}\n      },\n      vertexShader: grid_vert,\n      fragmentShader: grid_frag,\n      extensions: {derivatives: true},\n      transparent: true,\n      depthWrite: false\n    });\n\n\n    let plane_geometry = new THREE.PlaneBufferGeometry( 100, 100, 100,100 );\n\n\t\tlet non_indexed_geometry = GeometryUtilities.convert_to_non_indexed_geometry(plane_geometry);\n\n\t\tsuper(non_indexed_geometry, material);\n\n\t\tthis.rotation.x = -3.14/2;\n\t}\n\n}\n","export default class BaseRender\n{\n\tconstructor()\n\t{\n\n\t}\n\n\trender()\n\t{\n\t\t\n\t}\n\n\ton_enter(context, renderer)\n\t{\n\n\t}\n\n\ton_exit(context, renderer)\n\t{\n\t\t\n\t}\n\n\tresize()\n\t{\n\t\t\n\t}\n\n}\n"," \nexport default class RenderLayers {\n  constructor() {\n\n  }\n\n  static get opaque()            { return 0; }\n  static get transparent()       { return 1; }\n  static get outline()       \t\t { return 2; }\n  static get selectable()\t\t\t\t { return 3; }\n\n\n}\n\n\n\n","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform sampler2D _Blur;\\nuniform vec2 _Screen;\\nvarying vec2 vUv;\\n\\nfloat aastep(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\nvoid main()\\n{\\n\\tvec2 pixel_size = 1.0/_Screen;\\n\\n\\tvec4 color = texture2D( _MainTex, vUv);\\n\\tfloat mask = 1.0 - color.a;\\n\\n\\tfloat blur = texture2D( _Blur, vUv).a;\\n\\n  // gl_FragColor = vec4(mask,mask,mask,0.0);\\n  // gl_FragColor = color;\\n\\n\\tgl_FragColor = vec4(mix(color.rgb, mix(color.rgb, vec3(1.,0.,0.),aastep(0.076, blur)), mask), 1.0);\\n}\\n\\n\";","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform vec2 _Resolution;\\nuniform vec2 _SampleDir;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n\\n\\tvec3 sum = vec3(0.,0.,0.);\\n\\tvec2 dir = (0.5/_Resolution) * _SampleDir;\\n\\tfloat _Distance = 2.0;\\n\\tsum += texture2D( _MainTex, vUv + dir * -4. * _Distance ).rgb * 0.0525;\\n\\tsum += texture2D( _MainTex, vUv + dir * -3. * _Distance ).rgb * 0.075;\\n\\tsum += texture2D( _MainTex, vUv + dir * -2. * _Distance ).rgb * 0.110;\\n\\tsum += texture2D( _MainTex, vUv + dir * -1. * _Distance ).rgb * 0.150;\\n\\tsum += texture2D( _MainTex, vUv + dir *  0. * _Distance ).rgb * 0.225;\\n\\tsum += texture2D( _MainTex, vUv + dir *  1. * _Distance ).rgb * 0.150;\\n\\tsum += texture2D( _MainTex, vUv + dir *  2. * _Distance ).rgb * 0.110;\\n\\tsum += texture2D( _MainTex, vUv + dir *  3. * _Distance ).rgb * 0.075;\\n\\tsum += texture2D( _MainTex, vUv + dir *  4. * _Distance ).rgb * 0.0525;\\n\\tgl_FragColor = vec4(sum, 1.0);\\n\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\n\\nvarying vec2 vUv;\\nvoid main()\\n{\\n\\tgl_FragColor = texture2D(_MainTex, vUv);\\n}\";","module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvoid main()\\n{\\n\\tgl_Position = vec4(uv * 2.0 - 1.0, 1.0, 1.0);\\n\\tvUv = uv;\\n}\";","import Screen from '/Screen';\nimport RenderLayers from '/RenderLayers';\n\nimport compose_frag from '/shaders/box_blur/compose_frag';\nimport box_blur_frag from '/shaders/box_blur/box_blur_frag';\nimport copy_frag from '/shaders/copy/copy_frag';\nimport copy_vert from '/shaders/copy/copy_vert';\nimport background_frag from '/shaders/basic_color/basic_color_frag';\n\nexport default class OutlineRender\n{\n\n\tconstructor(webgl)\n\t{\n\t\tthis.main_rt \t\t\t\t= new THREE.WebGLRenderTarget(Screen.width, Screen.height);\n\t\tthis.rt1\t\t \t\t\t\t= new THREE.WebGLRenderTarget(Screen.width, Screen.height);\n\t\tthis.rt2\t\t \t\t\t\t= new THREE.WebGLRenderTarget(Screen.width, Screen.height);\n\n\n    this.compose_material \t\t= this.__get_compose_material();\n    this.copy_material \t\t\t\t= this.__get_copy_material();\n    this.box_blur_material \t\t= this.__get_box_blur_material();\n    this.background_material \t= this.__get_background_material();\n\n\t\tthis.copy_plane = new THREE.Mesh( new THREE.PlaneGeometry(1,1), this.copy_material );\n\t\tthis.copy_plane.frustumCulled = false;\n\t\tthis.copy_scene = new THREE.Scene();\n\t\tthis.copy_scene.add(this.copy_plane);\n\n\t}\n\n\tresize(w,h)\n\t{\n\t\tthis.main_rt.setSize(w,h);\n\t\tthis.rt1.setSize(w,h);\n\t\tthis.rt2.setSize(w,h);\n\t\tthis.box_blur_material.uniforms._Screen.value.set(w,h);\n\t\tthis.compose_material.uniforms._Screen.value.set(w,h);\n\t}\n\n\n\trender(webgl)\n\t{\n\t\twebgl.camera.updateMatrix();\n\t\twebgl.camera.updateMatrixWorld();\n\n\t\twebgl.camera.layers.enable(RenderLayers.opaque);\n\t\twebgl.camera.layers.enable(RenderLayers.transparent);\n\t\twebgl.camera.layers.disable(RenderLayers.outline);\n\n\t\t//render scene\n\t\twebgl._renderer.setClearColor(webgl.clear_color, 0);\n\t\twebgl._renderer.clearTarget(this.main_rt,true,true,true);\n\n\t\tthis.copy_scene.overrideMaterial = this.background_material;\n\t\tthis.background_material.uniforms._Color.value.set(webgl.clear_color.r, webgl.clear_color.g, webgl.clear_color.b, 0);\n\t\twebgl._renderer.render(this.copy_scene, webgl.camera, this.main_rt, false);\n\n\n\t\twebgl._renderer.render(webgl.scene, webgl.camera, this.main_rt, false);\n\n\n\n\n\t\t//horizontal blur\n\t\tthis.box_blur_material.uniforms._MainTex.value = this.main_rt.texture;\n\t\tthis.box_blur_material.uniforms._SampleDir.value.set(1,0);\n\n\t\tthis.copy_scene.overrideMaterial = this.box_blur_material;\n\t\twebgl._renderer.render(this.copy_scene, webgl.camera, this.rt1, false);\n\n\t\t//vertical blur\n\t\tthis.box_blur_material.uniforms._SampleDir.value.set(0,1);\n\t\tthis.box_blur_material.uniforms._MainTex.value = this.rt1.texture;\n\n\t\twebgl._renderer.render(this.copy_scene, webgl.camera, this.rt2, false);\n\n\n\t\t//compose\n\t\tthis.copy_scene.overrideMaterial = this.compose_material;\n\t\tthis.compose_material.uniforms._MainTex.value = this.main_rt.texture;\n\t\tthis.compose_material.uniforms._Blur.value = this.rt2.texture;\n\t\twebgl._renderer.render(this.copy_scene, webgl.camera, undefined, false);\n\t\tthis.copy_scene.overrideMaterial = undefined;\n\t}\n\n\t__get_copy_material()\n\t{\n\t\treturn new THREE.ShaderMaterial({\n      uniforms: {\n        _MainTex: \t\t\t{value : undefined}\n      },\n      vertexShader: copy_vert,\n      fragmentShader: copy_frag,\n      depthTest: false,\n      depthWrite: false\n    });\n\t}\n\n\t__get_box_blur_material()\n\t{\n \t\treturn new THREE.ShaderMaterial({\n      uniforms: {\n        _MainTex: \t\t\t{value : undefined},\n        _SampleDir: \t\t{value : new THREE.Vector2()},\n        _Screen: \t\t\t\t{value : new THREE.Vector2(Screen.width, Screen.height)}\n      },\n      vertexShader: copy_vert,\n      fragmentShader: box_blur_frag,\n      depthTest: false,\n      depthWrite: false\n    });\n\t}\n\n\t__get_compose_material()\n\t{\n\t\treturn new THREE.ShaderMaterial({\n      uniforms: {\n        _MainTex: \t\t\t{value : undefined},\n        _Blur: \t\t\t\t\t{value : undefined},\n        _Screen: \t\t\t\t{value : new THREE.Vector2(Screen.width, Screen.height)}\n      },\n      vertexShader: copy_vert,\n      fragmentShader: compose_frag,\n      depthTest: false,\n      depthWrite: false,\n      extensions: {\n      \tderivatives: true\n      }\n    });\n\t}\n\n\t__get_background_material()\n\t{\n\t\treturn new THREE.ShaderMaterial({\n      uniforms: {\n        _Color: \t\t\t\t{value : new THREE.Vector4(0,0,0,0)}\n      },\n      vertexShader: copy_vert,\n      fragmentShader: background_frag,\n      depthTest: true,\n      depthWrite: false\n\n    });\n\t}\n\n\ton_enter(webgl)\n\t{\n\t\twebgl._renderer.autoClear = false;\n\t}\n\n\ton_exit(webgl)\n\t{\n\t\twebgl._renderer.autoClear = true;\n\t}\n}\n","import vert from '/shaders/copy/copy_vert';\nimport frag from '/shaders/copy/copy_frag';\n\nexport default class BlitMaterial extends THREE.ShaderMaterial\n{\n\tconstructor(frag_shader, vert_shader, defines)\n\t{\n\t\tsuper({\n\t\t\tuniforms: {\n\t\t\t\t_MainTex: {value: null},\n        _Resolution:{value: new THREE.Vector2(0,0)}\n\t\t\t},\n\t\t\tdefines: defines || {},\n\t\t\tvertexShader: vert_shader || vert,\n\t\t\tfragmentShader: frag_shader || frag,\n\t\t\tdepthWrite: false,\n      blending: THREE.NoBlending,\n      depthTest: false,\n      depthWrite: false,\n      depthFunc: THREE.AlwaysDepth\n\t\t});\n\t}\n\n}\n","module.exports=\"#define GLSLIFY 1\\nuniform vec4 _DepthNormal;\\nvec2 EncodeFloatRG( float v )\\n{\\n    vec2 kEncodeMul = vec2(1.0, 255.0);\\n    float kEncodeBit = 1.0/255.0;\\n    vec2 enc = kEncodeMul * v;\\n    enc = fract (enc);\\n    enc.x -= enc.y * kEncodeBit;\\n    return enc;\\n}\\n\\nvec2 EncodeNormal (vec3 n)\\n{\\n    float scale = 1.7777;\\n    vec2 enc = n.xy / (n.z+1.0);\\n    enc /= scale;\\n    enc = enc*0.5+0.5;\\n    return enc;\\n}\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(EncodeFloatRG(_DepthNormal.x), EncodeNormal(normalize(_DepthNormal.yzw)));  \\n}\";","import BlitMaterial from '/materials/BlitMaterial';\nimport frag from '/shaders/clear/clear_depth_normal_frag';\n\nexport default class ClearDepthNormalMaterial extends BlitMaterial\n{\n\tconstructor(clear_depth, clear_normal)\n\t{\n\t\tsuper(frag);\n\t\tthis.uniforms._DepthNormal = {value: new THREE.Vector4(clear_depth, clear_normal.x, clear_normal.y, clear_normal.z)};\n\t}\n\n}\n","module.exports=\"#define GLSLIFY 1\\nvarying vec3 v_normal;\\nvarying vec3 v_pos;\\n\\nvoid main()\\n{\\n  vec3 pos = position;\\n  mat4 MVP = projectionMatrix * modelViewMatrix;\\n\\n  v_normal \\t= (modelViewMatrix * vec4(normal, 0.0)).xyz;\\n  v_pos \\t\\t= (modelViewMatrix * vec4( pos, 1.0 )).xyz;\\n\\n  gl_Position = MVP * vec4( pos, 1.0 );\\n}\";","module.exports=\"#define GLSLIFY 1\\nvarying vec3 v_normal;\\nvarying vec3 v_pos;\\n\\nuniform float _FarPlane;\\n\\nvec2 EncodeFloatRG( float v )\\n{\\n    vec2 kEncodeMul = vec2(1.0, 255.0);\\n    float kEncodeBit = 1.0/255.0;\\n    vec2 enc = kEncodeMul * v;\\n    enc = fract (enc);\\n    enc.x -= enc.y * kEncodeBit;\\n    return enc;\\n}\\n\\nvec2 EncodeNormal (vec3 n)\\n{\\n    float scale = 1.7777;\\n    vec2 enc = n.xy / (n.z+1.0);\\n    enc /= scale;\\n    enc = enc*0.5+0.5;\\n    return enc;\\n}\\n\\nvoid main()\\n{\\n\\tgl_FragColor = vec4(EncodeFloatRG(length(v_pos.z)/_FarPlane), EncodeNormal(normalize(v_normal)));\\t\\n}\\n\\n\";","import vert from '/shaders/depth_normals/depth_normals_vert';\nimport frag from '/shaders/depth_normals/depth_normals_frag';\n\nexport default class DepthNormalMaterial extends THREE.ShaderMaterial\n{\n\tconstructor()\n\t{\n\t\tsuper({\n      uniforms: {\n      \t_FarPlane: {value: 1}\n      },\n      vertexShader: vert,\n      fragmentShader: frag\n    });\n\t}\n\n\tset far_plane(value)\n\t{\n\t\tthis.uniforms._FarPlane.value = value;\n\t}\n\n}\n","import CameraManager from '/CameraManager';\nimport SceneManager from '/SceneManager';\nimport Screen from '/Screen';\n\nimport ClearDepthNormalMaterial from '/materials/ClearDepthNormalMaterial';\nimport DepthNormalMaterial from '/materials/DepthNormalMaterial';\n\nexport default class DepthAndNormalsRenderer\n{\n\tconstructor()\n\t{\n    this.RT = new THREE.WebGLRenderTarget(Screen.width, Screen.height);\n\n    this.clear_depth_normal_mat = new ClearDepthNormalMaterial(1, new THREE.Vector3(0,0,1));\n    this.depth_normal_material = new DepthNormalMaterial();\n\t}\n\n\n\trender(graphics)\n\t{\n\t\tthis.__resize_RT_if_necessary();\n\n\n    graphics.clear(this.RT, undefined, true,true)\n\n    graphics.blit_clear_with_material(this.RT, this.clear_depth_normal_mat);\n\n    this.depth_normal_material.far_plane = CameraManager.current.far;\n\n    graphics.render(undefined, undefined, this.RT, this.depth_normal_material);\n\n\t}\n\n  __resize_RT_if_necessary()\n  {\n    if(this.RT.width !== Screen.width || this.RT.height !== Screen.height)\n    {\n      this.RT.setSize(Screen.width, Screen.height);\n    }\n  }\n\n\tget render_target()\n\t{\n\t\treturn this.RT;\n\t}\n\n}\n","import BlitMaterial from '/materials/BlitMaterial';\n\nexport default class Blitter\n{\n\n  constructor(renderer)\n  {\n      this.renderer = renderer;\n      this._blit_scene = new THREE.Scene();\n      this._blit_material = new BlitMaterial();\n      this._blit_quad = new THREE.Mesh(\n        new THREE.PlaneBufferGeometry( 1, 1 ),this._blit_material );\n      this._blit_scene.add( this._blit_quad );\n      this._blit_camera = new THREE.OrthographicCamera( -1, 1, 1, -1, -10000, 10000 );\n\n  }\n\n\n  blit(src, dst)\n  {\n    this._blit_quad.material = this._blit_material;\n    this._blit_quad.material.uniforms._MainTex.value = src.texture;\n    this._blit_quad.material.uniforms._Resolution.value.set(src.width, src.height);\n\n    this.renderer.setRenderTarget(dst === undefined? null : dst);\n\n    this.renderer.render( this._blit_scene,\n                          this._blit_camera);\n  }\n\n  blit_with_material(src, dst, mat)\n  {\n    this._blit_quad.material = mat;\n    this._blit_quad.material.uniforms._MainTex.value = src.texture;\n    this._blit_quad.material.uniforms._Resolution.value.set(src.width, src.height);\n\n    this.renderer.setRenderTarget(dst === undefined? null : dst);\n\n    this.renderer.render( this._blit_scene,\n                          this._blit_camera );\n  }\n\n  blit_clear_with_material(dst_RT, mat)\n  {\n    this._blit_quad.material = mat;\n\n    this.renderer.setRenderTarget(dst_RT === undefined? null : dst_RT);\n\n    this.renderer.render( this._blit_scene, this._blit_camera);\n  }\n\n}\n","import Configuration from           '/Configuration';\nimport BaseRender from   '/render_mode/BaseRender';\nimport OutlineRender from           '/render_mode/OutlineRender';\nimport Screen from '/Screen';\nimport CameraManager from '/CameraManager';\nimport SceneManager from '/SceneManager';\nimport Capabilities from '/Capabilities';\nimport DepthAndNormalsRenderer from '/render_utilities/DepthAndNormalsRenderer';\nimport Blitter from '/render_utilities/Blitter';\n\nclass Graphics {\n\n\n  constructor() {\n    this._renderer = undefined;\n    this.blitter = undefined;\n    this.canvas = undefined;\n    this.no_render = undefined;\n    this.current_render_mode = undefined;\n    this.generateDepthNormalTexture = false;\n    this.depth_and_normals_renderer = undefined;\n  }\n\n  init(canvas, msaa = true) {\n    this._renderer = new THREE.WebGLRenderer({\n      antialias: msaa,\n      preserveDrawingBuffer: true,\n      alpha: true,\n      canvas: canvas\n    });\n\n    this._renderer.autoClear = false;\n\n    this._renderer.setPixelRatio(1);\n\n    Screen.dpr = window.devicePixelRatio;\n\n\t\tthis._renderer.extensions.get( 'ANGLE_instanced_arrays' )\n\n    this.blitter = new Blitter(this._renderer);\n\n    this.canvas = this._renderer.domElement;\n\n    this.no_render = new BaseRender();\n\n    this.current_render_mode = this.no_render;\n\n    Capabilities.max_anisotropy = this._renderer.capabilities.getMaxAnisotropy();\n    Capabilities.vertex_texture_sampler_available = this._renderer.capabilities.maxVertexTextures > 0;\n    Capabilities.fp_textures_available = this._renderer.capabilities.floatVertexTextures;\n\n    this.generateDepthNormalTexture = false;\n\n    this.depth_and_normals_renderer = new DepthAndNormalsRenderer();\n\n  }\n\n  get dom_element()\n  {\n    return this._renderer.domElement;\n  }\n\n  get depth_normals_RT()\n  {\n    return this.depth_and_normals_renderer.render_target;\n  }\n\n\n  set_state(new_state)\n  {\n    console.log(\"VIEWAPI - map render mode switch to: \" + new_state.constructor.name);\n\n    this.current_render_mode.on_exit(this, this._renderer);\n    this.current_render_mode = new_state;\n    this.current_render_mode.on_enter(this, this._renderer);\n  }\n\n  update() {\n    this.check_for_resize();\n\n    if(this.generateDepthNormalTexture)\n    {\n      this.depth_and_normals_renderer.render(this);\n    }\n\n    if(CameraManager.current)\n    {\n      this.__update_current_camera();\n      this.current_render_mode.render();\n    }\n  }\n\n  __update_current_camera()\n  {\n    CameraManager.current.aspect = Screen.aspect_ratio;\n    CameraManager.current.updateProjectionMatrix();\n    CameraManager.current.updateMatrix();\n    CameraManager.current.updateMatrixWorld(true);\n  }\n\n\n\n  render(scene, camera, RT, override_mat)\n  {\n    this.__apply_override_material(scene, override_mat);\n\n    this._renderer.setRenderTarget(RT === undefined? null : RT);\n    this._renderer.render(scene  || SceneManager.current,\n                          camera || CameraManager.current);\n\n    this.__apply_override_material(scene, undefined);\n\n\n  }\n\n  __apply_override_material(scene, mat)\n  {\n    if(scene)\n      scene.overrideMaterial = mat;\n    else\n      SceneManager.current.overrideMaterial = mat;\n  }\n\n  readback_RT(RT, buffer)\n  {\n    this._renderer.readRenderTargetPixels( RT, 0, 0, RT.width, RT.height, buffer);\n  }\n\n  clear(RT, camera, clear_depth, clear_stencil)\n  {\n    this._renderer.setRenderTarget(RT === undefined? null : RT);\n\n    if(camera)\n    {\n      this._renderer.setClearColor(camera.clear_color, camera.clear_alpha);\n    }\n\n    this._renderer.clear( camera?         true : false, // clear color\n                          clear_depth?    true : false,\n                          clear_stencil?  true : false);\n  }\n\n  check_for_resize()\n  {\n\n    let current_width   = this.canvas.clientWidth;\n    let current_height  = this.canvas.clientHeight;\n\n    if (\n          current_width  !== Screen.width  ||\n          current_height !== Screen.height ||\n          window.devicePixelRatio !== Screen.dpr\n        )\n    {\n      Screen.dpr = window.devicePixelRatio;\n      Screen.update_size(current_width, current_height);\n\n      this.canvas.width  = Screen.render_width;\n      this.canvas.height = Screen.render_height;\n      this._renderer.setViewport(0, 0, Screen.render_width, Screen.render_height);\n\n      this.__update_current_camera();\n    }\n  }\n\n  on_resize() {\n    console.error(\"Graphics.on_resize call no longer needed.\")\n  }\n\n\n  blit(src_RT, dst_RT, mat)\n  {\n    if(mat)\n      this.blitter.blit_with_material(src_RT, dst_RT, mat);\n    else\n      this.blitter.blit(src_RT, dst_RT);\n  }\n\n  blit_clear_with_material(dst_RT, mat)\n  {\n    this.blitter.blit_clear_with_material(dst_RT, mat);\n  }\n\n\n  take_screenshot(blob_callback)\n  {\n\n    const ctx = this;\n\n\n    let old_width = Screen.width;\n    let old_height = Screen.height;\n\n    let new_width = 4096;\n    let new_height = 4096;\n\n    let tile_width = 1024;\n    let tile_height = 1024;\n\n    let divisions_x = parseInt(Math.ceil(new_width / tile_width));\n    let divisions_y = parseInt(Math.ceil(new_height / tile_height));\n\n    Screen.update_size(tile_width, tile_height);\n\n    this._renderer.setPixelRatio(1);\n\n    this._renderer.setSize(tile_width ,tile_height, false);\n\n    this.ctx_2D.canvas.width  = new_width;\n    this.ctx_2D.canvas.height = new_height;\n\n    CameraManager.current.aspect = Screen.aspect_ratio;\n    CameraManager.current.updateMatrix();\n    CameraManager.current.updateMatrixWorld(true);\n\n    for(let x = 0; x < divisions_x; x++)\n    {\n      for(let y = 0; y < divisions_y; y++)\n      {\n\n        CameraManager.current.setViewOffset( new_width,             new_height,\n                                             Screen.width*x,         Screen.height*y,\n                                             Screen.width,            Screen.height);\n        this.current_render_mode.render();\n\n        this.ctx_2D.drawImage(this._renderer.domElement, Screen.width*x, Screen.height*y);\n      }\n    }\n\n    // transform the result canvas into a blob\n    // from them the callback turns into a ULR and download it\n    this.ctx_2D.canvas.toBlob(blob_callback,\"image/png;base64;\");\n\n    CameraManager.current.clearViewOffset();\n    Screen.update_size(old_width,old_height);\n    this._renderer.setPixelRatio(window.devicePixelRatio);\n    this._renderer.setSize(old_width,old_height, false);\n\n    CameraManager.current.aspect = Screen.aspect_ratio;\n    CameraManager.current.updateMatrix();\n    CameraManager.current.updateMatrixWorld(true);\n\n  }\n\n  download_screenshot (blob) {\n    console.log(\"el blob\", blob);\n    let link = document.createElement('a');\n    link.download = \"Snapshot.png\";\n\n    link.href = URL.createObjectURL(blob);\n    link.click()\n\n    link.onclick = function() {\n      requestAnimationFrame(function() {\n        URL.revokeObjectURL(a.href);\n      });\n      a.removeAttribute('href')\n    };\n\n  }\n\n}\n\nconst graphics = new Graphics();\nmodule.exports = graphics;\n\n","import Input from '/Input';\nimport CameraManager from '/CameraManager';\nimport Graphics from '/Graphics';\nimport Screen from '/Screen';\n\n\n\nclass UI\n{\n\n    constructor()\n    {\n        this.ui_elements = [];\n        this._tmp_normalized_pos = new THREE.Vector2();\n        this.ss_scene = new THREE.Scene();\n        this.ss_scene.autoUpdate = false;\n        this.ss_scene.frustumCulled = false;\n\n        this.ws_scene = new THREE.Scene();\n        this.ws_scene.autoUpdate = false;\n        this.ws_scene.frustumCulled = false;\n\n        this.ss_camera = new THREE.OrthographicCamera(-1, 1, 1,-1, -100, 100);\n    }\n\n    delete_element(elem)\n    {\n        let index = this.ui_elements.indexOf(elem);\n        if (index > -1) {\n            this.ui_elements.splice(index, 1);\n        }\n\n        this.ss_scene.remove(elem);\n        this.ws_scene.remove(elem);\n\n        elem.dispose();\n    }\n\n    add_screen_space_element(elem)\n    {\n        this.ui_elements.push(elem);\n        this.ss_scene.add(elem);\n\n        elem.set_screen_space_coordinate_system()\n    }\n    add_world_space_element(elem)\n    {\n        this.ui_elements.push(elem);\n        this.ws_scene.add(elem);\n\n        elem.set_world_space_coordinate_system();\n    }\n\n\n    update()\n    {\n\n        // this.ss_camera.left     = -Screen.width / 2;\n        // this.ss_camera.right    = Screen.width / 2;\n        // this.ss_camera.top      = Screen.top / 2;\n        // this.ss_camera.right    = -Screen.bottom / 2;\n        this.ss_camera.updateProjectionMatrix();\n\n        this._tmp_normalized_pos.copy(Input.normalized_mouse_pos);\n        for(let i=0; i< this.ui_elements.length; i++)\n        {\n            this.ui_elements[i].update_state(this._tmp_normalized_pos)\n        }\n    }\n\n    render(renderer)\n    {\n        // renderer.render_ui(this.scene);\n        if(this.ss_scene.children.length > 0)\n            Graphics.render(this.ss_scene, this.ss_camera);\n        if (this.ws_scene.children.length > 0)\n            Graphics.render(this.ws_scene, CameraManager.current);\n    }\n\n    clear()\n    {\n        this.current_clicked_element = undefined\n    }\n}\n\nconst ui = new UI();\nmodule.exports = ui;\n","module.exports=\"#define GLSLIFY 1\\nuniform vec2 _ScreenSize;\\nuniform vec2 _TextureSize;\\nuniform vec2 _PixelOffset;\\nuniform vec3 _NDC;\\nuniform vec2 _PivotPoint;\\nuniform float _DepthOffset;\\nvarying vec2 vUv;\\n\\nvec2 add_pixel_offset(vec2 pos)\\n{\\n\\tpos = pos * 0.5 + 0.5;\\n\\tpos *= _ScreenSize;\\n\\tpos = ceil(pos+_PixelOffset)+0.5;\\n\\tpos /= _ScreenSize;\\n\\treturn pos * 2.0 - 1.0;\\n}\\nvoid main()\\n{\\n\\tvec4 projected_pos = projectionMatrix * viewMatrix * vec4(_NDC, 1.0);\\n  projected_pos.zw += _DepthOffset;\\n\\n\\tprojected_pos.xyz /= projected_pos.w;\\n\\n  vec2 normalized_size = _TextureSize/_ScreenSize;\\n  vec2 dir = uv * 2.0 - 1.0;\\n  dir -= _PivotPoint;\\n  vec2 pos = projected_pos.xy+dir * normalized_size;\\n  gl_Position = vec4(add_pixel_offset(pos), projected_pos.z, 1.0);\\n  vUv = uv;\\n\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform vec2 _ScreenSize;\\nuniform vec2 _TextureSize;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n\\tgl_FragColor = texture2D(_MainTex, vUv + vec2(0.5, 0.5)/_TextureSize);\\n}\\n\";","import vert from '/shaders/ui_element/ui_element.vert';\nimport frag from '/shaders/ui_element/ui_element.frag';\nimport BaseShaderMaterial from '/materials/BaseShaderMaterial';\n\nexport default class UIElementMaterial extends BaseShaderMaterial {\n    constructor(intensity = 1) {\n        super(vert, frag, {\n            _MainTex: { value: undefined },\n            _ScreenSize: { value: new THREE.Vector2(Screen.width, Screen.height) },\n            _TextureSize: { value: new THREE.Vector2() },\n            _PixelOffset: { value: new THREE.Vector2(0, 0) },\n            _NDC: { value: new THREE.Vector3() },\n            _PivotPoint: { value: new THREE.Vector2() },\n            _DepthOffset: { value: 0 }\n        });\n        this.transparent = true;\n        this.depthWrite = false;\n        this.depthTest = false;\n    }\n\n}\n","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform vec2 _ScreenSize;\\nuniform vec2 _TextureSize;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n\\tgl_FragColor = texture2D(_MainTex, vUv + vec2(0.5, 0.5)/_TextureSize);\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform vec2 _ScreenSize;\\nuniform vec2 _TextureSize;\\nuniform vec2 _PixelOffset;\\nuniform vec3 _NDC;\\nuniform vec2 _PivotPoint;\\nuniform float _DepthOffset;\\nvarying vec2 vUv;\\n\\nvec2 round_to_ceil(vec2 pos)\\n{\\n\\tpos = pos * 0.5 + 0.5;\\n\\tpos *= _ScreenSize;\\n\\tpos = ceil(pos)+0.5;\\n\\tpos /= _ScreenSize;\\n\\treturn pos * 2.0 - 1.0;\\n}\\nvoid main()\\n{\\n\\tvec4 projected_pos = projectionMatrix * viewMatrix * vec4(_NDC, 1.0);\\n  projected_pos.zw += _DepthOffset;\\n\\n\\tprojected_pos.xyz /= projected_pos.w;\\n\\t\\n  vec2 normalized_size = _TextureSize/_ScreenSize;\\n  vec2 dir = uv * 2.0 - 1.0;\\n  dir -= _PivotPoint; \\n  vec2 pos = projected_pos.xy+ dir * normalized_size;\\n  gl_Position = vec4(round_to_ceil(pos), projected_pos.z, 1.0);\\n  vUv = uv;\\n\\n}\";","export default class ScreenSpacePosition\n{\n\tconstructor()\n\t{\n\t\tthis.tmp_vec = new THREE.Vector2();\n\t}\n\n\tget_pos_NDC(position)\n\t{\n\t\treturn this.tmp_vec.set(position.x, position.y);\n\t}\n}","import CameraManager from '/CameraManager';\n\nexport default class WorldSpacePosition\n{\n\tconstructor()\n\t{\n\t\tthis.tmp_vec3 = new THREE.Vector3();\n\t\tthis.tmp_vec2 = new THREE.Vector2();\n\t}\n\n\tget_pos_NDC(position)\n\t{\n\t\tthis.tmp_vec3.copy(position);\n    \tthis.tmp_vec3.project(CameraManager.current);\n\n\t\treturn this.tmp_vec2.set(this.tmp_vec3.x, this.tmp_vec3.y);\n\t}\n}\n","export default class UIElementState\n{\n\tconstructor()\n\t{\n\t\n\t}\n\n\tupdate(ui_element, normalized_mouse_position)\n\t{\n\n\t}\n\n\ton_enter(ui_element){}\n\ton_exit(ui_element){}\n}","import UIElementState from '/ui/ui_element_state/UIElementState'\n\nexport default class OnIdle extends UIElementState\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tupdate(ui_element, normalized_mouse_position)\n\t{\n\t\tif(ui_element.is_mouse_over(normalized_mouse_position))\n\t\t{\n\t\t\tui_element.set_state(ui_element._on_enter_state);\n\t\t}\n\t}\n}\n","import UIElementState from '/ui/ui_element_state/UIElementState'\n\nexport default class OnMouseEnter extends UIElementState\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\ton_enter(ui_element)\n\t{\n\t\tui_element.on_mouse_enter();\n\t}\n\n\tupdate(ui_element, normalized_mouse_position)\n\t{\n\t\tif(ui_element.is_mouse_over(normalized_mouse_position))\n\t\t{\n\t\t\tui_element.set_state(ui_element._on_hover_state);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tui_element.set_state(ui_element._on_exit_state);\n\t\t}\n\t}\n}\n","import UIElementState from '/ui/ui_element_state/UIElementState'\n\nexport default class OnMouseExit extends UIElementState\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\ton_enter(ui_element)\n\t{\n\t\tui_element.on_mouse_exit();\n\t\tui_element.set_state(ui_element._on_idle_state);\n\t}\n\n}\n","import UIElementState from '/ui/ui_element_state/UIElementState'\n\nexport default class OnMouseHover extends UIElementState\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\ton_enter(ui_element)\n\t{\n\t\tthis.__trigger_on_hover(ui_element);\n\t}\n\n\tupdate(ui_element, normalized_mouse_position)\n\t{\n\t\tif(ui_element.is_mouse_over(normalized_mouse_position))\n\t\t{\n\t\t\tthis.__trigger_on_hover(ui_element);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tui_element.set_state(ui_element._on_exit_state);\n\t\t}\n\t}\n\n\t__trigger_on_hover(ui_element)\n\t{\n\t\tui_element.on_mouse_hover();\n\t}\n}\n","import UI from '/UI';\nimport CameraManager from '/CameraManager';\nimport Screen from '/Screen';\n\nimport UIElementMaterial from '/materials/UIElementMaterial';\nimport screen_space_text_frag from '/shaders/ui/ss_texture_frag';\nimport screen_space_text_vert from '/shaders/ui/ss_texture_vert';\n\nimport ScreenSpacePosition from '/ui/ui_element_position/ScreenSpacePosition';\nimport WorldSpacePosition from '/ui/ui_element_position/WorldSpacePosition';\n\nimport OnIdle from '/ui/ui_element_state/OnIdle';\nimport OnMouseEnter from '/ui/ui_element_state/OnMouseEnter';\nimport OnMouseExit from '/ui/ui_element_state/OnMouseExit';\nimport OnMouseHover from '/ui/ui_element_state/OnMouseHover';\n\n\nexport default class UIElement extends THREE.Mesh\n{\n  constructor(vert, frag)\n  {\n    super(new THREE.PlaneGeometry(1, 1), new UIElementMaterial());\n\n\n    this.is_clickable = false;\n\n    this.position_strategy = new WorldSpacePosition();\n    this.current_state = new OnIdle();\n\n    this._position = new THREE.Vector3();\n\n    this._on_idle_state = new OnIdle();\n    this._on_enter_state = new OnMouseEnter();\n    this._on_exit_state = new OnMouseExit();\n    this._on_hover_state = new OnMouseHover();\n\n    this.on_enter = undefined;\n    this.on_exit = undefined;\n    this.on_hover = undefined;\n\n    this.mouse_pos_tmp = new THREE.Vector2();\n    this.cached_NDC_position = new THREE.Vector2();\n    this.screen_pos_tmp = new THREE.Vector2();\n\n\n    this.texture_size = new THREE.Vector2(1,1);\n\n\n    this.frustumCulled = false;\n    this.matrixAutoUpdate = false;\n    this.renderOrder = 0;\n\n    this.size = 1;\n    this.pixel_offset = new THREE.Vector2();\n  }\n\n  set_render_order(value)\n  {\n    this.renderOrder = value;\n  }\n\n  get pivot_point()\n  {\n    return this.material.uniforms._PivotPoint.value;\n  }\n\n  set_pixel_offset(offset)\n  {\n    this.pixel_offset.copy(offset);\n    this.material.uniforms._PixelOffset.value.copy(offset);\n  }\n\n  set_state(new_state)\n  {\n    this.current_state.on_exit(this);\n    this.current_state = new_state;\n    this.current_state.on_enter(this);\n  }\n\n  get position()\n  {\n    return this._position;\n  }\n\n  set use_depth(boolean)\n  {\n    this.material.depthTest = boolean;\n  }\n\n  set depth_offset(value)\n  {\n    this.material.uniforms._DepthOffset.value = value;\n  }\n\n  clear_state()\n  {\n    this.visible = false;\n  }\n\n\n  set_world_space_coordinate_system()\n  {\n    this.position_strategy = new WorldSpacePosition();\n  }\n  set_screen_space_coordinate_system()\n  {\n    this.position_strategy = new ScreenSpacePosition();\n  }\n\n  set_texture(texture)\n  {\n    texture.minFilter = THREE.NearestFilter;\n    texture.magFilter = THREE.NearestFilter;\n    texture.needsUpdate = true;\n\n    this.texture_size.set(texture.image.width, texture.image.height);\n\n    this.material.uniforms._MainTex.value = texture;\n    this.get_size(this.material.uniforms._TextureSize.value);\n    this.visible = true;\n  }\n\n  update_state(normalized_mouse_pos)\n  {\n    this.material.uniforms._ScreenSize.value.set(Screen.width, Screen.height);\n    this.get_size(this.material.uniforms._TextureSize.value);\n\n    this.cached_NDC_position.copy(this.position_strategy.get_pos_NDC(this.position));\n    this.material.uniforms._NDC.value.copy(this.position);\n    this.current_state.update(this, normalized_mouse_pos);\n  }\n\n  is_mouse_over(normalized_mouse_pos)\n  {\n\n    this.screen_pos_tmp.copy(this.cached_NDC_position)\n    this.to_screen_position(this.screen_pos_tmp);\n    this.screen_pos_tmp.x += this.pixel_offset.x;\n    this.screen_pos_tmp.y += this.pixel_offset.y;\n\n    let rect = new THREE.Box2().setFromCenterAndSize(this.screen_pos_tmp, this.get_size());\n\n\n    this.mouse_pos_tmp.copy(normalized_mouse_pos);\n    this.to_screen_position(this.mouse_pos_tmp);\n\n    return rect.containsPoint(this.mouse_pos_tmp);\n  }\n\n  to_screen_position(projected_pos)\n  {\n    projected_pos.x = (projected_pos.x * 0.5 + 0.5) * Screen.width  + this.pixel_offset.x;\n    projected_pos.y = (projected_pos.y * 0.5 + 0.5) * Screen.height + this.pixel_offset.y;\n  }\n\n  get_screen_space_position()\n  {\n    let pos = this.cached_NDC_position.clone()\n    this.to_screen_position(pos);\n    return pos;\n  }\n  set_screen_space_position(screen_pos)\n  {\n    this.position.x = (screen_pos.x / Screen.width) * 2 - 1;\n    this.position.y = (screen_pos.y / Screen.height) * 2 - 1;\n  }\n\n  dispose()\n  {\n    if(this.material.uniforms._MainTex.value)\n    {\n      this.material.uniforms._MainTex.value.dispose();\n    }\n    Screen.remove_screen_material(this.material);\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n\n  get_size(vector2)\n  {\n    if (vector2)\n    {\n      return vector2.copy(this.texture_size).multiplyScalar(this.size / Screen.dpr);\n    }\n    else\n    {\n      return new THREE.Vector2().copy(this.texture_size).multiplyScalar(this.size / Screen.dpr);\n    }\n  }\n\n  on_mouse_enter(){}\n  on_mouse_exit(){}\n  on_mouse_hover(){}\n\n}\n\n","module.exports=\"#define GLSLIFY 1\\nuniform float _Thickness;\\n\\nattribute vec3 next_position;\\nattribute vec3 previous_position;\\nattribute float orientation;\\nattribute float coverage;\\n\\nvarying float line_coverage;\\nvarying float uv_u;\\n\\nvec3 w_space_normal(vec3 from, vec3 to)\\n{\\n  vec3 w_from = (modelMatrix * vec4(from, 1.0)).xyz;\\n  vec3 w_to   = (modelMatrix * vec4(to, 1.0)).xyz;\\n\\n  vec3 z = normalize(w_to - w_from);\\n  return normalize(cross(z , normalize(cameraPosition - w_from)));\\n\\n}\\n\\nvoid main()\\n{\\n\\n  mat4 VP = projectionMatrix * viewMatrix;\\n\\n  vec3 pos = position;\\n  vec3 normal = w_space_normal(next_position ,previous_position);\\n  pos = (modelMatrix * vec4(pos, 1.0)).xyz;\\n  pos += normal * (_Thickness * 0.5) * orientation;\\n\\n  gl_Position = VP * vec4(pos, 1.0);\\n\\n  line_coverage = coverage;\\n  uv_u = orientation * 0.5 + 0.5;\\n\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform float _Length;\\nuniform float _ElapsedTime;\\nuniform float _Thickness;\\nuniform vec3  _Color;\\n\\nvarying float line_coverage;\\nvarying float uv_u;\\n\\nfloat aastep(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\nvoid main()\\n{\\n\\n    // float y = fract(line_coverage /_Thickness - _TrueElapsedTime) ;\\n\\n    // vec2 uv = vec2(uv_u, y);\\n\\n   \\n    // vec4 col = texture2D(_ArrowsTex,uv);\\n    // col.rgb *= _ForwardColor;\\n    // col.a = aastep(0.5, col.a);\\n    // gl_FragColor = col;\\n    float u = (1.0 - abs(uv_u * 2.0 - 1.0));\\n    float diffuse = dot(vec2(u, u), vec2(0.0, 1.0)) * 0.5+0.5;\\n    gl_FragColor = vec4(_Color * diffuse, 1.0);\\n\\n}\";","import line_vs from '/shaders/basic_line/basic_line_vert'\nimport line_fs from '/shaders/basic_line/basic_line_frag'\n\nexport default class Line extends THREE.Mesh {\n\n  constructor(points) {\n\n\n    let geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position',           new THREE.BufferAttribute(new Float32Array([]), 3));\n    geometry.setAttribute('next_position',      new THREE.BufferAttribute(new Float32Array([]), 3));\n    geometry.setAttribute('previous_position',  new THREE.BufferAttribute(new Float32Array([]), 3));\n    geometry.setAttribute('orientation',        new THREE.BufferAttribute(new Float32Array([]), 1));\n    geometry.setAttribute('coverage',           new THREE.BufferAttribute(new Float32Array([]), 1));\n\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        _Thickness: { value: 0.2 },\n        _Length: { value: 0 },\n        _ElapsedTime: { value: 0 },\n        _Color: {value: new THREE.Color(\"#FF0000\")},\n      },\n      vertexShader: line_vs,\n      fragmentShader: line_fs,\n      transparent: true,\n      depthWrite: false,\n      extensions: { derivatives: true}\n\n    });\n\n    super(geometry, material);\n\n    if(points)\n      this.setup(points);\n  }\n\n  setup(points)\n  {\n\n    let vertices = [];\n    let next_position = [];\n    let previous_position = [];\n    let orientation = [];\n    let coverage = [];\n    let accumulated_length = 0;\n\n\n    for (let i = 0; i < points.length; i++) {\n\n      vertices.push(points[i].x);\n      vertices.push(points[i].y);\n      vertices.push(points[i].z);\n      orientation.push(1);\n\n      vertices.push(points[i].x);\n      vertices.push(points[i].y);\n      vertices.push(points[i].z);\n      orientation.push(-1);\n\n      let next_point = this.__get_next_position(points, i);\n      next_position.push(next_point.x);\n      next_position.push(next_point.y);\n      next_position.push(next_point.z);\n\n      next_position.push(next_point.x);\n      next_position.push(next_point.y);\n      next_position.push(next_point.z);\n\n      let previous_point = this.__get_previous_position(points, i);\n      previous_position.push(previous_point.x);\n      previous_position.push(previous_point.y);\n      previous_position.push(previous_point.z);\n\n      previous_position.push(previous_point.x);\n      previous_position.push(previous_point.y);\n      previous_position.push(previous_point.z);\n\n      coverage.push(accumulated_length);\n      coverage.push(accumulated_length);\n\n      if (i < points.length - 1)\n        accumulated_length += points[i].distanceTo(next_point);\n\n    }\n    let vertexList            = new Float32Array(vertices);\n    let nextPositionList      = new Float32Array(next_position);\n    let previousPositionList  = new Float32Array(previous_position);\n    let orientationList       = new Float32Array(orientation);\n    let coverageList          = new Float32Array(coverage);\n\n\n    let indices = [];\n    for (let i = 0; i < ((vertexList.length / 3) - 2) / 2; i++) {\n      let index = (i * 2) + 1;\n      indices.push(index);\n      indices.push(index + 1);\n      indices.push(index - 1);\n\n      indices.push(index);\n      indices.push(index + 2);\n      indices.push(index + 1);\n    }\n\n    this.geometry.setIndex(indices);\n    this.geometry.getAttribute('position').copy(          new THREE.BufferAttribute(vertexList, 3));\n    this.geometry.getAttribute('next_position').copy(     new THREE.BufferAttribute(nextPositionList, 3));\n    this.geometry.getAttribute('previous_position').copy( new THREE.BufferAttribute(previousPositionList, 3));\n    this.geometry.getAttribute('orientation').copy(       new THREE.BufferAttribute(orientationList, 1));\n    this.geometry.getAttribute('coverage').copy(          new THREE.BufferAttribute(coverageList, 1));\n\n    this.geometry.getAttribute('position').needsUpdate = true;\n    this.geometry.getAttribute('next_position').needsUpdate = true;\n    this.geometry.getAttribute('previous_position').needsUpdate = true;\n    this.geometry.getAttribute('orientation').needsUpdate = true;\n    this.geometry.getAttribute('coverage').needsUpdate = true;\n\n    this.material.uniforms._Length.value = accumulated_length;\n    this._length = accumulated_length;\n  }\n\n  set thickness(value)\n  {\n    this.material.uniforms._Thickness.value = value;\n  }\n\n\n\n  __get_previous_position(points, i)\n  {\n    if(i === 0)\n    {\n      return points[1].clone().sub(points[0]).multiplyScalar(-1).add(points[0]);\n    }\n    else\n    {\n      return points[i-1];\n    }\n  }\n  __get_next_position(points, i)\n  {\n    if(i === points.length-1)\n    {\n      return points[points.length-2].clone().sub(points[points.length-1]).multiplyScalar(-1).add(points[points.length-1]);\n    }\n    else\n    {\n      return points[i+1];\n    }\n  }\n\n  update() {\n  }\n\n  distance()\n  {\n    return this.accumulated_length;\n  }\n  total_length()\n  {\n    return this.accumulated_length;\n  }\n\n  dispose()\n  {\n    this.geometry.dispose();\n    this.material.dispose();\n    if(this.parent)\n      this.parent.remove(this);\n  }\n\n  set color(col)\n  {\n  \tthis.material.uniforms._Color.value.set(col);\n  }\n  copy_color(col)\n  {\n  \tthis.material.uniforms._Color.value.copy(col);\n  }\n}\n","import Grid from '/components/Grid';\nimport UIElement from '/components/UIElement';\nimport Line from '/components/Line';\nexport default {\n  Grid: Grid,\n  Line: Line,\n  UIElement: UIElement\n}\n","export default class CanvasDrawer\n{\n\tconstructor (uses_dynamic_font)\n  {\n    this.uses_dynamic_font = uses_dynamic_font;\n    this.__textHeight = null;\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  getFontHeight (fontStyle = \"Arial\") {\n\n    if(this.__textHeight == null || this.uses_dynamic_font)\n    {\n      var body = document.getElementsByTagName('body')[0];\n      var dummy = document.createElement('div');\n      var dummyText = document.createTextNode('MÉqgOLAKTAL');\n      dummy.appendChild(dummyText);\n      dummy.setAttribute('style', `font:${ fontStyle };position:absolute;top:0;left:0`);\n      body.appendChild(dummy);\n      this.__textHeight = dummy.offsetHeight;\n      body.removeChild(dummy);\n    }\n    return this.__textHeight;\n\n  }\n\n\n\n  get_text_size(text, font = \"24px Arial\")\n  {\n\n\n  \tlet size = new THREE.Vector2();\n  \tthis.ctx.font = font;\n\t\tsize.x = Math.ceil(this.ctx.measureText(text).width) * window.devicePixelRatio;\n    size.y = Math.ceil(this.getFontHeight(font)) * window.devicePixelRatio;\n    return size;\n  }\n\n  draw_canvas (text, ctxOptions = {})\n  {\n    ctxOptions.font = ctxOptions.font || '24px Arial';\n    ctxOptions.font_color = ctxOptions.font_color || '#000000';\n\n  \tthis.__draw(text, ctxOptions, this.canvas, this.ctx);\n  \treturn this.canvas;\n  }\n\n  draw_on_texture(text, ctxOptions)\n  {\n    let canvas = this.draw_canvas(text, ctxOptions);\n    let canvas_texture = new THREE.CanvasTexture(canvas, THREE.UVMapping,\n                                          THREE.ClampToEdgeWrapping,\n                                          THREE.ClampToEdgeWrapping,\n                                          THREE.NearestFilter,\n                                          THREE.NearestFilter);\n    canvas_texture.generateMipMaps = false;\n    canvas_texture.needsUpdate = true;\n\n    return canvas_texture;\n  }\n\n  __draw(text, ctxOptions){};\n\n  roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n      if (typeof stroke == 'undefined') {\n        stroke = true;\n      }\n      if (typeof radius === 'undefined') {\n        radius = 5;\n      }\n      if (typeof radius === 'number') {\n        radius = {tl: radius, tr: radius, br: radius, bl: radius};\n      } else {\n        var defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};\n        for (var side in defaultRadius) {\n          radius[side] = radius[side] || defaultRadius[side];\n        }\n      }\n      ctx.beginPath();\n      ctx.moveTo(x + radius.tl, y);\n      ctx.lineTo(x + width - radius.tr, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n      ctx.lineTo(x + width, y + height - radius.br);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n      ctx.lineTo(x + radius.bl, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n      ctx.lineTo(x, y + radius.tl);\n      ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n      ctx.closePath();\n      if (fill) {\n        ctx.fill();\n      }\n      if (stroke) {\n        ctx.stroke();\n      }\n\n    }\n}\n","\nexport default class AxisHelper extends THREE.Object3D {\n  constructor(scale = 1.0) {\n    super();\n\n    const blueAxisMat = new THREE.LineBasicMaterial({ color: 0x4444ff, depthFunc: THREE.AlwaysDepth });\n    const blueAxisGeo = new THREE.Geometry();\n    blueAxisGeo.vertices.push(new THREE.Vector3(0, 0, 0));\n    blueAxisGeo.vertices.push(new THREE.Vector3(0, 0, 1000));\n    const blueAxisLine = new THREE.Line(blueAxisGeo, blueAxisMat);\n    blueAxisLine.renderOrder = 50000;\n\n    const greenAxisMat = new THREE.LineBasicMaterial({ color: 0x44ff44, depthFunc: THREE.AlwaysDepth });\n    const greenAxisGeo = new THREE.Geometry();\n    greenAxisGeo.vertices.push(new THREE.Vector3(0, 0, 0));\n    greenAxisGeo.vertices.push(new THREE.Vector3(0, 1000, 0));\n    const greenAxisLine = new THREE.Line(greenAxisGeo, greenAxisMat);\n    greenAxisLine.renderOrder = 50000;\n\n    const redAxisMat = new THREE.LineBasicMaterial({ linewidth: 100, color: 0xff4444, depthFunc: THREE.AlwaysDepth });\n    const redAxisGeo = new THREE.Geometry();\n    redAxisGeo.vertices.push(new THREE.Vector3(0, 0, 0));\n    redAxisGeo.vertices.push(new THREE.Vector3(1000, 0, 0));\n    const redAxisLine = new THREE.Line(redAxisGeo, redAxisMat);\n    redAxisLine.renderOrder = 50000;\n    this.renderOrder = 100000;\n    this.add(blueAxisLine);\n    this.add(greenAxisLine);\n    this.add(redAxisLine);\n    this.scale.set(scale, scale, scale);\n\n  }\n\n  update() {\n  }\n\n  dispose() {\n\n  }\n}\n","import Mesh from '/Mesh';\n\nexport default class Cube extends Mesh\n{\n\tconstructor(size, segments, color)\n\t{\n\t\tsize \t\t\t= size || new THREE.Vector3(1,1,1);\n\t\tsegments \t= segments || new THREE.Vector3(1,1,1);\n    color \t\t= color || 0xff0000;\n    let geometry = new THREE.BoxGeometry( size.x, size.y, size.z, segments.x, segments.y, segments.z);\n    let material = new THREE.MeshBasicMaterial( {color: color} );\n\t\tsuper(geometry, material);\n\t}\n}\n","import AxisHelper from '/components/AxisHelper';\nimport basic_color_vert from '/shaders/basic_color/basic_color_vert';\nimport basic_color_frag from '/shaders/basic_color/basic_color_frag';\nimport SceneManager from '/SceneManager';\nimport Graphics from '/Graphics';\nimport Cube from '/primitives/Cube';\nimport Sphere from '/primitives/Sphere';\nimport Arrow from '/primitives/Arrow';\n\nclass Debug {\n  constructor() {\n    this.Vector3_one = new THREE.Vector3(1,1,1);\n    this.Vector3_zero = new THREE.Vector3(0,0,0);\n    this.canvas_renderer = undefined;\n\n    this.rt_debug = undefined;\n  }\n\n  init(webgl)\n  {\n    this.webgl = webgl;\n\n    this.ctx = undefined;\n\n    // var cln = webgl.dom.cloneNode(false);\n    // cln.id = \"canvas_debug\";\n    // $(cln).css(\"position\", \"absolute\");\n    // webgl.dom.parentElement.insertBefore(cln, webgl.dom);\n    // this.ctx = cln.getContext('2d');\n\n    // this.ctx.clearRect(0, 0, cln.width, cln.height);\n    // this.ctx.fillStyle =  \"rgba(255, 0, 0, 1)\";\n\n  }\n\n  draw_arrow(origin, dir, color = 0xff0000)\n  {\n    let arrow = new Arrow(color, dir.length(), dir.clone().normalize());\n    arrow.position.copy(origin);\n    SceneManager.current.add(arrow);\n    return arrow;\n  }\n\n  draw_axis()\n  {\n    let axis = new AxisHelper();\n    SceneManager.current.add(axis);\n    return axis;\n  }\n\n  set_debug_RT(RT)\n  {\n    this.rt_debug = RT;\n  }\n\n  draw_rectangle(position_2d, width, height, color)\n  {\n    width  = width || 100;\n    height = height || 100;\n    this.ctx.fillStyle =  color || \"rgba(255, 0, 0, 1)\";\n    this.ctx.fillRect(position_2d.x - width/2,\n                      (this.ctx.canvas.height - position_2d.y) - height/2,width,height);\n\n  }\n\n  clear()\n  {\n    if(this.ctx)\n      this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  draw_line_2D(from, to, color)\n  {\n    this.ctx.strokeStyle =  color ||\"rgba(255, 0, 0, 1)\";\n    this.ctx.beginPath();\n    this.ctx.moveTo(from.x, from.y);\n    this.ctx.lineTo(to.x, to.y);\n    this.ctx.closePath();\n    this.ctx.stroke();\n  }\n\n  draw_line(points, color = 0xff0000)\n  {\n    var material = new THREE.LineBasicMaterial({\n      color: color\n    });\n\n    var geometry = new THREE.BufferGeometry().setFromPoints(points);\n\n    var line = new THREE.Line(geometry, material);\n    line.frustumCulled = false;\n    SceneManager.current.add(line);\n    return line;\n  }\n\n\n  draw_cube(pos, size, color)\n  {\n    size = size || 1;\n    color = color || 0xff0000;\n    pos = pos || new THREE.Vector3();\n\n    var cube = new Cube(new THREE.Vector3(size, size, size), undefined, color );\n    cube.position.copy(pos);\n    SceneManager.current.add( cube );\n    return cube;\n  }\n  draw_oriented_cube(from, to, height = 1, color = \"#FF0000\", depth = 0.1)\n  {\n  \tlet size = from.distanceTo(to);\n    let cube = new Cube(new THREE.Vector3(depth, height, size), undefined, color );\n\n  \tlet center = to.clone().sub(from).multiplyScalar(0.5);\n\t\tlet forward_dir = center.clone().normalize();\n\t\tcenter.add(from);\n\n\t\tcube.position.copy(center);\n\n\n\t\tlet up = new THREE.Vector3(0,1,0);\n  \tlet forward = forward_dir.clone();\n  \tlet right = forward.clone().cross(up);\n\n  \t// cube.quaternion.setFromRotationMatrix(new THREE.Matrix4().makeBasis(right,up,forward));\n  \tcube.quaternion.setFromUnitVectors(new THREE.Vector3(0,0,-1), forward_dir);\n\n    SceneManager.current.add( cube );\n    return cube;\n  }\n  draw_plane(width, height, color)\n  {\n    var geometry = new THREE.PlaneGeometry( width, height );\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        _Color: {value : new THREE.Vector4(0,1,0, 0.2)},\n      },\n      vertexShader: basic_color_vert,\n      fragmentShader: basic_color_frag,\n      transparent: true,\n      depthWrite: false\n    });\n\n    var plane = new THREE.Mesh( geometry, material );\n    plane.renderOrder = -10000\n    SceneManager.current.add(plane);\n    return plane;\n  }\n  draw_empty_cube(pos, size,color)\n  {\n    size = size || 1;\n    color = color || 0xff0000;\n\n    let box = new THREE.Box3().setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(size, size, size));\n    let helper = new THREE.Box3Helper( box, color );\n    helper.position.copy(pos || new THREE.Vector3());\n    return helper;\n  }\n  draw_sphere(pos, size, color)\n  {\n    size = size || 1;\n    color = color || 0xff0000;\n    pos = pos || new THREE.Vector3();\n\n    var sphere = new Sphere(size, color );\n    sphere.position.copy(pos);\n    SceneManager.current.add( sphere );\n    return sphere;\n  }\n\n  draw_point_array(input_points, open = false, color = 0xff0000 )\n  {\n    let catmull = new THREE.CatmullRomCurve3(input_points, open)\n    catmull.updateArcLengths();\n    let points = catmull.getSpacedPoints(200);\n    let line_helper = this.draw_line(points, 0x00ff00);\n    // line_helper.position.y = 1.5;\n    return line_helper;\n  }\n  draw_sphere_helper(sphere, color)\n  {\n    color = color || 0xff0000;\n    var geometry = new THREE.SphereGeometry( sphere.radius, 32, 32 );\n    var material = new THREE.MeshBasicMaterial( {color: color} );\n    var sphere_mesh = new THREE.Mesh( geometry, material );\n    sphere_mesh.position.copy(sphere.center);\n    SceneManager.current.add(sphere_mesh);\n    return sphere_mesh;\n  }\n\n  draw_math_sphere(sphere)\n  {\n    var geometry = new THREE.SphereGeometry( sphere.radius, 32, 32 );\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        _Color: {value : new THREE.Vector4(1,0,0, 0.2)},\n      },\n      vertexShader: basic_color_vert,\n      fragmentShader: basic_color_frag,\n      transparent: true\n    });\n    // var material = new THREE.MeshBasicMaterial( {color: 0xff0000, transparent = true} );\n    var sphere1 = new THREE.Mesh( geometry, material );\n    sphere1.position.copy(sphere.center);\n    SceneManager.current.add(sphere1)\n  }\n\n  draw_bounding_box(bb)\n  {\n    var helper = new THREE.Box3Helper( bb, 0xffff00 );\n    SceneManager.current.add( helper );\n  }\n\n  draw_curve(curve, options)\n  {\n    let offset = new THREE.Vector3(0,0, 0);\n    if(options)\n      offset.y = options.offset || 0;\n\n    for(let i=0; i< curve.length-1; i++)\n    {\n      this.draw_line(curve[i].clone().add(offset), curve[i+1].clone().add(offset));\n    }\n  }\n\n}\n\nconst DEBUG = new Debug();\nmodule.exports = DEBUG;\n","module.exports=\"#define GLSLIFY 1\\nvarying vec3 v_normal;\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(v_normal * 0.5 + vec3(0.5), 1.0);\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nvarying vec3 v_normal;\\nvoid main()\\n{\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    v_normal = (modelMatrix * vec4(normal, 0.0)).xyz;\\n}\\n\";","import frag from '/shaders/normal/normal.frag';\nimport vert from '/shaders/normal/normal.vert';\n\nexport default class NormalMaterial extends THREE.ShaderMaterial {\n    constructor() {\n        super({\n            uniforms: {\n            },\n            vertexShader: vert,\n            fragmentShader: frag\n        });\n\n    }\n\n}\n","import CameraManager from '/CameraManager';\nimport SceneManager from '/SceneManager';\nimport Screen from '/Screen';\nimport BaseRender from '/render_mode/BaseRender';\nimport Graphics from '/Graphics';\nimport NormalMaterial from '/materials/NormalMaterial';\nexport default class DebugNormalsRender extends BaseRender {\n    constructor() {\n        super();\n    }\n\n\n    render() {\n        Graphics.clear(undefined, CameraManager.current, true, true);\n\n        Graphics.render(SceneManager.current, CameraManager.current, undefined, new NormalMaterial());\n    }\n\n}\n","export default class EasingFunctions\n{\n\tconstructor(){}\n\n\tstatic ease_out_sine(x) {\n\t\treturn Math.sin(x * 3.14 / 2);\n\t}\n\n\tstatic ease_in_out_cubic(x) {\n\t\treturn x < 0.5 ?\n\t\t\t4 * x * x * x :\n\t\t\t1 - Math.pow(-2 * x + 2, 3) / 2;\n\t}\n\n\tstatic ease_out_cubic (x) {\n\t\treturn 1 - Math.pow(1 - x, 3);\n\t}\n\n\tstatic ease_in_out_quint (x) {\n\t\treturn x < 0.5 ?\n\t\t\t16 * x * x * x * x * x :\n\t\t\t1 - Math.pow(-2 * x + 2, 5) / 2;\n\t}\n\n\tstatic ease_out_quint (x) {\n\t\treturn 1 - Math.pow(1 - x, 5);\n\t}\n\n\tstatic ease_in_out_circ (x) {\n\t\treturn x < 0.5 ?\n\t\t\t(1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 :\n\t\t\t(Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n\t}\n\n\tstatic ease_out_quad (x) {\n\t\treturn 1 - (1 - x) * (1 - x);\n\t}\n\n}","class EventManager\n{\n\n    constructor()\n    {\n        this.queue = {};\n\n        this.zoom_changed_evt           = \"zoom_changed\";\n        this.store_clickd_evt           = \"store_clicked\";\n        this.point_selected_evt         = \"point_selected\";\n        this.config_changed             = \"config_changed\";\n\n        this.path_substep_completed     = \"path_substep_completed\";\n        this.path_completed             = \"path_completed\";\n        this.go_to_store_requested_evt  = \"go_to_store_requested\";\n\n        this.resource_loaded_evt        = \"resource_loaded\";\n        this.service_clicked_evt        = \"service_clicked\";\n        this.unit_pos_updated_evt       = \"unit_position_updated\";\n\n        this.floor_changed_evt          = \"floor_changed\";\n\n        this.on_enter_floor_navigation  = \"on_enter_floor_navigation\";\n        this.on_exit_floor_navigation   = \"on_exit_floor_navigation\";\n\n        this.on_enter_floor_selection   = \"on_enter_floor_selection\";\n        this.on_exit_floor_selection    = \"on_exit_floor_selection\";\n\n        this.on_enter_outside_navigation  = \"on_enter_outside_navigation\";\n        this.on_exit_outside_navigation   = \"on_exit_outside_navigation\";\n\n        this.step_selected_evt = \"step_selected\";\n\n\n        \n    }\n\n    fire(event, payload)\n    {\n        let queue = this.queue[event];\n\n        if (queue === undefined) {\n            return;\n        }\n        let i = queue.length;\n        while (i--) {\n            queue[i](payload);\n        }\n\n    }\n\n    on(event, callback)\n    {\n        if (typeof this.queue[event] === 'undefined') \n        {\n            this.queue[event] = [];\n        }\n\n        this.queue[event].push(callback);\n    }\n\n    fire_zoom_changed(zoom)\n    {\n        this.fire(this.zoom_changed_evt, zoom);\n    }\n    fire_store_selected(store_id)\n    {\n        this.fire(this.store_clickd_evt, store_id);\n    }\n    fire_point_selected(hit_data)\n    {\n        this.fire(this.point_selected_evt, hit_data);\n    }\n    fire_config_changed()\n    {\n        this.fire(this.config_changed);\n    }\n    fire_path_substep_completed(step_number)\n    {\n        this.fire(this.path_substep_completed, step_number);\n    }\n    fire_path_completed()\n    {\n        this.fire(this.path_completed);\n    }\n    fire_step_selected(step_index)\n    {\n        this.fire(this.step_selected_evt, step_index);\n    }\n\n    fire_go_to_store_requested(store_id)\n    {\n        this.fire(this.go_to_store_requested_evt, store_id);\n    }\n\n    fire_resource_loaded(resource)\n    {\n        this.fire(this.resource_loaded_evt, resource);\n    }\n\n    fire_service_clicked(service)\n    {\n        this.fire(this.service_clicked_evt, service);\n    }\n    fire_unit_position_updated(unit_data)\n    {\n        this.fire(this.unit_pos_updated_evt, unit_data);\n    }\n\n    fire_floor_switched(floor_id)\n    {\n        this.fire(this.floor_changed_evt, floor_id);\n    }\n\n    fire_on_enter_floor_navigation(state)\n    {\n        this.fire(this.on_enter_floor_navigation, state);\n    }\n\n    fire_on_exit_floor_navigation(state)\n    {\n        this.fire(this.on_exit_floor_navigation, state);\n    }\n\n    fire_on_enter_floor_selection(state)\n    {\n        this.fire(this.on_enter_floor_selection,state);\n    }\n\n    fire_on_exit_floor_selection(state)\n    {\n        this.fire(this.on_exit_floor_selection,state);\n    }\n    \n    fire_on_enter_outside_navigation(state)\n    {\n        this.fire(this.on_enter_outside_navigation,state);\n    }\n\n    fire_on_exit_outside_navigation(state)\n    {\n        this.fire(this.on_exit_outside_navigation,state);\n    }\n\n\n}\n\nconst event_manager = new EventManager();\nmodule.exports = event_manager;","export default class ImageUtilities {\n    constructor() { }\n\n    static get_image_data(image) {\n\n        var canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n\n        return context.getImageData(0, 0, image.width, image.height);\n    }\n    static get_pixel(imagedata, x, y) {\n\n        let position = (x + imagedata.width * y) * 4;\n        let data = imagedata.data;\n        return new THREE.Vector4(data[position + 0], data[position + 1], data[position + 2], data[position + 3]);\n    }\n\n}\n","export default class AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tthis.progress = 0;\r\n\t\tthis.resource_id = resource_id;\r\n\t\tthis.url = url;\r\n\r\n\t\tthis.has_finished = false;\r\n\t\tthis.has_error = false;\r\n\t\tthis.error_message = \"none\";\r\n\t}\r\n\r\n\t__update_progress(value)\r\n\t{\r\n\t\tthis.progress = value;\r\n\t}\r\n\t__loading_ended()\r\n\t{\r\n\t\tthis.has_finished = true;\r\n\t}\r\n\t__set_error(message)\r\n\t{\r\n\t\tthis.has_error = true;\r\n\t\tthis.error_message = message;\r\n\t}\r\n\r\n\tprint_error()\r\n\t{\r\n\t\tconsole.error(\"Error while loading \"+this.resource_id+\"\\n\\t path: \"+this.url+\"\\n\\t\\t\"+this.error_message);\r\n\t}\r\n\r\n\tload(resource_container) {\r\n\r\n\t}\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\n\nexport default class JSONLoader extends AbstractLoader {\n\tconstructor(resource_id, url) {\n\t\tsuper(resource_id, url);\n\n\t\tthis.loader = new THREE.FileLoader();\n\n\t}\n\n\tload(resource_container) {\n\n\t\tlet ctx = this;\n\n\t\tthis.loader.load(this.url, (data) => {\n\n\t\t\tresource_container.set_resource(ctx.resource_id, JSON.parse(data));\n\t\t\tctx.__update_progress(1);\n\t\t\tctx.__loading_ended()\n\t\t},\n\t\t\t(xhr) => {\n\t\t\t\tctx.__update_progress(xhr.loaded / xhr.total);\n\t\t\t},\n\t\t\t(msg) => {\n\t\t\t\tctx.__set_error(msg + \"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\n\t\t\t\tctx.__loading_ended()\n\t\t\t}\n\t\t);\n\n\t}\n\n}\n","export class ModelUtilities\n{\n\n\tget_mesh(scene, result_callback)\n\t{\n\t\tscene.traverse((child)=>{\n\t\t\tif(child instanceof THREE.Mesh)\n\t\t\t{\n\t\t\t\tif(child.geometry instanceof THREE.Geometry)\n\t\t\t\t{\n\t\t\t\t\tchild.geometry = new THREE.BufferGeometry().fromGeometry(child.geometry);\n\t\t\t\t}\n\t\t\t\tresult_callback(child);\n\t\t\t}\n\t\t});\n\t}\n\n\tget_geometries(scene)\n\t{\n\t\tlet geometries = [];\n\n\t\tthis.get_mesh(scene, (child)=>{\n\t\t\tgeometries.push(child.geometry);\n\t\t});\n\t\treturn geometries;\n\t}\n\n\n\tassign_material(scene, material, name)\n\t{\n\t\tscene.traverse((child) => {\n\t\t\tif(child instanceof THREE.Mesh)\n\t\t\t{\n\t\t\t\t// assign to all if no name is given\n\t\t\t\tif(name === undefined)\n\t\t\t\t\tchild.material = material;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// if name is given, assign only to that\n\t\t\t\t\tif(child.name === name )\n\t\t\t\t\t{\n\t\t\t\t\t\tchild.material = material;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tclone_animated_gltf(gltf)\n\t{\n\t\tconst clone = {\n\t\t\tanimations: gltf.animations,\n\t\t\tscene: gltf.scene.clone(true)\n\t\t};\n\n\t\tconst skinnedMeshes = {};\n\n\t\tgltf.scene.traverse(node => {\n\t\t\tif (node.isSkinnedMesh) {\n\t\t\t\tskinnedMeshes[node.name] = node;\n\t\t\t}\n\t\t});\n\n\t\tconst cloneBones = {};\n\t\tconst cloneSkinnedMeshes = {};\n\n\t\tclone.scene.traverse(node => {\n\t\t\tif (node.isBone) {\n\t\t\t\tcloneBones[node.name] = node;\n\t\t\t}\n\n\t\t\tif (node.isSkinnedMesh) {\n\t\t\t\tcloneSkinnedMeshes[node.name] = node;\n\t\t\t}\n\t\t});\n\n\t\tfor (let name in skinnedMeshes) {\n\t\t\tconst skinnedMesh = skinnedMeshes[name];\n\t\t\tconst skeleton = skinnedMesh.skeleton;\n\t\t\tconst cloneSkinnedMesh = cloneSkinnedMeshes[name];\n\n\t\t\tconst orderedCloneBones = [];\n\n\t\t\tfor (let i = 0; i < skeleton.bones.length; ++i) {\n\t\t\t\tconst cloneBone = cloneBones[skeleton.bones[i].name];\n\t\t\t\torderedCloneBones.push(cloneBone);\n\t\t\t}\n\n\t\t\tcloneSkinnedMesh.bind(\n\t\t\t\tnew THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\n\t\t\t\tcloneSkinnedMesh.matrixWorld);\n\t\t}\n\n\t\treturn clone;\n\t}\n\n\tset_shadow_config(scene, cast, receive)\n\t{\n\t\tscene.traverse((child) => {\n\t\t\tif(child instanceof THREE.Mesh)\n\t\t\t{\n\t\t\t\tchild.castShadow = cast;\n\t\t\t\tchild.receiveShadow = receive;\n\t\t\t}\n\t\t});\n\t}\n\n\t__find_object(scene, object_name, result_callback)\n\t{\n\n\t\tscene.traverse((obj)=>{\n\t\t\tif(obj.name === object_name)\n\t\t\t\tresult_callback(obj);\n\t\t});\n\t}\n\n\tget_object(scene, object_name)\n\t{\n\t\tlet object = undefined;\n\t\tscene.traverse((obj)=>{\n\t\t\tif(obj.name === object_name)\n\t\t\t\tobject = obj;\n\t\t});\n\t\treturn object;\n\t}\n\tget_object_by_type(scene, object_type)\n\t{\n\t\tlet object = undefined;\n\t\tscene.traverse((obj)=>{\n\t\t\tif(obj.constructor.name === object_type)\n\t\t\t\tobject = obj;\n\t\t});\n\t\treturn object;\n\t}\n\n}\n\nconst model_utilities = new ModelUtilities();\nmodule.exports = model_utilities;\n","class MeshSampler\n{\n  constructor()\n  {\n\n  }\n\n  sample(geometry, sample_count)\n  {\n    let face_areas = [];\n\n\n    let min_area = 99999999;\n    for(let i=0; i< geometry.faces.length; i++)\n    {\n        let area = this.get_face_area (geometry.faces[i], geometry.vertices);\n        min_area = Math.min(area, min_area);\n        face_areas.push(area);\n    }\n\n    let normalized_faces_array = this.get_uniform_face_distribution(face_areas, min_area, geometry.faces);\n    let selected_faces = this.select_random_faces(normalized_faces_array, sample_count);\n    let sampled_data = this.sample_data_from_faces(selected_faces, geometry.vertices);\n    return sampled_data;\n\n  }\n\n\n  sample_data_from_faces(faces, vertices)\n  {\n      let sampled_points = [];\n      let sampled_normals = [];\n      for(let i=0; i< faces.length; i++)\n      {\n          let face = faces[i];\n\n          let w1 = Math.random();\n          let w2 = Math.random();\n\n          sampled_points.push(this.sample_point_in_face(w1, w2, vertices[face.a], vertices[face.b], vertices[face.c]).clone());\n          if(sampled_normals && face.normal)\n            sampled_normals.push(face.normal.clone());\n      }\n      return {points: sampled_points, normals: sampled_normals};\n  }\n\n  select_random_faces(faces, amount)\n  {\n    let selected_faces = [];\n    for(let i=0; i< amount; i++)\n    {\n      let random = parseInt(Math.random() * (faces.length-1));\n      let selected_face = faces[random];\n\n      selected_faces.push(selected_face);\n    }\n\n    return selected_faces;\n  }\n\n  get_uniform_face_distribution(face_areas, minimum_area, faces)\n  {\n      let extended_triangle_indices = [];\n      for(let i=0; i< face_areas.length; i++)\n      {\n          face_areas[i] /= minimum_area;\n          let repetitions_needed = parseInt(Math.round(face_areas[i]));\n          for(let j=0; j< repetitions_needed; j++)\n          {\n              extended_triangle_indices.push(faces[i]);\n          }\n      }\n      return extended_triangle_indices;\n  }\n\n  get_face_area(face, vertices)\n  {\n    let v1 = vertices[face.a].clone();\n    let v2 = vertices[face.b].clone();\n    let v3 = vertices[face.c].clone();\n\n    let vec1 = v2.clone().sub(v1);\n    let vec2 = v3.clone().sub(v1);\n    return vec1.cross(vec2).length()/2;\n  }\n\n  sample_point_in_face( w1, w2, v1, v2, v3)\n  {\n      if(w1+w2 > 1)\n      {\n          w1 = 1.0 - w1;\n          w2 = 1.0 - w2;\n      }\n\n      let w3 = 1.0 - (w1+w2);\n\n      return v1.clone().multiplyScalar(w1).add(v2.clone().multiplyScalar(w2)).add(v3.clone().multiplyScalar(w3));\n  }\n}\n\nconst mesh_sampler = new MeshSampler();\nmodule.exports = mesh_sampler;\n","import EventManager from '/EventManager';\n\nclass ResourceContainer\n{\n\tconstructor()\n\t{\n\t\tthis.resources = {};\n\t}\n\n\tset_resource(name, resource)\n\t{\n\t\tthis.resources[name] = resource;\n\t\tEventManager.fire_resource_loaded({name: name, value: resource});\n\t}\n\n\tget_resource(name)\n\t{\n\t\treturn this.resources[name];\n\t}\n\tget(name)\n\t{\n\t\treturn this.resources[name];\n\t}\n\n}\n\nconst resource_container = new ResourceContainer();\nmodule.exports = resource_container;\n","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform mat4 _InverseProjMatrix;\\n\\nuniform float _Bias;\\nuniform float _Radius;\\n\\nuniform vec2 _Resolution;\\nuniform float _FarPlane;\\n\\nvarying vec2 vUv;\\nvarying vec4 vRay;\\n\\nuniform vec3 _SampleKernel[64];\\nuniform sampler2D _RandomRotation;\\nuniform mat4 _ProjectionMatrix;\\n\\nvec3 decode_normal (vec4 enc)\\n{\\n    float scale = 1.7777;\\n    vec3 nn =\\n        enc.xyz*vec3(2.0*scale,2.0*scale,0.0) +\\n        vec3(-scale,-scale,1.0);\\n    float g = 2.0 / dot(nn.xyz,nn.xyz);\\n    vec3 n;\\n    n.xy = g*nn.xy;\\n    n.z = g-1.0;\\n    return n;\\n}\\n\\nfloat DecodeFloatRG( vec2 enc )\\n{\\n    vec2 kDecodeDot = vec2(1.0, 1.0/255.0);\\n    return dot( enc, kDecodeDot );\\n}\\n\\nvec3 DecodeNormal(vec2 uv)\\n{\\n  vec2 encoded_normal = texture2D(_MainTex, uv).zw;\\n  vec3 normalValue = normalize(decode_normal(vec4(encoded_normal, 0., 0.)));\\n  return normalize(normalValue);\\n}\\nvec3 DecodeViewPos(vec2 uv)\\n{\\n  vec2 depth = texture2D(_MainTex, uv).xy;\\n  vec4 inv_proj = _InverseProjMatrix * vec4(vUv * 2.0 - 1.0, 1.0, 1.0);\\n  return DecodeFloatRG(depth) * (vRay.xyz/vRay.w);\\n  \\n}\\n\\nvoid main()\\n{\\n\\n  vec2 noiseScale = vec2(_Resolution.x/4.0,_Resolution.y/4.0); // noise texture 4x4\\n\\n  vec3 fragPos   = DecodeViewPos(vUv);\\n  vec3 normal    = DecodeNormal(vUv);\\n  vec3 randomVec = texture2D(_RandomRotation, vUv * noiseScale).xyz;\\n  randomVec = vec3(randomVec.xy * 2.0 - 1.0, 0);\\n  randomVec = normalize(randomVec);\\n\\n  vec3 tangent   = normalize(randomVec - normal * dot(randomVec, normal));\\n  vec3 bitangent = normalize(cross(normal, tangent));\\n  mat3 TBN       = mat3(tangent, bitangent, normal); \\n\\n  float occlusion = 0.0;\\n  const int kernelSize = 64;\\n\\n  for(int i = 0; i < kernelSize; ++i)\\n  {\\n      // get sample position\\n      vec3 sample = TBN * _SampleKernel[i]; // From tangent to view-space\\n      sample = fragPos + sample * _Radius; \\n      vec4 projPos = _ProjectionMatrix * vec4(sample, 1.0);\\n      vec2 screenPos = projPos.xy / projPos.w;\\n      screenPos = screenPos * 0.5 +0.5;\\n\\n      float sampled_depth = DecodeViewPos(screenPos).z;\\n      float rangeCheck = smoothstep(0.0, 1.0, _Radius / abs(fragPos.z - sampled_depth));\\n      occlusion += step(sample.z+_Bias, sampled_depth) * rangeCheck;         \\n      \\n  } \\n  occlusion = (occlusion / float(kernelSize));\\n  gl_FragColor.rgb = vec3(occlusion,occlusion,occlusion); \\n  gl_FragColor.a = 1.0; \\n\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec4 vRay;\\n\\nuniform mat4 _InverseProjMatrix;\\n\\nvoid main()\\n{\\n\\tgl_Position = vec4(uv * 2.0 - 1.0, 1.0, 1.0);\\n\\tvRay = _InverseProjMatrix * vec4(uv * 2.0 - 1.0, 1.0, 1.0);\\n\\tvUv = uv;\\n}\";","import BlitMaterial from '/materials/BlitMaterial';\nimport frag from '/shaders/ssao/ssao_frag';\nimport vert from '/shaders/ssao/ssao_vert';\nimport Sphere from '/primitives/Sphere';\nimport SceneManager from '/SceneManager';\n\nexport default class SSAOMaterial extends BlitMaterial\n{\n\tconstructor()\n\t{\n\t\tsuper(frag, vert);\n\n\t\tthis.uniforms._InverseProjMatrix \t= { value: new THREE.Matrix4()};\n\t\tthis.uniforms._ProjectionMatrix \t= { value: new THREE.Matrix4()};\n\n\t\tthis.uniforms._Bias \t\t\t\t\t= { value: 0.0125};\n\t\tthis.uniforms._Radius \t\t\t\t= { value: 0.3\t};\n\t\tthis.uniforms._FarPlane\t\t\t\t= {value: 100};\n\n\n\t\tthis.uniforms._SampleKernel = {value: this.__get_sample_kernel()};\n\t\tthis.uniforms._RandomRotation = {value: this.__get_rotation_kernel()};\n\n\t}\n\n\n\t__get_sample_kernel()\n\t{\n\t\tlet sample_kernel = [];\n\t\tlet kernel_size = 64;\n\n\t\tfor(let i=0; i< kernel_size; i++)\n\t\t{\n\t\t\tlet dir = new THREE.Vector3(Math.random() * 2 -1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.random() * 2 -1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.random());\n\t\t\tdir.normalize();\n\t\t\tlet scale = i / kernel_size;\n\t\t\tscale   = THREE.Math.lerp(0.1, 1.0, scale * scale);\n\t\t\tdir.multiplyScalar(scale);\n\n   \t\tsample_kernel.push(dir);\n\t\t}\n\t\treturn sample_kernel;\n\n\t}\n\t__get_rotation_kernel()\n\t{\n\t\tlet rotation_kernel = new Uint8Array( 3 * 16 );\n\t\tfor(let i=0; i< 16; i++)\n\t\t{\n\t\t\trotation_kernel[i*3+1] = Math.floor(Math.random() * 255);\n\t\t\trotation_kernel[i*3+2] = Math.floor(Math.random() * 255);\n\t\t\trotation_kernel[i*3+3] = 0;\n\n\t\t}\n\n\t\tlet rotation_texture = new THREE.DataTexture( rotation_kernel, 4, 4, THREE.RGBFormat );\n\t\trotation_texture.wrapS = THREE.RepeatWrapping;\n\t\trotation_texture.wrapT = THREE.RepeatWrapping;\n\n\t\trotation_texture.needsUpdate = true;\n\t\treturn rotation_texture;\n\t}\n\n}\n","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform sampler2D _AO;\\nuniform vec2 _Resolution;\\nuniform vec2 _SampleDir;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n\\n  gl_FragColor.rgb = texture2D(_MainTex, vUv).rgb * (1.0 - texture2D(_AO, vUv).r);\\n  gl_FragColor.a = 1.0;\\n\\n}\\n\";","import BlitMaterial from '/materials/BlitMaterial';\nimport frag from '/shaders/ssao/ssao_compose_frag';\n\nexport default class SSAOComposeMaterial extends BlitMaterial\n{\n\tconstructor()\n\t{\n\t\tsuper(frag);\n\t\tthis.uniforms._AO = {value: undefined};\n\t}\n\n}\n","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform vec2 _Resolution;\\nuniform float _FarPlane;\\n\\nvarying vec2 vUv;\\nvarying vec4 vRay;\\n\\nvec3 decode_normal (vec4 enc)\\n{\\n    float scale = 1.7777;\\n    vec3 nn =\\n        enc.xyz*vec3(2.0*scale,2.0*scale,0.0) +\\n        vec3(-scale,-scale,1.0);\\n    float g = 2.0 / dot(nn.xyz,nn.xyz);\\n    vec3 n;\\n    n.xy = g*nn.xy;\\n    n.z = g-1.0;\\n    return n;\\n}\\n\\nfloat DecodeFloatRG( vec2 enc )\\n{\\n    vec2 kDecodeDot = vec2(1.0, 1.0/255.0);\\n    return dot( enc, kDecodeDot );\\n}\\n\\nvec3 DecodeNormal(vec2 uv)\\n{\\n  vec4 depthNormal = texture2D(_MainTex, uv);\\n  vec3 normalValue = normalize(decode_normal(vec4(depthNormal.zw, 0., 0.)));\\n  return normalize(normalValue);\\n}\\nvec3 DecodeViewPos(vec2 uv)\\n{\\n  vec2 depth = texture2D(_MainTex, uv).xy;\\n  return DecodeFloatRG(depth) * (vRay.xyz/vRay.w);\\n}\\n\\nvoid main()\\n{\\n    vec3 viewPos = DecodeViewPos(vUv);\\n    vec3 normalValue = DecodeNormal(vUv);\\n\\n    float vDepth = clamp(0.0, 1.0, length(viewPos)/_FarPlane);\\n    vDepth = length(viewPos)/_FarPlane;\\n    // gl_FragColor = vec4(normalValue*0.5+0.5, 1.0);\\n    gl_FragColor = vec4(vDepth,vDepth,vDepth, 1.0);\\n}\";","import BlitMaterial from '/materials/BlitMaterial';\nimport frag from '/shaders/depth_normals/debug_normals_frag';\nimport depth_normals_vert from '/shaders/ssao/ssao_vert';\n\nexport default class DisplayNormalTextureMaterial extends BlitMaterial\n{\n\tconstructor()\n\t{\n\t\tsuper(frag, depth_normals_vert);\n\t\tthis.uniforms._FarPlane\t\t\t\t\t\t= { value: 1};\n\t\tthis.uniforms._InverseProjMatrix\t= { value: new THREE.Matrix4()};\n\t}\n\n}\n","import BlitMaterial from '/materials/BlitMaterial';\nimport frag from '/shaders/box_blur/box_blur_frag';\n\nexport default class BoxBlurMaterial extends BlitMaterial\n{\n\tconstructor()\n\t{\n\t\tsuper(frag);\n\t\tthis.uniforms._SampleDir = { value: new THREE.Vector2()};\n\t}\n\n}\n","import BoxBlurMaterial from '/materials/BoxBlurMaterial';\nimport Graphics from '/Graphics';\n\nexport default class Blurrer\n{\n\n  constructor(renderer)\n  {\n    this.RT1 = new THREE.WebGLRenderTarget(1,1);\n    this.RT2 = new THREE.WebGLRenderTarget(1,1);\n    this.box_blur_mat = new BoxBlurMaterial();\n  }\n\n\n  blur(RT)\n  {\n    if(RT.width !== this.RT1.width || RT.height !== this.RT1.height)\n    {\n      this.RT1.setSize(RT.width, RT.height);\n      this.RT2.setSize(RT.width, RT.height);\n    }\n\n    this.box_blur_mat.uniforms._SampleDir.value.set(1,0);\n    Graphics.blit(RT, this.RT1, this.box_blur_mat);\n    this.box_blur_mat.uniforms._SampleDir.value.set(0,1);\n    Graphics.blit(this.RT1, RT, this.box_blur_mat);\n    // return this.RT2;\n\n  }\n\n\n\n\n}\n","import CameraManager from '/CameraManager';\nimport SceneManager from '/SceneManager';\nimport Screen from '/Screen';\nimport BaseRender from '/render_mode/BaseRender';\nimport ResourceContainer from '/ResourceContainer';\nimport Configuration from '/Configuration';\nimport SSAOMaterial from '/materials/SSAOMaterial';\nimport SSAOComposeMaterial from '/materials/SSAOComposeMaterial';\nimport DisplayNormalTextureMaterial from '/materials/DisplayNormalTextureMaterial';\nimport Blurrer from '/render_utilities/Blurrer';\nimport Graphics from '/Graphics';\n\n\nexport default class NormalAORender extends BaseRender\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.ssao_mat = new SSAOMaterial();\n\t\tthis.ssao_compose_mat = new SSAOComposeMaterial();\n\t\tthis.debug_normals = new DisplayNormalTextureMaterial();\n\n\n\t\tthis.ssaa = Configuration.use_ssaa? 2 : 1;\n\n\t\tthis.main_RT = new THREE.WebGLRenderTarget(Screen.width * this.ssaa, Screen.height * this.ssaa);\n\n\t\tthis.SSAO_RT = new THREE.WebGLRenderTarget(Screen.width, Screen.height);\n\n\t\tthis.blurrer = new Blurrer();\n\t\tGraphics.generateDepthNormalTexture = true;\n\n\n\t}\n\n\n\trender()\n\t{\n\n\t\t\tthis.__check_RT_size();\n\n\t\t\tGraphics.clear(this.main_RT, CameraManager.current, true, false);\n\t\t\tGraphics.render(SceneManager.current, CameraManager.current, this.main_RT);\n\n\t\t\tthis.__update_uniforms();\n\n\n\t\t\tGraphics.blit(Graphics.depth_normals_RT, this.SSAO_RT, this.ssao_mat);\n\n\t\t\t// // BLUR\n\t\t\tthis.blurrer.blur(this.SSAO_RT);\n\t\t\tGraphics.blit(this.SSAO_RT, undefined);\n\n\t\t\t// // COMPOSE\n\t\t\tthis.ssao_compose_mat.uniforms._AO.value = this.SSAO_RT.texture;\n\t\t\tGraphics.blit(this.main_RT, undefined, this.ssao_compose_mat);\n\n\n\t\t\t// Graphics.blit(this.SSAO_RT, undefined);\n\t}\n\n\t__update_uniforms()\n\t{\n\t\tthis.ssao_mat.uniforms._InverseProjMatrix.value.getInverse(CameraManager.current.projectionMatrix);\n\t\tthis.ssao_mat.uniforms._ProjectionMatrix.value.copy(CameraManager.current.projectionMatrix);\n\t\tthis.ssao_mat.uniforms._FarPlane.value \t\t\t= CameraManager.current.far;\n\t}\n\n\t__check_RT_size()\n\t{\n\t\tif(this.main_RT.width !== Screen.width * this.ssaa || this.main_RT.height !== Screen.height * this.ssaa)\n\t\t{\n\t\t\tthis.main_RT.setSize(Screen.width * this.ssaa, Screen.height * this.ssaa);\n\t\t\tthis.SSAO_RT.setSize(Screen.width, Screen.height);\n\t\t}\n\t}\n\n}\n","import CameraManager from '/CameraManager';\nimport SceneManager from '/SceneManager';\nimport Screen from '/Screen';\nimport BaseRender from '/render_mode/BaseRender';\nimport Graphics from '/Graphics';\n\nexport default class NormalRender extends BaseRender\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\trender()\n\t{\n\t\tGraphics.clear(undefined, CameraManager.current, true, true);\n\n\t\tGraphics.render(SceneManager.current, CameraManager.current);\n\t}\n\n}\n","export default class ObjectUtilities\r\n{\r\n\tconstructor(){}\r\n\r\n  // Changes XML to JSON\r\n  static xml_to_json(xml) {\r\n\r\n    // Create the return object\r\n    var obj = {};\r\n\r\n    if (xml.nodeType == 1) { // element\r\n      // do attributes\r\n      if (xml.attributes.length > 0) {\r\n        obj[\"@attributes\"] = {};\r\n        for (var j = 0; j < xml.attributes.length; j++) {\r\n          var attribute = xml.attributes.item(j);\r\n          obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n        }\r\n      }\r\n    } else if (xml.nodeType == 3) { // text\r\n      obj = xml.nodeValue;\r\n    }\r\n\r\n    // do children\r\n    if (xml.hasChildNodes()) {\r\n      for (var i = 0; i < xml.childNodes.length; i++) {\r\n        var item = xml.childNodes.item(i);\r\n        var nodeName = item.nodeName;\r\n        if (typeof (obj[nodeName]) == \"undefined\") {\r\n          obj[nodeName] = this.xml_to_json(item);\r\n        } else {\r\n          if (typeof (obj[nodeName].push) == \"undefined\") {\r\n            var old = obj[nodeName];\r\n            obj[nodeName] = [];\r\n            obj[nodeName].push(old);\r\n          }\r\n          obj[nodeName].push(this.xml_to_json(item));\r\n        }\r\n      }\r\n    }\r\n    return obj;\r\n  };\r\n\r\n}\r\n\r\n","export default class PerspectiveCamera extends THREE.PerspectiveCamera\n{\n\tconstructor(fov, aspect, near, far)\n\t{\n\t\tsuper(fov, aspect, near, far);\n\n\t\tthis.clear_color = new THREE.Color(\"#000000\");\n\t\tthis.clear_alpha = 1;\n\t}\n}","export default class GeometryBatch\n{\n\tconstructor(geometry, batch_width)\n\t{\n\t\tthis.geometry = geometry;\n\n\t\tthis.material = undefined;\n\t\tthis.uniforms = {};\n\t\tthis.batch_width = batch_width;\n\n\t\tthis.data_textures = [];\n\n\t\tthis.object_names = undefined;\n\n\n\t\tthis.zero_offset = new THREE.Vector2();\n\t\tthis.write_offset = new THREE.Vector2();\n\n\t\tthis.uniform_dirty_count = 0;\n\n\t\tthis.tmp_uploaded_data_count = 0;\n\n\t}\n\n\tinit(object_names, vert_shader, frag_shader)\n\t{\n\t\tthis.material = new THREE.ShaderMaterial({\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: vert_shader,\n\t\t\tfragmentShader: frag_shader\n\t\t});\n\t\tthis.object_names = object_names;\n\n\t}\n\n\tadd_global_uniform(name, data)\n\t{\n\t\tthis.uniforms[name] = {value: data};\n\t\tthis.material.needsUpdate = true;\n\t}\n\tset_global_uniform(name, data)\n\t{\n\t\tthis.uniforms[name].value = data;\n\t}\n\n\tadd_object_uniform_v3(uniform_name, default_value_v3)\n\t{\n\t\tlet src_tex \t\t= this.__create_rgb_texture(this.batch_width);\n\t\tlet dst_tex \t\t= this.__create_rgb_texture(this.batch_width);\n\t\tlet one_pixel_tex = this.__create_rgb_texture(1);\n\n\n\t\tlet new_data_tex = this.__add_data_texture(uniform_name, src_tex, dst_tex, one_pixel_tex);\n\n\t\tif(default_value_v3)\n\t\t\tthis.__flood_data_texture_rgb(new_data_tex, default_value_v3);\n\t\n\t}\n\n\tadd_object_uniform_v4(uniform_name, default_value_v4)\n\t{\n\t\tlet src_tex \t\t= this.__create_rgba_texture(this.batch_width);\n\t\tlet dst_tex \t\t= this.__create_rgba_texture(this.batch_width);\n\t\tlet one_pixel_tex = this.__create_rgba_texture(1);\n\n\n\t\tlet new_data_tex = this.__add_data_texture(uniform_name, src_tex, dst_tex, one_pixel_tex);\n\n\t\tif(default_value_v4)\n\t\t\tthis.__flood_data_texture_rgba(new_data_tex, default_value_v4);\n\t\n\t}\n\n\tadd_object_uniform_v4_float(uniform_name, default_value_v4)\n\t{\n\t\tlet src_tex \t\t= this.__create_rgba_float_texture(this.batch_width);\n\t\tlet dst_tex \t\t= this.__create_rgba_float_texture(this.batch_width);\n\t\tlet one_pixel_tex = this.__create_rgba_float_texture(1);\n\n\n\t\tlet new_data_tex = this.__add_data_texture(uniform_name, src_tex, dst_tex, one_pixel_tex);\n\n\t\tif(default_value_v4)\n\t\t\tthis.__flood_data_texture_rgba(new_data_tex, default_value_v4);\n\t\n\t}\n\n\tset_object_uniform_v3(object_name, uniform_name, vector3, use_r, use_g, use_b)\n\t{\n\t\tlet obj_index = this.__get_object_index(object_name);\n\t\tlet data_texture = this.__get_data_texture(uniform_name);\n\n\t\tthis.__set_pixel_rgb(data_texture.src, obj_index, vector3, use_r, use_g, use_b);\n\t\tthis.__set_pixel_rgb(data_texture.one_pixel, 0\t, vector3, use_r, use_g, use_b);\n\n\t\tdata_texture.last_accessed_index = obj_index;\n\n\t\tdata_texture.dirty_count++; \n\t}\n\n\tset_object_uniform_v4(object_name, uniform_name, vector4, use_r, use_g, use_b, use_a)\n\t{\n\t\tlet obj_index = this.__get_object_index(object_name);\n\t\tlet data_texture = this.__get_data_texture(uniform_name);\n\n\t\tthis.__set_pixel_rgba(data_texture.src, obj_index, vector4, use_r, use_g, use_b, use_a);\n\t\tthis.__set_pixel_rgba(data_texture.one_pixel, 0, vector4, use_r, use_g, use_b, use_a);\n\t\tdata_texture.last_accessed_index = obj_index;\n\n\t\tdata_texture.dirty_count++; \n\t}\n\n\n\tupload_texture_data(renderer, upload_budget)\n\t{\n\t\tfor(let i=0; i< this.data_textures.length; i++)\n\t\t{\n\t\t\tif(upload_budget > 0 && this.data_textures[i].dirty_count > 0)\n\t\t\t{\n\t\t\t\tif(this.data_textures[i].dirty_count === 1)\n\t\t\t\t\tthis.__partial_texture_data_upload(renderer, this.data_textures[i]);\n\t\t\t\tif(this.data_textures[i].dirty_count > 1)\n\t\t\t\t\tthis.__full_texture_data_upload(renderer, this.data_textures[i]);\n\n\t\t\t\tthis.data_textures[i].dirty_count = 0;\n\n\t\t\t\tupload_budget--;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n\tget_uniform_dirty_count()\n\t{\n\t\tthis.uniform_dirty_count = 0;\n\t\tfor(let i=0; i< this.data_textures.length; i++)\n\t\t{\n\t\t\tif(this.data_textures[i].dirty_count > 0)\n\t\t\t\tthis.uniform_dirty_count++;\n\t\t}\n\t\treturn this.uniform_dirty_count;\n\t}\n\n\n\t__full_texture_data_upload(renderer, texture_data)\n\t{\n\t\t// console.log(\"full texture update of\"+ texture_data.name);\n\t\ttexture_data.dst.needsUpdate = true;\n\t\trenderer.copyTextureToTexture(\n\t\t\t\t\tthis.zero_offset, \n\t\t\t\t\ttexture_data.src, \n\t\t\t\t\ttexture_data.dst\n\t\t\t);\n\t}\n\t__partial_texture_data_upload(renderer, texture_data)\n\t{\n\t\t// console.log(\"partial texture update\"+ texture_data.name);\n\t\tlet index = texture_data.last_accessed_index;\n\t\tif(index === -1)\n\t\t\treturn;\n\t\t\n  \tthis.write_offset.y = Math.floor(index/this.batch_width);\n  \tthis.write_offset.x = index - this.batch_width*this.write_offset.y;\n\t\trenderer.copyTextureToTexture(\n\t\t\tthis.write_offset, \n\t\t\ttexture_data.one_pixel, \n\t\t\ttexture_data.dst\n\t\t);\n\t}\n\n\tget_mesh()\n\t{\n\t\treturn new THREE.Mesh(this.geometry, this.material);\n\t}\n\n\t__set_pixel_rgb(data_texture, index, vector3, use_r, use_g, use_b)\n\t{\n\t\tif(use_r)\n\t\t\tdata_texture.image.data[index*3+0] = vector3.x;\t    \n\t\tif(use_g)\n\t\t\tdata_texture.image.data[index*3+1] = vector3.y;\t    \n\t\tif(use_b)\n\t\t\tdata_texture.image.data[index*3+2] = vector3.z;\t\n\t}\n\t__set_pixel_rgba(data_texture, index, vector4, use_r, use_g, use_b, use_a)\n\t{\n\t\tif(use_r)\n\t\t\tdata_texture.image.data[index*4+0] = vector4.x;\t    \n\t\tif(use_g)\n\t\t\tdata_texture.image.data[index*4+1] = vector4.y;\t    \n\t\tif(use_b)\n\t\t\tdata_texture.image.data[index*4+2] = vector4.z;\t\n\t\tif(use_a)\n\t\t\tdata_texture.image.data[index*4+3] = vector4.w;\n\t}\n\n\t__flood_data_texture_rgb(data_texture, v3)\n\t{\n\t\tfor(let i=0; i< this.batch_width * this.batch_width; i++)\n\t\t{\n\t\t\tthis.__set_pixel_rgb(data_texture.src, i, v3, true, true, true);\n\t\t\tdata_texture.dirty_count++;\n\t\t}\n\t}\n\n\t__flood_data_texture_rgba(data_texture, v4)\n\t{\n\t\tfor(let i=0; i< this.batch_width * this.batch_width; i++)\n\t\t{\n\t\t\tthis.__set_pixel_rgba(data_texture.src, i, v4, true, true, true, true);\n\t\t\tdata_texture.dirty_count++;\n\t\t}\n\t}\n\n\n\t__create_rgb_texture(width)\n\t{\n\t\tlet data = new Uint8Array( 3 * width * width );\n\t\treturn new THREE.DataTexture( data, width, width, THREE.RGBFormat );\n\t}\n\t__create_rgba_texture(width)\n\t{\n\t\tlet data = new Uint8Array( 4 * width * width );\n\t\treturn new THREE.DataTexture( data, width, width, THREE.RGBAFormat );\n\t}\n\n\t__create_rgba_float_texture(width)\n\t{\n\t\tlet data = new Float32Array( 4 * width * width );\n\t\treturn new THREE.DataTexture( data, width, width, THREE.RGBA, THREE.FloatType );\n\t}\n\n\t__get_data_texture(uniform_name)\n\t{\n\t\tfor(let i=0; i< this.data_textures.length; i++)\n\t\t{\n\t\t\tif(this.data_textures[i].name === uniform_name)\n\t\t\t\treturn this.data_textures[i];\n\t\t}\n\t\tconosle.error(\"Data texture \"+uniform_name+\" does not exist\");\n\t\treturn undefined;\n\t}\n\t__get_object_index(name)\n\t{\n\t\tfor(let i=0; i< this.object_names.length; i++)\n\t\t{\n\t\t\tif(this.object_names[i] === name)\n\t\t\t\treturn i;\n\t\t}\n\t\tconsole.error(\"the name \"+name+\" is not contained in this batch\");\n\t\treturn undefined;\n\t}\n\n\t__add_data_texture(uniform_name, src_texture, dst_texture, one_pixel_text)\n\t{\n\t\tdst_texture.needsUpdate = true;\n\n\t\tthis.data_textures.push({\n\t\t\tname: uniform_name,\n\t\t\tsrc: src_texture, \n\t\t\tdst: dst_texture,\n\t\t\tone_pixel: one_pixel_text,\n\t\t\tlast_accessed_index: -1,\n\t\t\tdirty_count: 0\n\t\t});\n\n\t\tthis.uniforms[uniform_name] = {value: dst_texture};\n\t\treturn this.data_textures[this.data_textures.length-1];\n\t}\n\n\tdispose()\n\t{\n\t\tfor(let i=0; i< this.data_textures.length; i++)\n\t\t{\n\t\t\tthis.data_textures[i].src.dispose();\n\t\t\tthis.data_textures[i].dst.dispose();\n\t\t\tthis.data_textures[i].one_pixel.dispose();\n\t\t}\n\t}\n\n\t\n}","import GeometryBatch from '/static_batcher/GeometryBatch'\n\nclass GeometryBatcher\n{\n\tconstructor()\n\t{\n\t\tthis.batches = [];\n\t}\n\n\tbatch(buffer_geometries)\n\t{\n\t  let attr_accessor_uvs = [];\n\t  let texture_width = THREE.Math.ceilPowerOfTwo(Math.sqrt(buffer_geometries.length));\n\t  // console.log(\"Store count: \" + buffer_geometries.length + \", Texture size: \" +texture_width);\n\n\t  this.__init_uv_array(attr_accessor_uvs, texture_width);\n\n\n\t  let uv_index = 0;\n\n\t  for(let i=0; i< buffer_geometries.length; i++)\n\t  {\n\t    let vertex_count = buffer_geometries[i].getAttribute('position').count;\n\t    let y = Math.floor(i/texture_width);\n\t    let x = i - texture_width*y;\n\t    for(let count = 0; count < vertex_count; count++)\n\t    {\n\n\t      attr_accessor_uvs[uv_index] = (x/texture_width) + 0.5/texture_width;\n\t      attr_accessor_uvs[uv_index+1] = (y/texture_width) + 0.5/texture_width;\n\t      uv_index+=2;\n\t    }\n\t  }\n\n\t  let buffer_attribute = new THREE.BufferAttribute( new Float32Array( attr_accessor_uvs ), 2);\n\t  let buffer_geometry = THREE.BufferGeometryUtils.mergeBufferGeometries(buffer_geometries);\n\t  buffer_geometry.setAttribute( 'attr_accessor_uv', buffer_attribute);\n\n\t  this.batches.push(new GeometryBatch(buffer_geometry, texture_width));\n\t  return this.batches[this.batches.length-1];\n\n\t}\n\n\tupload_texture_data(renderer)\n\t{\n\t\tfor(let i=0; i< this.batches.length; i++)\n\t\t{\n\t\t\tthis.batches[i].upload_texture_data(renderer, 1);\n\t\t}\n\t}\n\n\n\n\t__init_uv_array(uvs, texture_width)\n\t{\n\t\tfor(let i=0; i< texture_width*texture_width*2; i++)\n\t  {\n\t    uvs.push(0);\n\t  }\n\t}\n}\n\n\nconst geometry_batcher = new GeometryBatcher();\nmodule.exports = geometry_batcher;\n","import Time from '/Time';\nimport Input from '/Input';\nimport UI from '/UI';\nimport Debug from '/Debug';\nimport GeometryBatcher from '/static_batcher/GeometryBatcher';\nimport BaseApplication from '/BaseApplication';\n\nexport default class RenderLoop {\n\n  constructor(target_application, renderer) {\n\n    target_application = target_application || new BaseApplication();\n\n    this._frame_id = -1;\n\n    this.target_application = target_application;\n    this.renderer = renderer;\n\n    this.is_running = true;\n    this.frames_passed = 0;\n\n  }\n\n  update() {\n\n    if(!this.is_running)\n      return;\n\n    Time.__update();\n    Debug.clear();\n\n    //###### START CYCLE ######\n    if (this.frames_passed === 5) {\n      this.target_application.post_start();\n    }\n\n    this.target_application.update();\n\n    this.target_application.on_pre_render();\n\n    this.renderer.update();     // render scene\n    UI.update();                // update after new camera matrix has been calculated\n    UI.render(this.renderer);   // render ui layer on top\n\n    this.target_application.on_post_render();\n\n    if(Debug.rt_debug)\n      this.renderer.blit(Debug.rt_debug);\n    //###### END  CYCLE #######\n    Input.clear();\n    UI.clear();\n\n    //   GeometryBatcher.upload_texture_data(this.renderer);\n\n    this._frame_id = requestAnimationFrame(this.update.bind(this));\n    this.frames_passed++;\n  }\n\n  start() {\n    this.target_application.start();\n    this.update();\n    this.is_running = true;\n\n\n  }\n\n  stop() {\n    this.is_running = false;\n    this.target_application.end();\n\n    cancelAnimationFrame(this._frame_id);\n  }\n}\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class TextureLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.TextureLoader();\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.url, (image)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, image);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\tundefined,\r\n\t\t\t() => {\r\n\t\t\t\tctx.__set_error(\"Image could not  be loaded. Maybe wrong name or path, I don't know\" + '¯\\\\_(ツ)_/¯');\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class GLTFLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.GLTFLoader();\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.url, (gltf)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, gltf);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\t(xhr) =>{\r\n\t\t\t\tctx.__update_progress(xhr.loaded/xhr.total);\r\n\t\t\t},\r\n\t\t\t(msg) => {\r\n\t\t\t\tctx.__set_error(msg +\"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class DAELoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.ColladaLoader();\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.url, (gltf)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, gltf);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\t(xhr) =>{\r\n\t\t\t\tctx.__update_progress(xhr.loaded/xhr.total);\r\n\t\t\t},\r\n\t\t\t(msg) => {\r\n\t\t\t\tctx.__set_error(msg +\"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class TextLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.FileLoader();\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.url, (gltf)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, gltf);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\t(xhr) =>{\r\n\t\t\t\tctx.__update_progress(xhr.loaded/xhr.total);\r\n\t\t\t},\r\n\t\t\t(msg) => {\r\n\t\t\t\tctx.__set_error(msg);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class CubemapLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.CubeTextureLoader();\r\n\t\tthis.loader.setPath(url + \"/\");\r\n\t\tthis.urls = [\r\n\t\t\t'px.png',\r\n\t\t\t'nx.png',\r\n\t\t\t'py.png',\r\n\t\t\t'ny.png',\r\n\t\t\t'pz.png',\r\n\t\t\t'nz.png'\r\n\t\t]\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.urls, (image)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, image);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\tundefined,\r\n\t\t\t(error) => {\r\n\t\t\t\tctx.__set_error(\"Image could not  be loaded. Maybe wrong name or path, I don't know\" + '¯\\\\_(ツ)_/¯', error);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","export default class AudioClip\n{\n    constructor(buffer, loop = true, volume = 1)\n    {\n        this.buffer = buffer;\n        this.loop = loop;\n        this.volume = volume;\n\n        this.audio = undefined;\n    }\n\n    init(audio_listener)\n    {\n        this.audio = new THREE.Audio(audio_listener);\n        this.audio.setBuffer(this.buffer);\n        this.audio.setLoop(this.loop);\n        this.audio.setVolume(this.volume);\n    }\n\n    play()\n    {\n        this.audio.play();\n    }\n\n}\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\nimport AudioClip from '/components/AudioClip';\r\n\r\nexport default class AudioLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url, loop = true, volume = 1)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.AudioLoader();\r\n\t\tthis.loop = loop;\r\n\t\tthis.volume = volume;\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(this.url, (buffer)=> {\r\n\r\n\t\t\tresource_container.set_resource(ctx.resource_id, new AudioClip(buffer, this.loop, this.volume));\r\n\r\n\r\n\t\t\tctx.__update_progress(1);\r\n\t\t\tctx.__loading_ended()\r\n\t\t},\r\n\t\tundefined,\r\n\t\t(error) => {\r\n\t\t\tctx.__set_error(\"Audio could not be loaded. Maybe wrong name or path, I don't know\" + '¯\\\\_(ツ)_/¯', error);\r\n\t\t\tctx.__loading_ended()\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\n\nexport default class OBJLoader extends AbstractLoader {\n    constructor(resource_id, url) {\n        super(resource_id, url);\n        this.loader = new THREE.OBJLoader();\n    }\n\n    load(resource_container) {\n        let ctx = this;\n\n        this.loader.load(this.url, (gltf) => {\n            resource_container.set_resource(ctx.resource_id, gltf);\n            ctx.__update_progress(1);\n            ctx.__loading_ended()\n        },\n            (xhr) => {\n                ctx.__update_progress(xhr.loaded / xhr.total);\n            },\n            (msg) => {\n                ctx.__set_error(msg + \"\\n\\n\\t If the error says something about unexpected token < in JSON then probably the problem is related to the file not being found. Check the name and path of the resource\");\n                ctx.__loading_ended()\n            }\n        );\n    }\n\n}\n","import AbstractLoader from './AbstractLoader';\n\nexport default class RGBETextureLoader extends AbstractLoader\n{\n  constructor(resource_id, url)\n  {\n    super(resource_id, url);\n    this.loader = new THREE.RGBELoader();\n    this.loader.setDataType( THREE.UnsignedByteType );\n\n  }\n\n  load(resource_container)\n  {\n    let ctx = this;\n\n    this.loader.load( this.url, (hdr)=> {\n        resource_container.set_resource(ctx.resource_id, hdr);\n        ctx.__update_progress(1);\n        ctx.__loading_ended()\n      },\n      (xhr) =>{\n        ctx.__update_progress(xhr.loaded/xhr.total);\n      },\n      (msg) => {\n        ctx.__set_error(msg +\"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\n        ctx.__loading_ended()\n      }\n    );\n  }\n\n}\n","import AbstractLoader from '/resource_loader/AbstractLoader';\n\nexport default class PointArrayLoader extends AbstractLoader {\n    constructor(resource_id, url) {\n        super(resource_id, url);\n        this.loader = new THREE.FileLoader();\n    }\n\n    load(resource_container) {\n        let ctx = this;\n\n        this.loader.load(this.url, (text) => {\n            resource_container.set_resource(ctx.resource_id, ctx.parse_path(text));\n            ctx.__update_progress(1);\n            ctx.__loading_ended()\n        },\n            (xhr) => {\n                ctx.__update_progress(xhr.loaded / xhr.total);\n            },\n            (msg) => {\n                ctx.__set_error(msg);\n                ctx.__loading_ended()\n            }\n        );\n    }\n\n    parse_path(raw_data) {\n        let string_array = raw_data.split('\\n');\n\n        if (string_array[string_array.length - 1] === \"\") {\n            string_array.pop();\n        }\n\n        let positions = [];\n\n        for (let i = 0; i < string_array.length; i += 3) {\n            let x = parseFloat(string_array[i + 0]);\n            let y = parseFloat(string_array[i + 1]);\n            let z = parseFloat(string_array[i + 2]);\n            positions.push(new THREE.Vector3(x, y, z));\n        }\n        return positions;\n        // let curve = new THREE.CatmullRomCurve3(positions);\n        // return curve.getPoints(100);\n    }\n\n}\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class HDRCubeTextureLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.HDRCubeTextureLoader();\r\n\t\tthis.url_suffix = [ '/px.hdr', '/nx.hdr', '/py.hdr', '/ny.hdr', '/pz.hdr', '/nz.hdr' ];\r\n\r\n\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.setPath( this.url)\r\n\t\t\t\t\t\t   .setDataType( THREE.UnsignedByteType )\r\n\t\t\t\t\t     .load(\tthis.url_suffix, (hdr)=> {\r\n\t\t\t\tresource_container.set_resource(ctx.resource_id, hdr);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\t(xhr) =>{\r\n\t\t\t\tctx.__update_progress(xhr.loaded/xhr.total);\r\n\t\t\t},\r\n\t\t\t(msg) => {\r\n\t\t\t\tctx.__set_error(msg +\"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import TextureLoader from '/resource_loader/TextureLoader';\r\nimport GLTFLoader from '/resource_loader/GLTFLoader';\r\nimport DAELoader from '/resource_loader/DAELoader';\r\nimport TextLoader from '/resource_loader/TextLoader';\r\nimport CubemapLoader from '/resource_loader/CubemapLoader';\r\nimport AudioLoader from '/resource_loader/AudioLoader';\r\nimport JSONLoader from '/resource_loader/JSONLoader';\r\nimport OBJLoader from '/resource_loader/OBJLoader';\r\nimport RGBETextureLoader from '/resource_loader/RGBETextureLoader';\r\nimport PointArrayLoader from '/resource_loader/PointArrayLoader';\r\nimport HDRCubeTextureLoader from '/resource_loader/HDRCubeTextureLoader';\r\nimport ResourceContainer from '/ResourceContainer';\r\n\r\nexport default class ResourceBatch\r\n{\r\n\tconstructor(batch_name)\r\n\t{\r\n\t\tthis.resource_loaders = [];\r\n\t\tthis.batch_name = batch_name || \"unnamed batch\";\r\n\t}\r\n\r\n\tadd_texture(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new TextureLoader(resource_id, url));\r\n\t}\r\n\r\n\tadd_gltf(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new GLTFLoader(resource_id, url));\r\n\t}\r\n\tadd_dae(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new DAELoader(resource_id, url));\r\n\t}\r\n\tadd_obj(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new OBJLoader(resource_id, url));\r\n\t}\r\n\tadd_text(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new TextLoader(resource_id, url));\r\n\t}\r\n\tadd_cubemap(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new CubemapLoader(resource_id, url));\r\n\t}\r\n\tadd_audio(resource_id, url, loop, volume) {\r\n\t\tthis.resource_loaders.push(new AudioLoader(resource_id, url, loop, volume));\r\n\t}\r\n\tadd_json(resource_id, url) {\r\n\t\tthis.resource_loaders.push(new JSONLoader(resource_id, url));\r\n\t}\r\n\tadd_point_array(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new PointArrayLoader(resource_id, url));\r\n\t}\r\n\tadd_hdr(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new RGBETextureLoader(resource_id, url));\r\n\t}\r\n\tadd_hdr_cubemap(resource_id, url) {\r\n\t\tthis.resource_loaders.push(new HDRCubeTextureLoader(resource_id, url));\r\n\t}\r\n\tadd_loader(loader)\r\n\t{\r\n\t\tthis.resource_loaders.push(loader)\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\tthis.resource_loaders[i].load(resource_container || ResourceContainer);\r\n\t\t}\r\n\t}\r\n\r\n\tget loading_finished()\r\n\t{\r\n\t\tlet finished = true;\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\tfinished = finished && this.resource_loaders[i].has_finished;\r\n\t\t}\r\n\t\treturn finished;\r\n\t}\r\n\r\n\tget has_errors()\r\n\t{\r\n\t\tlet has_error = false;\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\thas_error = has_error || this.resource_loaders[i].has_error;\r\n\t\t}\r\n\t\treturn has_error;\r\n\t}\r\n\r\n\tprint_errors()\r\n\t{\r\n\t\tconsole.error(\"Batch <\"+this.batch_name+\"> could not load successfully\")\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\tif(this.resource_loaders[i].has_error)\r\n\t\t\t\tthis.resource_loaders[i].print_error();\r\n\t\t}\r\n\t}\r\n\r\n\tget_progress()\r\n\t{\r\n\t\tlet progress = 0;\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\tprogress+=this.resource_loaders[i].progress;\r\n\t\t}\r\n\t\tif (this.resource_loaders.length === 0)\r\n\t\t{\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn progress/this.resource_loaders.length;\r\n\t}\r\n}\r\n","import CanvasDrawer from '/canvas_drawer/CanvasDrawer';\n\nexport default class SimpleTextDrawer extends CanvasDrawer{\n\n  constructor ()\n  {\n    super();\n    this.text_margin = new THREE.Vector2(2,0);\n  }\n\n  __draw (text, ctxOptions, canvas, ctx)\n  {\n    ctx.font = ctxOptions.font;\n\n    let text_size = this.get_text_size(text, ctxOptions.font);\n    // canvas.width = THREE.Math.ceilPowerOfTwo(text_size.x+this.text_margin.x*2);\n    // canvas.height = THREE.Math.ceilPowerOfTwo(text_size.y+ this.text_margin.y*2);\n    canvas.width = Math.ceil(text_size.x+this.text_margin.x*2);\n    canvas.height = Math.ceil(text_size.y+ this.text_margin.y*2);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // ctx.globalAlpha = 0.2;\n    // ctx.fillStyle = \"#FF0000\";\n    // ctx.fillRect(0,0, canvas.width, canvas.height);\n\n\n\n    ctx.globalAlpha = 1;\n\n    ctx.font = ctxOptions.font;\n    ctx.fillStyle = ctxOptions.font_color || \"#000000\";\n    ctx.textBaseline = \"middle\";\n    ctx.textAlignment = \"left\";\n    ctx.fillText(text, 0, canvas.height/2);\n  }\n\n}\n","// This class helps with parsing an entire recording that spans several days, into one-day recordings\n// that start at 0:00:00 and ends at 23:59:59, except for the first and last day of a recording range\nexport default class TimeUtilities\n{\n\tconstructor(){}\n\n}\n\n","export default class Validation\n{\n\tconstructor(){}\n\n  static is_int(n) {\n    return Number(n) === n && n % 1 === 0;\n  }\n\n  static is_float(n) {\n    return Number(n) === n && n % 1 !== 0;\n  }\n\n  static is_json(str)\n  {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","import ArrayUtilities from '/utilities/ArrayUtilities.js';\nimport BaseApplication from '/BaseApplication';\nimport BaseShaderMaterial from '/materials/BaseShaderMaterial';\nimport CameraManager from '/CameraManager';\nimport CameraUtilities from '/utilities/CameraUtilities';\nimport Capabilities from '/Capabilities';\nimport Components from '/Components';\nimport CanvasDrawer from '/canvas_drawer/CanvasDrawer';\nimport Configuration from '/Configuration';\nimport Debug from '/Debug';\nimport DebugNormalsRender from '/render_mode/DebugNormalsRender';\nimport EasingFunctions from '/utilities/EasingFunctions';\nimport EventManager from '/EventManager';\nimport Graphics from '/Graphics';\nimport ImageUtilities from '/utilities/ImageUtilities';\nimport Input from '/Input';\nimport JSONLoader from '/resource_loader/JSONLoader';\nimport MathUtilities from '/utilities/MathUtilities';\nimport ModelUtilities from '/utilities/ModelUtilities';\nimport MeshSampler from '/utilities/MeshSampler';\nimport NormalAORender from '/render_mode/NormalAORender';\nimport NormalRender from '/render_mode/NormalRender';\nimport ObjectUtilities from '/utilities/ObjectUtilities';\nimport PerspectiveCamera from '/PerspectiveCamera';\nimport RenderLoop from '/RenderLoop';\nimport ResourceBatch from '/resource_loader/ResourceBatch';\nimport ResourceContainer from '/ResourceContainer';\nimport SceneManager from '/SceneManager';\nimport Screen from '/Screen';\nimport SimpleTextDrawer from '/canvas_drawer/SimpleTextDrawer';\nimport Time from '/Time';\nimport TimeUtilities from '/utilities/TimeUtilities';\nimport UI from '/UI';\nimport Validation from '/utilities/Validation';\n\nmodule.exports = {\n  ArrayUtilities: ArrayUtilities,\n  BaseApplication: BaseApplication,\n  BaseShaderMaterial: BaseShaderMaterial,\n  CameraManager: CameraManager,\n  CameraUtilities: CameraUtilities,\n  CanvasDrawer: CanvasDrawer,\n  Capabilities: Capabilities,\n  Components: Components,\n  Configuration: Configuration,\n  Debug: Debug,\n  DebugNormalsRender: DebugNormalsRender,\n  EasingFunctions: EasingFunctions,\n  EventManager: EventManager,\n  Graphics: Graphics,\n  ImageUtilities: ImageUtilities,\n  Input: Input,\n  JSONLoader: JSONLoader,\n  MathUtilities: MathUtilities,\n  ModelUtilities: ModelUtilities,\n  NormalAORender: NormalAORender,\n  NormalRender: NormalRender,\n  ObjectUtilities: ObjectUtilities,\n  PerspectiveCamera: PerspectiveCamera,\n  RenderLoop: RenderLoop,\n  ResourceBatch: ResourceBatch,\n  ResourceContainer: ResourceContainer,\n  SceneManager: SceneManager,\n  Screen: Screen,\n  SimpleTextDrawer: SimpleTextDrawer,\n  Time: Time,\n  TimeUtilities: TimeUtilities,\n  UI: UI,\n  Validation: Validation,\n  MeshSampler: MeshSampler\n}\n"]}