{"version":3,"sources":["utilities/ArrayUtilities.js","BaseApplication.js","shaders/basic_color/basic_color_vert.glsl","shaders/basic_color/basic_color_frag.glsl","materials/BaseShaderMaterial.js","CameraManager.js","Screen.js","Configuration.js","Time.js","KeyboardInput.js","Input.js","primitives/Sphere.js","editor/shaders/object_picker_vert.glsl","editor/shaders/object_picker_frag.glsl","Mesh.js","primitives/Arrow.js","SceneManager.js","utilities/MathUtilities.js","utilities/CameraUtilities.js","Capabilities.js","utilities/EasingFunctions.js","EventManager.js","components/AxisHelper.js","render_mode/BaseRender.js","RenderLayers.js","shaders/box_blur/compose_frag.glsl","shaders/box_blur/box_blur_frag.glsl","shaders/copy/copy_frag.glsl","shaders/copy/copy_vert.glsl","render_mode/OutlineRender.js","materials/BlitMaterial.js","shaders/clear/clear_depth_normal_frag.glsl","materials/ClearDepthNormalMaterial.js","shaders/depth_normals/depth_normals_vert.glsl","shaders/depth_normals/depth_normals_frag.glsl","materials/DepthNormalMaterial.js","render_utilities/DepthAndNormalsRenderer.js","render_utilities/Blitter.js","Graphics.js","primitives/Cube.js","Debug.js","render_mode/NormalRender.js","shaders/deferred/deferred_compose.frag","shaders/deferred/blit_copy.vert","materials/DeferredRendererComposeMaterial.js","shaders/deferred/point_light.vert","shaders/deferred/point_light.frag","materials/deferred/DeferredPointLightMaterial.js","render_mode/DeferredRender.js","shaders/normal/normal.frag","shaders/normal/normal.vert","materials/NormalMaterial.js","render_mode/DebugNormalsRender.js","utilities/ObjectUtilities.js","PerspectiveCamera.js","UI.js","static_batcher/GeometryBatch.js","static_batcher/GeometryBatcher.js","RenderLoop.js","resource_loader/AbstractLoader.js","resource_loader/TextureLoader.js","resource_loader/GLTFLoader.js","resource_loader/DAELoader.js","resource_loader/TextLoader.js","resource_loader/CubemapLoader.js","resource_loader/AudioLoader.js","resource_loader/JSONLoader.js","resource_loader/OBJLoader.js","resource_loader/RGBETextureLoader.js","resource_loader/PointArrayLoader.js","ResourceContainer.js","resource_loader/ResourceBatch.js","utilities/TimeUtilities.js","utilities/ImageUtilities.js","utilities/ModelUtilities.js","utilities/Validation.js","shaders/grid/grid_frag.glsl","shaders/grid/grid_vert.glsl","utilities/GeometryUtilities.js","components/Grid.js","shaders/ui_element/ui_element.vert","shaders/ui_element/ui_element.frag","materials/UIElementMaterial.js","shaders/ui/ss_texture_frag.glsl","shaders/ui/ss_texture_vert.glsl","ui/ui_element_position/ScreenSpacePosition.js","ui/ui_element_position/WorldSpacePosition.js","ui/ui_element_state/UIElementState.js","ui/ui_element_state/OnIdle.js","ui/ui_element_state/OnMouseEnter.js","ui/ui_element_state/OnMouseExit.js","ui/ui_element_state/OnMouseHover.js","components/UIElement.js","shaders/basic_line/basic_line_vert.glsl","shaders/basic_line/basic_line_frag.glsl","components/Line.js","Components.js","canvas_drawer/CanvasDrawer.js","canvas_drawer/SimpleTextDrawer.js","index.js"],"names":["ArrayUtilities","source","target","push","apply","array","size","items_left_count","length","i","clone","elem","index","indexOf","splice","BaseApplication","module","exports","BaseShaderMaterial","vert","frag","uniforms","vertexShader","basic_vert","fragmentShader","basic_frag","_Color","value","THREE","Color","ShaderMaterial","CameraManager","_current","undefined","camera","camera_manager","Screen","width","height","render_width","render_height","width_height","Vector2","dpr","pixel_size","x","y","vector2","multiplyScalar","window","devicePixelRatio","Configuration","parameters","is_mobile","is_ios","is_ipad","vertex_image_unit_supported","min_zoom_distance","max_zoom_distance","max_zoom_distance_scale","zoom_speed","use_fxaa","use_ssaa","background_color","touch_sensitivity","zoom_sensitivity","spin_sensitivity","three_finger_rotation_speed","three_finger_allowed_x_rotation_offset","three_finger_allowed_y_rotation_offset","use_touch_gestures","texture_float_supported","use_ortographic","hover_enabled","rotation_enabled","transparency_amount","show_debug_sphere_on_floor_selection","show_debug_sphere_on_steps_in_floor","display_cleanup_log","navigation_speed_damping","navigation_speed","out_of_bounds_force","mouse_zoom_speed","touch_zoom_speed","json","configuration","Time","___time","Clock","__delta_time","__elapsed_time","__allocated_time","getDelta","getElapsedTime","delta_time","elapsed_time","time","KeyboardInput","ctrlz_pressed","ctrlz_fired","keys","document","onkeydown","on_key_down","bind","onkeyup","on_key_up","onkeypress","on_key_press","e","keyCode","ctrlKey","key","press_key","release_keys","pressed","fired","down","key_name","up","keyboard_input","Input","mouse_pos","last_mouse_pos","mouse_dir","__clicked_time","is_mouse_down","is_mouse_up","rotation_angle","_normalized_mouse_pos","left_mouse_button_down","left_mouse_button_pressed","left_mouse_button_released","middle_mouse_button_down","right_mouse_button_down","right_mouse_button_pressed","right_mouse_button_released","mousewheel","previous_scale","previous_rotation","previous_rotation_dirty","mouse_str","tmp_mouse_velocity","bounding_client","multitouch_active","tapped","initial_zoom_distance","zoom_center","zoom_started","touch_zoom","multi_touch_dir","wheel_delta","mac","pinching_with_trackpad","scrolling_with_trackpad","scrolling_with_mouse","double_click","canvas","previous_pos_x","previous_pos_y","rect","getBoundingClientRect","left","top","container","region","ZingTouch","Region","init","scope","set_mouse_pos","addEventListener","on_double_click","on_focus_lost","on_mouse_up","on_mouse_move","on_touch_move","on_touch_end","one_finger_pan","Pan","numInputs","register","event","detail","data","two_fingers_pan","set","change","three_fingers_pan","touch_zoom_delta","distance","last_zoom_distance","center","gesture","Gesture","end","inputs","state","element","on_gesture_end","start","on_mouse_down","on_mouse_wheel","preventDefault","clientX","clientY","ev","events","get_os","is_mac","console","log","deltaY","is_int","Math","abs","current","originalEvent","which","changedTouches","middle_mouse_button_released","rotation_delta","normalize","userAgent","navigator","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","test","n","clear","normalized_mouse_pos","INPUT","Sphere","radius","color","geometry","SphereBufferGeometry","material","MeshBasicMaterial","Mesh","_selectable_material","__get_selectable_material","original_material","stored_layers","layers","mask","Arrow","dir","cone_height","cylinder_height","cylinder_geo","CylinderBufferGeometry","translate","cone_geometry","ConeBufferGeometry","buffer_geometry","BufferGeometryUtils","mergeBufferGeometries","rotateX","quaternion","setFromUnitVectors","Vector3","scale","z","SceneManager","Scene","name","scene","scene_manager","MathUtilities","from_range_start_value","from_range_end_value","to_range_start_value","to_range_end_value","min","max","rgb","r","round","toString","g","b","points","plane","projected_point","points_on_plane","projectPoint","from","to","t","elements","lerp","x1","x2","CameraUtilities","tmp_mat","Matrix4","tmp_vec","tmp_vec2","Plane","ray","Ray","tmp_size","tmp_unproj","applyQuaternion","NDC","v_fov","fov","PI","h_fov","atan","tan","aspect","distV","far","distH","plane_position","plane_normal","setFromNormalAndCoplanarPoint","get_forward_dir","isPerspectiveCamera","position","unproject_mouse_position","unproject","intersectPlane","zoom_scale","points_sphere","setFromPoints","world_space_center","camera_forward","project_points_on_plane","projected_points_center","box","Box3","getCenter","right","cross","mat","inverse_mat","getInverse","applyMatrix4","getSize","projected_center","zoom","get_zoom_to_fit_rect","bb","isOrthographicCamera","obj_x","obj_y","object_aspect","aspect_ratio","object","getWorldPosition","project","bottom","updateProjectionMatrix","camera_utilities","Capabilities","max_anisotropy","vertex_texture_sampler_available","fp_textures_available","capabilities","EasingFunctions","sin","pow","sqrt","EventManager","queue","zoom_changed_evt","store_clickd_evt","point_selected_evt","config_changed","path_substep_completed","path_completed","go_to_store_requested_evt","resource_loaded_evt","service_clicked_evt","unit_pos_updated_evt","floor_changed_evt","on_enter_floor_navigation","on_exit_floor_navigation","on_enter_floor_selection","on_exit_floor_selection","on_enter_outside_navigation","on_exit_outside_navigation","step_selected_evt","payload","callback","fire","store_id","hit_data","step_number","step_index","resource","service","unit_data","floor_id","event_manager","AxisHelper","blueAxisMat","LineBasicMaterial","depthFunc","AlwaysDepth","blueAxisGeo","Geometry","vertices","blueAxisLine","Line","renderOrder","greenAxisMat","greenAxisGeo","greenAxisLine","redAxisMat","linewidth","redAxisGeo","redAxisLine","add","Object3D","BaseRender","context","renderer","RenderLayers","OutlineRender","webgl","main_rt","WebGLRenderTarget","rt1","rt2","compose_material","__get_compose_material","copy_material","__get_copy_material","box_blur_material","__get_box_blur_material","background_material","__get_background_material","copy_plane","PlaneGeometry","frustumCulled","copy_scene","w","h","setSize","_Screen","updateMatrix","updateMatrixWorld","enable","opaque","transparent","disable","outline","_renderer","setClearColor","clear_color","clearTarget","overrideMaterial","render","_MainTex","texture","_SampleDir","_Blur","copy_vert","copy_frag","depthTest","depthWrite","box_blur_frag","compose_frag","extensions","derivatives","Vector4","background_frag","autoClear","BlitMaterial","frag_shader","vert_shader","defines","_Resolution","blending","NoBlending","ClearDepthNormalMaterial","clear_depth","clear_normal","_DepthNormal","DepthNormalMaterial","_FarPlane","DepthAndNormalsRenderer","RT","clear_depth_normal_mat","depth_normal_material","graphics","__resize_RT_if_necessary","blit_clear_with_material","far_plane","Blitter","_blit_scene","_blit_material","_blit_quad","PlaneBufferGeometry","_blit_camera","OrthographicCamera","src","dst","setRenderTarget","dst_RT","Graphics","blitter","no_render","current_render_mode","generateDepthNormalTexture","depth_and_normals_renderer","msaa","WebGLRenderer","antialias","preserveDrawingBuffer","alpha","setPixelRatio","get","domElement","getMaxAnisotropy","maxVertexTextures","floatVertexTextures","new_state","constructor","on_exit","on_enter","check_for_resize","override_mat","__apply_override_material","buffer","readRenderTargetPixels","clear_stencil","clear_alpha","current_width","clientWidth","current_height","clientHeight","update_size","resize","error","src_RT","blit_with_material","blit","blob_callback","ctx","old_width","old_height","new_width","new_height","tile_width","tile_height","divisions_x","parseInt","ceil","divisions_y","ctx_2D","setViewOffset","drawImage","toBlob","clearViewOffset","blob","link","createElement","download","href","URL","createObjectURL","click","onclick","requestAnimationFrame","revokeObjectURL","a","removeAttribute","render_target","Cube","segments","BoxGeometry","Debug","Vector3_one","Vector3_zero","canvas_renderer","rt_debug","origin","arrow","copy","axis","position_2d","fillStyle","fillRect","clearRect","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","BufferGeometry","line","pos","cube","depth","distanceTo","sub","forward_dir","forward","basic_color_vert","basic_color_frag","setFromCenterAndSize","helper","Box3Helper","sphere","input_points","open","catmull","CatmullRomCurve3","updateArcLengths","getSpacedPoints","line_helper","draw_line","SphereGeometry","sphere_mesh","sphere1","curve","options","offset","DEBUG","NormalRender","DeferredRendererComposeMaterial","_NormalDepthRT","_AlbedoRT","_InverseProjMatrix","rt","tex","mat4","DeferredPointLightMaterial","intensity","_Intensity","_AlbedoTex","_NormalDepthTex","AdditiveBlending","side","BackSide","DeferredRender","compose_mat","scene_lights","light_intensity","light_brightest_component","radius_needed_for_intensity","light_row","light_col","camera_inverse_proj_mat","__check_RT_size","projectionMatrix","inverse_proj","albedo_rt","depth_normals_rt","depth_normals_RT","traverse","child","set_inverse_proj_matrix","set_normal_depth_rt","set_albedo_rt","NormalMaterial","DebugNormalsRender","ObjectUtilities","xml","obj","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","xml_to_json","old","PerspectiveCamera","near","UI","ui_elements","_tmp_normalized_pos","ss_scene","autoUpdate","ws_scene","ss_camera","remove","dispose","set_screen_space_coordinate_system","set_world_space_coordinate_system","update_state","children","current_clicked_element","ui","GeometryBatch","batch_width","data_textures","object_names","zero_offset","write_offset","uniform_dirty_count","tmp_uploaded_data_count","needsUpdate","uniform_name","default_value_v3","src_tex","__create_rgb_texture","dst_tex","one_pixel_tex","new_data_tex","__add_data_texture","__flood_data_texture_rgb","default_value_v4","__create_rgba_texture","__flood_data_texture_rgba","__create_rgba_float_texture","object_name","vector3","use_r","use_g","use_b","obj_index","__get_object_index","data_texture","__get_data_texture","__set_pixel_rgb","one_pixel","last_accessed_index","dirty_count","vector4","use_a","__set_pixel_rgba","upload_budget","__partial_texture_data_upload","__full_texture_data_upload","texture_data","copyTextureToTexture","floor","image","v3","v4","Uint8Array","DataTexture","RGBFormat","RGBAFormat","Float32Array","RGBA","FloatType","conosle","src_texture","dst_texture","one_pixel_text","GeometryBatcher","batches","buffer_geometries","attr_accessor_uvs","texture_width","ceilPowerOfTwo","__init_uv_array","uv_index","vertex_count","getAttribute","count","buffer_attribute","BufferAttribute","setAttribute","upload_texture_data","uvs","geometry_batcher","RenderLoop","target_application","_frame_id","is_running","frames_passed","__update","post_start","update","on_pre_render","on_post_render","cancelAnimationFrame","AbstractLoader","resource_id","url","progress","has_finished","has_error","error_message","message","resource_container","TextureLoader","loader","load","set_resource","__update_progress","__loading_ended","__set_error","GLTFLoader","gltf","xhr","loaded","total","msg","DAELoader","ColladaLoader","TextLoader","FileLoader","CubemapLoader","CubeTextureLoader","setPath","urls","AudioLoader","listener","loop","volume","voluem","sound","Audio","audio","setBuffer","setLoop","setVolume","get_resource","JSONLoader","JSON","parse","OBJLoader","RGBETextureLoader","RGBELoader","setDataType","UnsignedByteType","hdr","PointArrayLoader","text","parse_path","raw_data","string_array","split","pop","positions","parseFloat","ResourceContainer","resources","fire_resource_loaded","ResourceBatch","batch_name","resource_loaders","print_error","finished","TimeUtilities","ImageUtilities","getContext","getImageData","imagedata","ModelUtilities","result_callback","fromGeometry","geometries","get_mesh","animations","skinnedMeshes","node","isSkinnedMesh","cloneBones","cloneSkinnedMeshes","isBone","skinnedMesh","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","Skeleton","boneInverses","matrixWorld","cast","receive","castShadow","receiveShadow","object_type","model_utilities","Validation","Number","str","GeometryUtilities","geometry_buffer","indices","bar_coordinates","getX","getY","getZ","add_barycentric_attribute","non_indexed_geometry_buffer","Grid","grid_vert","grid_frag","plane_geometry","non_indexed_geometry","convert_to_non_indexed_geometry","rotation","UIElementMaterial","_ScreenSize","_TextureSize","_PixelOffset","_NDC","_PivotPoint","_DepthOffset","ScreenSpacePosition","WorldSpacePosition","tmp_vec3","UIElementState","ui_element","normalized_mouse_position","OnIdle","is_mouse_over","set_state","_on_enter_state","OnMouseEnter","on_mouse_enter","_on_hover_state","_on_exit_state","OnMouseExit","on_mouse_exit","_on_idle_state","OnMouseHover","__trigger_on_hover","on_mouse_hover","UIElement","is_clickable","position_strategy","current_state","_position","on_hover","mouse_pos_tmp","cached_NDC_position","screen_pos_tmp","texture_size","matrixAutoUpdate","pixel_offset","visible","minFilter","NearestFilter","magFilter","get_size","get_pos_NDC","to_screen_position","Box2","containsPoint","projected_pos","screen_pos","remove_screen_material","boolean","_Thickness","_Length","_ElapsedTime","line_vs","line_fs","setup","next_position","previous_position","orientation","coverage","accumulated_length","next_point","__get_next_position","previous_point","__get_previous_position","vertexList","nextPositionList","previousPositionList","orientationList","coverageList","setIndex","_length","parent","col","CanvasDrawer","uses_dynamic_font","__textHeight","fontStyle","body","getElementsByTagName","dummy","dummyText","createTextNode","appendChild","offsetHeight","removeChild","font","measureText","getFontHeight","ctxOptions","font_color","__draw","draw_canvas","canvas_texture","CanvasTexture","UVMapping","ClampToEdgeWrapping","generateMipMaps","fill","tl","tr","br","bl","defaultRadius","quadraticCurveTo","SimpleTextDrawer","text_margin","text_size","get_text_size","globalAlpha","textBaseline","textAlignment","fillText","Components"],"mappings":"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","file":"index.js","sourceRoot":"src","sourcesContent":["export default class ArrayUtilities\r\n{\r\n\tconstructor(){}\r\n\r\n\r\n  static merge_from_to(source, target)\r\n  {\r\n    target.push.apply( target, source );\r\n  }\r\n\r\n  static expand_vec3_array(array, size)\r\n  {\r\n    let items_left_count = size - array.length;\r\n\r\n\t\tfor (let i = 0;i < items_left_count;i++)\r\n    {\r\n      array.push(array[i].clone());\r\n    }\r\n  }\r\n\r\n  static remove_elem(array, elem)\r\n  {\r\n    let index = array.indexOf(elem);\r\n    if (index > -1) {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","export default class BaseApplication\r\n{\r\n\tstart() {}\r\n\tpost_start() {}\r\n\tend() {}\r\n\tupdate() {}\r\n\ton_post_render() {}\r\n\ton_pre_render() {}\r\n\tresources_fully_loaded() {}\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n  vec3 pos = position;\\n  mat4 MVP = projectionMatrix * modelViewMatrix;\\n\\n  gl_Position = MVP * vec4( pos, 1.0 );\\n  vUv = uv;\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform vec3 _Color;\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(_Color, 1.0);\\n}\";","import basic_vert from '/shaders/basic_color/basic_color_vert';\r\nimport basic_frag from '/shaders/basic_color/basic_color_frag';\r\n\r\nexport default class BaseShaderMaterial extends THREE.ShaderMaterial\r\n{\r\n\tconstructor(vert, frag, uniforms)\r\n\t{\r\n\r\n\t\tsuper({\r\n\t\t\tvertexShader: vert \t\t|| basic_vert,\r\n\t\t\tfragmentShader: frag \t|| basic_frag,\r\n\t\t\tuniforms: uniforms \t\t|| {\r\n\t\t\t\t_Color: {value: new THREE.Color(\"#FF0000\")}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n\r\n","class CameraManager {\r\n\tconstructor()\r\n\t{\r\n\t\tthis._current = undefined;\r\n\t}\r\n\r\n\tset current(camera)\r\n\t{\r\n\t\tthis._current = camera;\r\n\t}\r\n\r\n\tget current()\r\n\t{\r\n\t\treturn this._current;\r\n\t}\r\n}\r\n\r\nconst camera_manager = new CameraManager();\r\nmodule.exports = camera_manager;\r\n","class Screen {\r\n\tconstructor()\r\n\t{\r\n\t\tthis.width = 1;\r\n\t\tthis.height = 1;\r\n\r\n\t\tthis.render_width = 1;\r\n\t\tthis.render_height = 1;\r\n\t\tthis.width_height = new THREE.Vector2(this.width, this.height);\r\n\r\n\r\n\t\tthis.dpr = 1;\r\n\t\tthis.pixel_size = new THREE.Vector2(1/this.width, 1/this.height);\r\n\t}\r\n\r\n\tupdate_size(width, height)\r\n\t{\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tthis.pixel_size = new THREE.Vector2(1/this.width, 1/this.height) ;\r\n\r\n\t\tthis.width_height.x = width  ;\r\n\t\tthis.width_height.y = height ;\r\n\r\n\t\tthis.render_width = width * this.dpr;\r\n\t\tthis.render_height = height * this.dpr;\r\n\r\n\r\n\t}\r\n\r\n\tapply_pixel_density_v2(vector2)\r\n\t{\r\n\t\tvector2.multiplyScalar(1/window.devicePixelRatio);\r\n\r\n\t\treturn vector2;\r\n\t}\r\n\tapply_pixel_density(value)\r\n\t{\r\n\t\treturn value * (1/window.devicePixelRatio);\r\n\t}\r\n\r\n\r\n\tget_pixel_size()\r\n\t{\r\n\t\treturn this.pixel_size;\r\n\t}\r\n\r\n\tget aspect_ratio()\r\n\t{\r\n\t\treturn this.width/this.height;\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default new Screen();\r\n","/*\r\n\r\n  A configuration class used as a singleton\r\n\r\n*/\r\n\r\nclass Configuration {\r\n  constructor(parameters = {}) {\r\n\r\n    this.dpr = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n    this.is_mobile = false;\r\n    this.is_ios = false;\r\n    this.is_ipad = false;\r\n\r\n    this.vertex_image_unit_supported = true;\r\n\r\n    this.min_zoom_distance = 3000;\r\n\r\n    this.max_zoom_distance = 40000;\r\n    this.max_zoom_distance_scale = 1.1;\r\n    this.zoom_speed = 0.1;\r\n\r\n\r\n\r\n    this.use_fxaa = false;\r\n    this.use_ssaa = true;\r\n\r\n\r\n\r\n    this.background_color = new THREE.Color(0.768,0.768,0.768);\r\n\r\n\r\n\r\n\r\n    //TOUCH\r\n    this.touch_sensitivity = 1.5;\r\n    this.zoom_sensitivity = 0.7;\r\n    this.spin_sensitivity = 2;\r\n    this.three_finger_rotation_speed = 3;\r\n    this.three_finger_allowed_x_rotation_offset = 30;\r\n    this.three_finger_allowed_y_rotation_offset = 20;\r\n\r\n\r\n    this.use_touch_gestures = false;\r\n\r\n\r\n    this.texture_float_supported = false;\r\n\r\n    this.use_ortographic = true;\r\n\r\n    this.hover_enabled = false;\r\n    this.rotation_enabled = false;\r\n\r\n    this.transparency_amount = 0.2;\r\n\r\n    this.show_debug_sphere_on_floor_selection = false;\r\n    this.show_debug_sphere_on_steps_in_floor = false;\r\n    this.display_cleanup_log = false;\r\n\r\n\r\n    this.navigation_speed_damping = 0.74;\r\n    this.navigation_speed = 200;\r\n    this.out_of_bounds_force = 1.5;\r\n    this.mouse_zoom_speed = 0.05;\r\n    this.touch_zoom_speed = 0.5;\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  from_json(json)\r\n  {\r\n\r\n\r\n  }\r\n}\r\n\r\nconst configuration = new Configuration();\r\nmodule.exports = configuration;\r\n","class Time\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis.___time = new THREE.Clock();\r\n\t\tthis.__delta_time = 0;\r\n\t\tthis.__elapsed_time = 0;\r\n\t\tthis.__allocated_time = new THREE.Vector2(0,0);\r\n\t}\r\n\r\n\r\n\tget delta_time()\r\n\t{\r\n\t\treturn this.__delta_time < 0.4? this.__delta_time : 0.016;\r\n\t}\r\n\tget elapsed_time()\r\n\t{\r\n\t\treturn this.__elapsed_time;\r\n\t}\r\n\tget shader_time()\r\n\t{\r\n\t\tthis.__allocated_time.x = this.delta_time;\r\n\t\tthis.__allocated_time.y = this.elapsed_time;\r\n\t\treturn  this.__allocated_time;\r\n\t}\r\n\r\n\t__update()\r\n\t{\r\n\t\tthis.__delta_time = this.___time.getDelta();\r\n\t\tthis.__elapsed_time = this.___time.getElapsedTime();\r\n\t}\r\n}\r\n\r\nconst time = new Time();\r\nmodule.exports = time;\r\n\r\n","export class KeyboardInput\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis.ctrlz_pressed = false;\r\n\t\tthis.ctrlz_fired = false;\r\n\r\n\t\tthis.keys = [];\r\n\t}\r\n\r\n\tinit()\r\n\t{\r\n\t\tdocument.onkeydown \t= this.on_key_down.bind(this);\r\n\t\tdocument.onkeyup \t\t= this.on_key_up.bind(this);\r\n\t\tdocument.onkeypress = this.on_key_press.bind(this);\r\n\t}\r\n\r\n\ton_key_down(e)\r\n\t{\r\n\t\tif(e.keyCode == 90 && e.ctrlKey && !this.ctrlz_fired)\r\n    {\r\n    \tthis.ctrlz_pressed = true;\r\n    \tthis.ctrlz_fired = true;\r\n    } \r\n    if(e.key)\r\n    {\r\n    \tthis.press_key(e.key);\r\n    }\r\n\t}\r\n\ton_key_press(e)\r\n\t{\r\n\t\t\r\n\t}\r\n\ton_key_up(e)\r\n\t{\r\n\t\tthis.release_keys();\r\n\t}\r\n\r\n\tclear()\r\n\t{\r\n\t\tthis.ctrlz_pressed = false;\r\n\t\tfor(let i=0; i< this.keys.length; i++)\r\n\t\t{\r\n\t\t\tthis.keys[i].pressed = false;\r\n\t\t}\r\n\t}\r\n\r\n\trelease_keys()\r\n\t{\r\n\t\tthis.ctrlz_fired = false;\r\n\t\t\r\n\t\tfor(let i=0; i< this.keys.length; i++)\r\n\t\t{\r\n\t\t\tthis.keys[i].fired = false;\r\n\t\t\tthis.keys[i].down = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpress_key(key)\r\n\t{\r\n\t\tfor(let i=0; i< this.keys.length; i++)\r\n\t\t{\r\n\t\t\tif(this.keys[i].key_name === key && !this.keys[i].fired)\r\n\t\t\t{\r\n\t\t\t\tthis.keys[i].pressed = true;\r\n\t\t\t\tthis.keys[i].down = true;\r\n\t\t\t\tthis.keys[i].fired = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tkey_is_pressed(key)\r\n\t{\r\n\t\tfor(let i=0; i< this.keys.length; i++)\r\n\t\t{\r\n\t\t\tif(this.keys[i].key_name === key)\r\n\t\t\t{\r\n\t\t\t\treturn this.keys[i].pressed;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tkey_is_down(key)\r\n\t{\r\n\t\tfor(let i=0; i< this.keys.length; i++)\r\n\t\t{\r\n\t\t\tif(this.keys[i].key_name === key)\r\n\t\t\t{\r\n\t\t\t\treturn this.keys[i].down;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tregister_key(key)\r\n\t{\r\n\t\tthis.keys.push(\r\n\t\t{\r\n\t\t\tkey_name: key,\r\n\t\t\tpressed: false,\r\n\t\t\tdown: false,\r\n\t\t\tup: false,\r\n\t\t\tfired: false\r\n\r\n\t\t});\r\n\t}\r\n\tunregister_key(key_name)\r\n\t{\r\n\t\tlet key = undefined;\r\n\t\tfor(let i=0; i< this.keys.length; i++)\r\n\t\t{\r\n\t\t\tif(this.keys[i].key_name === key_name)\r\n\t\t\t\tkey = this.keys[i];\r\n\t\t}\r\n\r\n\t\tlet index = this.keys.indexOf(key);\r\n    if (index > -1) {\r\n      this.keys.splice(index, 1);\r\n    }\r\n\t}\r\n\r\n}\r\n\r\nconst keyboard_input = new KeyboardInput();\r\nmodule.exports = keyboard_input;","import Screen from '/Screen';\r\nimport Configuration from '/Configuration';\r\nimport Time from '/Time';\r\nimport KeyboardInput from '/KeyboardInput';\r\n\r\nclass Input {\r\n\tconstructor() {\r\n\t\tthis.mouse_pos = new THREE.Vector2();\r\n\t\tthis.last_mouse_pos = new THREE.Vector2();\r\n\t\tthis.mouse_dir = new THREE.Vector2();\r\n\r\n\r\n\t\tthis.__clicked_time = 0;\r\n\t\tthis.__elapsed_time = 0;\r\n\t\tthis.__delta_time = 0;\r\n\r\n\t\tthis.is_mouse_down = false;\r\n\t\tthis.is_mouse_up = false;\r\n\r\n\t\tthis.rotation_angle = 0;\r\n\r\n\t\tthis._normalized_mouse_pos = new THREE.Vector2(0, 0);\r\n\r\n\t\tthis.left_mouse_button_down = false;\r\n\t\tthis.left_mouse_button_pressed = false;\r\n\t\tthis.left_mouse_button_released = false;\r\n\t\tthis.middle_mouse_button_down = false;\r\n\t\tthis.right_mouse_button_down = false;\r\n\t\tthis.right_mouse_button_pressed = false;\r\n\t\tthis.right_mouse_button_released = false;\r\n\r\n\t\tthis.mousewheel = 0;\r\n\r\n\t\tthis.previous_scale = 0;\r\n\t\tthis.previous_rotation = 0;\r\n\t\tthis.previous_rotation_dirty = true;\r\n\r\n\t\tthis.mouse_str = \"mouse\";\r\n\r\n\t\tthis.tmp_mouse_velocity = new THREE.Vector2();\r\n\t\tthis.bounding_client = new THREE.Vector2();\r\n\r\n\t\tthis.multitouch_active = false;\r\n\r\n\t\tthis.tapped = false;\r\n\t\tthis.initial_zoom_distance = 100;\r\n\t\tthis.zoom_center = new THREE.Vector2();\r\n\t\tthis.zoom_started = false;\r\n\t\tthis.touch_zoom = 1;\r\n\r\n\t\tthis.multi_touch_dir = new THREE.Vector2();\r\n\t\tthis.wheel_delta = 0;\r\n\r\n\t\tthis.mac = 'mac';\r\n\t\tthis.pinching_with_trackpad = false;\r\n\t\tthis.scrolling_with_trackpad = false;\r\n\t\tthis.scrolling_with_mouse = false;\r\n\r\n\t\tthis.double_click = false;\r\n\r\n\t\tthis.canvas = undefined;\r\n\r\n\t\t// Input 2.0\r\n\t\tthis.previous_pos_x = 0;\r\n\t\tthis.previous_pos_y = 0;\r\n\t}\r\n\r\n\tmouse_is_within_bounds(rect) {\r\n\t\trect = rect || this.canvas.getBoundingClientRect();\r\n\r\n\t\treturn this.mouse_pos.x > rect.left &&\r\n\t\t\tthis.mouse_pos.x < rect.left + rect.width &&\r\n\t\t\tthis.mouse_pos.y > rect.top &&\r\n\t\t\tthis.mouse_pos.y < rect.top + rect.height;\r\n\t}\r\n\r\n\tinit(container, canvas) {\r\n\t\tthis.canvas = canvas;\r\n\r\n\t\tlet region = new ZingTouch.Region(container, false, false);\r\n\t\tKeyboardInput.init();\r\n\r\n\t\tlet scope = this;\r\n\r\n\t\tregion.bind(container, 'tap', function (e) {\r\n\t\t\tscope.tapped = true;\r\n\t\t\tscope.set_mouse_pos(e);\r\n\r\n\t\t});\r\n\r\n\t\twindow.addEventListener('dblclick', this.on_double_click.bind(this));\r\n\r\n\t\tcontainer.addEventListener('mouseleave', this.on_focus_lost.bind(this));\r\n\r\n\t\tcontainer.addEventListener('mouseup', this.on_mouse_up.bind(this));\r\n\t\tcontainer.addEventListener('mousemove', this.on_mouse_move.bind(this));\r\n\r\n\t\tcontainer.addEventListener('touchmove', this.on_touch_move.bind(this), false);\r\n\t\tcontainer.addEventListener('touchend', this.on_touch_end.bind(this), false);\r\n\r\n\t\t// region.bind(container, 'pan', function(e){\r\n\t\t// \tscope.on_mouse_move(e);\r\n\t\t// \tconsole.log(\"PAN\");\r\n\t\t// });\r\n\t\tlet one_finger_pan = new ZingTouch.Pan({ numInputs: 1 });\r\n\t\tregion.register(\"one_finger_pan\", one_finger_pan);\r\n\t\tregion.bind(container, \"one_finger_pan\", (event) => {\r\n\t\t\tif (event.detail.data.length > 0) {\r\n\t\t\t\t// scope.multi_touch_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\r\n\t\t\t\t// scope.multi_touch_dir.multiplyScalar(scope.__delta_time);\r\n\t\t\t\t// scope.on_mouse_move_zingtouch(event);\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t\tlet two_fingers_pan = new ZingTouch.Pan({ numInputs: 2 });\r\n\t\tregion.register(\"two_fingers_pan\", two_fingers_pan);\r\n\t\tregion.bind(container, \"two_fingers_pan\", (event) => {\r\n\t\t\tif (event.detail.data.length > 0) {\r\n\r\n\t\t\t\t// scope.multi_touch_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\r\n\t\t\t\t// scope.multi_touch_dir.multiplyScalar(scope.__delta_time);\r\n\t\t\t\tscope.multi_touch_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\r\n\t\t\t\tscope.multi_touch_dir.multiplyScalar(scope.__delta_time);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet three_fingers_pan = new ZingTouch.Pan({ numInputs: 3 });\r\n\t\tregion.register(\"three_fingers_pan\", three_fingers_pan);\r\n\t\tregion.bind(container, \"three_fingers_pan\", (event) => {\r\n\t\t\tif (event.detail.data.length > 0) {\r\n\t\t\t\tscope.multi_touch_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\r\n\t\t\t\tscope.multi_touch_dir.multiplyScalar(scope.__delta_time);\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tregion.bind(container, 'distance', function (e) {\r\n\r\n\t\t\tif (!scope.zoom_started) {\r\n\t\t\t\tscope.zoom_started = true;\r\n\t\t\t\tscope.touch_zoom_delta = 0;\r\n\t\t\t\tscope.initial_zoom_distance = e.detail.distance;\r\n\t\t\t\tscope.last_zoom_distance = e.detail.distance;\r\n\r\n\t\t\t\tscope.zoom_center.set(e.detail.center.x, e.detail.center.y);\r\n\t\t\t\tscope.mouse_pos.set(e.detail.center.x, e.detail.center.y);\r\n\t\t\t}\r\n\t\t\tscope.touch_zoom_delta = e.detail.distance - scope.last_zoom_distance;\r\n\t\t\tscope.last_zoom_distance = e.detail.distance;\r\n\t\t\tscope.touch_zoom = 1;\r\n\t\t}, false);\r\n\r\n\t\tlet gesture = new ZingTouch.Gesture();\r\n\t\tgesture.end = (inputs, state, element) => { scope.on_gesture_end(inputs) }\r\n\t\tgesture.start = (inputs, state, element) => { scope.on_mouse_down(inputs) }\r\n\t\tregion.register('shortTap', gesture);\r\n\r\n\t\tregion.bind(container, 'shortTap', function (e) {\r\n\t\t});\r\n\r\n\t\twindow.addEventListener('wheel', this.on_mouse_wheel.bind(this))\r\n    container.addEventListener( 'contextmenu', (event)=>{event.preventDefault()}, false );\r\n\r\n\t\tcontainer.addEventListener(\"mousemove\", (event) => {\r\n\t\t\tthis.mouse_pos.x = event.clientX;\r\n\t\t\tthis.mouse_pos.y = event.clientY;\r\n\t\t\tthis.scrolling_with_mouse = false;\r\n\t\t\tthis.scrolling_with_trackpad = false;\r\n\t\t\tthis.pinching_with_trackpad = false;\r\n\t\t});\r\n\t}\r\n\r\n\tset_mouse_pos(ev) {\r\n\t\tthis.mouse_pos.x = ev.detail.events[0].clientX;\r\n\t\tthis.mouse_pos.y = ev.detail.events[0].clientY;\r\n\t}\r\n\r\n\tget normalized_mouse_pos() {\r\n\t\tthis._normalized_mouse_pos.x = (this.mouse_pos.x / Screen.width) * 2.0 - 1;\r\n\t\tthis._normalized_mouse_pos.y = -1 * ((this.mouse_pos.y / Screen.height) * 2.0 - 1);\r\n\t\treturn this._normalized_mouse_pos;\r\n\t}\r\n\r\n\tget NDC() {\r\n\t\treturn this.normalized_mouse_pos;\r\n\t}\r\n\r\n\tis_mac() {\r\n\t\treturn this.get_os() === this.mac;\r\n\t}\r\n\r\n\ton_double_click(event) {\r\n\t\tthis.double_click = true;\r\n\t}\r\n\r\n\ton_mouse_wheel(event) {\r\n\r\n\r\n\t\tthis.mouse_pos.x = event.clientX;\r\n\t\tthis.mouse_pos.y = event.clientY;\r\n\r\n\t\t// User is using a mac\r\n\t\tif (this.is_mac()) {\r\n\t\t\t// User is pinching\r\n\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t// Negative values means pinch in.\r\n\t\t\t\t// Positive values means pinch out.\r\n\t\t\t\tconsole.log(\"Pinching with a touchpad\", event.deltaY)\r\n\t\t\t\tthis.pinching_with_trackpad = true;\r\n\t\t\t\tthis.scrolling_with_trackpad = false;\r\n\t\t\t\tthis.scrolling_with_mouse = false;\r\n\t\t\t\t// User is scrolling\r\n\t\t\t} else {\r\n\t\t\t\t// User is using the touchpad\r\n\t\t\t\tif (this.is_int(event.deltaY)) {\r\n\t\t\t\t\t// Negative values means scroll up\r\n\t\t\t\t\t// Positive values means scroll down\r\n\t\t\t\t\t// console.log(\"Scrolling with a touchpad\", (event.deltaY))\r\n\t\t\t\t\t// 350 is aprox the maximum value of deltaY on touchpad scroll\r\n\t\t\t\t\tthis.pinching_with_trackpad = false;\r\n\t\t\t\t\tthis.scrolling_with_trackpad = true;\r\n\t\t\t\t\tthis.scrolling_with_mouse = false;\r\n\r\n\t\t\t\t\tthis.wheel_delta = 1 - (event.deltaY / 350) * 2.0 - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Negative values means scroll up\r\n\t\t\t\t\t// Positive values means scroll down\r\n\t\t\t\t\t// console.log(\"Scrolling with a mouse\", event.deltaY)\r\n\t\t\t\t\tthis.pinching_with_trackpad = false;\r\n\t\t\t\t\tthis.scrolling_with_trackpad = false;\r\n\t\t\t\t\tthis.scrolling_with_mouse = true;\r\n\r\n\t\t\t\t\tthis.wheel_delta = event.deltaY / Math.abs(event.deltaY);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//probably windows\r\n\t\t\tthis.pinching_with_trackpad = false;\r\n\t\t\tthis.scrolling_with_trackpad = false;\r\n\t\t\tthis.scrolling_with_mouse = true;\r\n\r\n\t\t\tif (Math.abs(event.deltaY) < 0.0001)\r\n\t\t\t\tthis.wheel_delta = 0;\r\n\t\t\telse\r\n\t\t\t\tthis.wheel_delta = event.deltaY / Math.abs(event.deltaY);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\ton_mouse_down(inputs) {\r\n\t\tthis.mouse_pos.x = inputs[0].current.clientX;\r\n\t\tthis.mouse_pos.y = inputs[0].current.clientY;\r\n\r\n\t\tthis.multitouch_active = inputs.length > 1;\r\n\r\n\t\tthis.mouse_dir.x = 0;\r\n\t\tthis.mouse_dir.y = 0;\r\n\r\n\r\n\t\tthis.__clicked_time = this.__elapsed_time;\r\n\t\tthis.is_mouse_down = true;\r\n\t\tthis.is_mouse_up = false;\r\n\r\n\t\tswitch (inputs[0].current.originalEvent.which) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.left_mouse_button_down = true;\r\n\t\t\t\tthis.left_mouse_button_pressed = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2: this.middle_mouse_button_down = true; break;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.right_mouse_button_down = true;\r\n\t\t\t\tthis.right_mouse_button_pressed = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: this.left_mouse_button_down = true; this.left_mouse_button_pressed = true; break;\r\n\t\t}\r\n\r\n\r\n\t\tthis.wheel_delta = 0;\r\n\t\tthis.previous_scale = 0;\r\n\t\tthis.previous_rotation = 0;\r\n\r\n\r\n\t}\r\n\r\n\tmouse_clicked() {\r\n\t\treturn this.tapped;\r\n\t}\r\n\r\n\ton_touch_move(e) {\r\n\t\tthis.on_mouse_move({ clientX: e.changedTouches[0].clientX, clientY: e.changedTouches[0].clientY})\r\n\t}\r\n\r\n\ton_touch_end(e) {\r\n\t\tthis.on_gesture_end([{ current: { originalEvent: e } }])\r\n\t}\r\n\r\n\ton_mouse_up(e) {\r\n\t\tthis.on_gesture_end([ { current: { originalEvent: e } } ])\r\n\t}\r\n\r\n\ton_gesture_end(inputs) {\r\n\t\tthis.multitouch_active = inputs ? (inputs.length > 1) : false;\r\n\t\tthis.is_mouse_up = true;\r\n\t\tthis.zoom_started = false;\r\n\t\tthis.touch_zoom = 1;\r\n\t\tthis.mouse_dir.x = 0;\r\n\t\tthis.mouse_dir.y = 0;\r\n\t\tthis.previous_scale = 0;\r\n\t\tthis.previous_rotation = 0;\r\n\t\tthis.wheel_delta = 0;\r\n\r\n\t\tthis.left_mouse_button_down = false;\r\n\t\tthis.middle_mouse_button_down = false;\r\n\t\tthis.right_mouse_button_down = false;\r\n\r\n\t\tif (inputs) {\r\n\t\t\tswitch (inputs[0].current.originalEvent.which) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.left_mouse_button_released = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.middle_mouse_button_released = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.right_mouse_button_released = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.left_mouse_button_released = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.is_mouse_down = false;\r\n\t\tthis.previous_rotation_dirty = true;\r\n\t\tthis.rotation_delta = 0;\r\n\t}\r\n\r\n\r\n\ton_focus_lost() {\r\n\t\tthis.on_gesture_end();\r\n\t\tthis.left_mouse_button_released = true;\r\n\t\tthis.middle_mouse_button_released = true;\r\n\t\tthis.right_mouse_button_released = true;\r\n\t\tthis.left_mouse_button_released = true;\r\n\r\n\t}\r\n\r\n\ttime_since_last_mouse_down() {\r\n\t\treturn this.__elapsed_time - this.__clicked_time;\r\n\t}\r\n\r\n\ton_mouse_move(event) {\r\n\t\tthis.mouse_pos.x = event.clientX;\r\n\t\tthis.mouse_pos.y = event.clientY;\r\n\r\n\t\tthis.mouse_dir.set(this.mouse_pos.x - this.previous_pos_x,\r\n\t\t\t\t\t\t\t\t\t\t\t this.mouse_pos.x - this.previous_pos_y);\r\n\r\n\t\tthis.mouse_dir.normalize();\r\n\r\n\t\tthis.previous_pos_x = this.mouse_pos.x;\r\n\t\tthis.previous_pos_y = this.mouse_pos.x;\r\n\t}\r\n\r\n\ton_mouse_move_zingtouch(event) {\r\n\t\tif (event.detail.data.length > 0) {\r\n\t\t\tthis.set_mouse_pos(event);\r\n\t\t\tthis.mouse_dir.set(event.detail.data[0].change.x, event.detail.data[0].change.y)\r\n\t\t\t// this.mouse_dir.x *=  Screen.height / Screen.width;\r\n\r\n\t\t\t// this.mouse_dir.multiplyScalar(this.__delta_time/window.devicePixelRatio);\r\n\t\t}\r\n\t}\r\n\r\n\tget_os() {\r\n\t\tvar userAgent = window.navigator.userAgent,\r\n\t\t\tplatform = window.navigator.platform,\r\n\t\t\tmacosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\r\n\t\t\twindowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\r\n\t\t\tiosPlatforms = ['iPhone', 'iPad', 'iPod'],\r\n\t\t\tos = null;\r\n\r\n\t\tif (macosPlatforms.indexOf(platform) !== -1) {\r\n\t\t\tos = 'mac';\r\n\t\t} else if (iosPlatforms.indexOf(platform) !== -1) {\r\n\t\t\tos = 'ios';\r\n\t\t} else if (windowsPlatforms.indexOf(platform) !== -1) {\r\n\t\t\tos = 'windows';\r\n\t\t} else if (/Android/.test(userAgent)) {\r\n\t\t\tos = 'android';\r\n\t\t} else if (!os && /Linux/.test(platform)) {\r\n\t\t\tos = 'linux';\r\n\t\t}\r\n\r\n\t\treturn os;\r\n\t}\r\n\r\n\tis_int(n) {\r\n\t\treturn n % 1 === 0;\r\n\t}\r\n\r\n\tclear() {\r\n\r\n\t\tthis.__elapsed_time = Time.elapsed_time;\r\n\t\tthis.__delta_time = Time.delta_time;\r\n\t\tthis.is_mouse_up = false;\r\n\t\tthis.wheel_delta = 0;\r\n\t\tthis.rotation_delta = 0;\r\n\r\n\t\tthis.double_click = false;\r\n\r\n\r\n\t\tthis.tapped = false;\r\n\t\tthis.mouse_dir.multiplyScalar(0);\r\n\t\tthis.multi_touch_dir.multiplyScalar(0);\r\n\t\tthis.left_mouse_button_pressed = false;\r\n\t\tthis.left_mouse_button_released = false;\r\n\r\n\t\tthis.right_mouse_button_pressed = false;\r\n\t\tthis.right_mouse_button_released = false;\r\n\t\tKeyboardInput.clear();\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst INPUT = new Input();\r\nmodule.exports = INPUT;\r\n","export default class Sphere extends THREE.Mesh\r\n{\r\n\tconstructor(radius, color)\r\n\t{\r\n    color = color || \"#FF0000\";\r\n    radius = radius || 1;\r\n    let geometry = new THREE.SphereBufferGeometry( radius, 64, 64);\r\n    let material = new THREE.MeshBasicMaterial( {color: color} );\r\n\t\tsuper(geometry, material);\r\n\t}\r\n}","module.exports=\"#define GLSLIFY 1\\nvoid main()\\n{\\n  vec3 pos = position;\\n  mat4 MVP = projectionMatrix * modelViewMatrix;\\n\\n  gl_Position = MVP * vec4( pos, 1.0 );\\n  //gl_Position.zw -= 0.1;\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform vec3 _Color;\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(_Color, 1.0);\\n}\";","import vert from '/editor/shaders/object_picker_vert';\r\nimport frag from '/editor/shaders/object_picker_frag';\r\nexport default class Mesh extends THREE.Mesh\r\n{\r\n\tconstructor(geometry, material)\r\n\t{\r\n\t\tsuper(geometry, material);\r\n\r\n\t\tthis._selectable_material = this.__get_selectable_material();\r\n\t\tthis.original_material = this.material;\r\n\t\tthis.stored_layers = this.layers.mask;\r\n\t}\r\n\r\n\t__get_selectable_material()\r\n\t{\r\n\t\treturn new THREE.ShaderMaterial({\r\n\t\t\tuniforms: {\r\n\t\t\t\t_Color: {value: new THREE.Color()}\r\n\t\t\t},\r\n\t\t\tvertexShader: vert,\r\n      fragmentShader: frag\r\n\t\t});\r\n\t}\r\n\r\n\trestore_material()\r\n\t{\r\n\t\tthis.material = this.original_material;\r\n\t}\r\n\r\n\tstore_layer_state()\r\n\t{\r\n\t\tthis.stored_layers = this.layers.mask;\r\n\t}\r\n\trestore_layer_state()\r\n\t{\r\n\t\tthis.layers.mask = this.stored_layers;\r\n\t}\r\n\r\n\tget selectable_material()\r\n\t{\r\n\t\treturn this._selectable_material;\r\n\t}\r\n}\r\n","import Mesh from '/Mesh';\r\n\r\nexport default class Arrow extends Mesh\r\n{\r\n\tconstructor(color, length, dir)\r\n\t{\r\n\t\tcolor = color || \"#FF0000\";\r\n\t\tlength = length || 1;\r\n\r\n\t\tlet cone_height = 0.4;\r\n\t\tlet cylinder_height = length - cone_height;\r\n\t\tlet cylinder_geo = new THREE.CylinderBufferGeometry( 0.01, 0.01, cylinder_height, 32 );\r\n\t\tcylinder_geo.translate(0,cylinder_height/2,0);\r\n\t\tlet cone_geometry = new THREE.ConeBufferGeometry( 0.1, cone_height, 32 );\r\n\t\tcone_geometry.translate(0, cylinder_height+cone_height/2, 0);\r\n\t  let buffer_geometry = THREE.BufferGeometryUtils.mergeBufferGeometries([cylinder_geo, cone_geometry]);\r\n\t  buffer_geometry.rotateX(3.14/2);\r\n    let material = new THREE.MeshBasicMaterial( {color: color} );\r\n\t\tsuper(buffer_geometry, material);\r\n\r\n\t\tif(dir)\r\n\t\t\tthis.quaternion.setFromUnitVectors(new THREE.Vector3(0,0,1), dir);\r\n\t}\r\n\r\n\tset dir(dir)\r\n\t{\r\n\t\tthis.quaternion.setFromUnitVectors(new THREE.Vector3(0,0,1), dir);\r\n\t}\r\n\tset length(value)\r\n\t{\r\n\t\tthis.scale.z = value;\r\n\t}\r\n}\r\n","class SceneManager\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis._current = new THREE.Scene();\r\n\t\tthis._current.name = \"default_scene\";\r\n\r\n\t}\r\n\r\n\tadd_scene(name)\r\n\t{\r\n\r\n\t}\r\n\r\n\tget current()\r\n\t{\r\n\t\treturn this._current;\r\n\t}\r\n\r\n\tset current(scene)\r\n\t{\r\n\t\tthis._current = scene;\r\n\t}\r\n}\r\n\r\nconst scene_manager = new SceneManager();\r\nmodule.exports = scene_manager;","export default class MathUtilities\r\n{\r\n\tconstructor(){}\r\n\r\n\tstatic linear_map(value,\r\n             from_range_start_value,\r\n             from_range_end_value,\r\n             to_range_start_value,\r\n             to_range_end_value)\r\n  {\r\n      return ((value - from_range_start_value)/ (from_range_end_value - from_range_start_value)) * (to_range_end_value - to_range_start_value) + to_range_start_value;\r\n  }\r\n\r\n  static between(value, min, max)\r\n  {\r\n\t\treturn (value >= min && value <= max)\r\n\r\n  }\r\n\r\n  static rgb_to_hex(rgb) {\r\n    rgb.r = Math.round(rgb.r * 255).toString(16);\r\n    rgb.g = Math.round(rgb.g * 255).toString(16);\r\n    rgb.b = Math.round(rgb.b * 255).toString(16);\r\n\r\n    if (rgb.r.length == 1)\r\n      rgb.r = \"0\" + rgb.r;\r\n    if (rgb.g.length == 1)\r\n      rgb.g = \"0\" + rgb.g;\r\n    if (rgb.b.length == 1)\r\n      rgb.b = \"0\" + rgb.b;\r\n\r\n    return \"#\" + rgb.r + rgb.g + rgb.b;\r\n  }\r\n\r\n  static project_points_on_plane(points, plane)\r\n  {\r\n    let projected_point = new THREE.Vector3();\r\n    let points_on_plane = [];\r\n    for(let i=0; i< points.length; i++)\r\n    {\r\n      plane.projectPoint(points[i], projected_point);\r\n      points_on_plane.push(projected_point.clone());\r\n    }\r\n\r\n    return points_on_plane;\r\n  }\r\n\r\n  static matrix4_lerp(from,to,target, t)\r\n  {\r\n    for(let i=0; i< 16; i++)\r\n    {\r\n      target.elements[i] = THREE.Math.lerp(from.elements[i], to.elements[i], t);\r\n    }\r\n  }\r\n\r\n  static equals(x1, x2) {\r\n    return Math.abs(x1 - x2) < 0.000001\r\n  }\r\n}\r\n","import CameraManager from '/CameraManager';\r\nimport Input from '/Input';\r\nimport Sphere from '/primitives/Sphere';\r\nimport Arrow from '/primitives/Arrow';\r\nimport SceneManager from '/SceneManager';\r\nimport MathUtilities from '/utilities/MathUtilities';\r\nimport Screen from '/Screen';\r\n\r\nclass CameraUtilities\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis.tmp_mat = new THREE.Matrix4();\r\n\t\tthis.tmp_vec = new THREE.Vector3(0,0,1);\r\n\t\tthis.tmp_vec2 = new THREE.Vector3(0,0,0);\r\n\t\tthis.plane = new THREE.Plane();\r\n\t\tthis.ray = new THREE.Ray();\r\n\r\n    this.tmp_size = new THREE.Vector3();\r\n    this.tmp_unproj = new THREE.Vector3();\r\n\t}\r\n\r\n  get_up_dir(camera) {\r\n    camera = camera || CameraManager.current;\r\n    this.tmp_vec.set(0, 1, 0);\r\n    this.tmp_vec.applyQuaternion(camera.quaternion);\r\n\r\n    return this.tmp_vec;\r\n  }\r\n\tget_forward_dir(camera)\r\n\t{\r\n    camera = camera || CameraManager.current;\r\n\t\tthis.tmp_vec.set(0,0,1);\r\n\t\tthis.tmp_vec.applyQuaternion(camera.quaternion);\r\n\r\n\t\treturn this.tmp_vec;\r\n\r\n\t}\r\n\tget_right_dir(camera)\r\n\t{\r\n    camera = camera || CameraManager.current;\r\n\t\tthis.tmp_vec.set(1,0,0);\r\n  \t\tthis.tmp_vec.applyQuaternion(camera.quaternion);\r\n  \t\treturn this.tmp_vec;\r\n\r\n\t}\r\n\r\n\tunproject_mouse_position(NDC, camera)\r\n  {\r\n    camera = camera || CameraManager.current;\r\n    let v_fov = (camera.fov/2) * Math.PI/180;\r\n    let h_fov = (2 * Math.atan(Math.tan(v_fov) * camera.aspect))/2;\r\n\r\n\r\n    let distV = Math.tan(v_fov) * camera.far;\r\n    let distH = Math.tan(h_fov) * camera.far;\r\n\r\n    this.tmp_vec.set(distH * NDC.x , distV * NDC.y, -camera.far).normalize();\r\n\r\n    return this.tmp_vec.applyQuaternion(camera.quaternion);\r\n  }\r\n\r\n  get_plane_intersection(plane_position, plane_normal, NDC, camera)\r\n  {\r\n    camera = camera || CameraManager.current;\r\n    NDC = NDC || Input.normalized_mouse_pos;\r\n\r\n\t\tthis.plane.setFromNormalAndCoplanarPoint(plane_normal || this.get_forward_dir(camera), plane_position);\r\n    if(camera.isPerspectiveCamera)\r\n    {\r\n      this.ray.set(camera.position, this.unproject_mouse_position(NDC, camera));\r\n    }\r\n    else\r\n    {\r\n      this.tmp_unproj.set(NDC.x, NDC.y, 1).unproject(camera);\r\n      this.ray.set(camera.position, this.tmp_unproj);\r\n    }\r\n\r\n    this.ray.intersectPlane(this.plane, this.tmp_vec2);\r\n    return this.tmp_vec2;\r\n  }\r\n\r\n\r\n\r\n\r\n  fit_points_on_camera(points, zoom_scale = 1)\r\n  {\r\n    let points_sphere = new THREE.Sphere().setFromPoints(points);\r\n    let world_space_center = points_sphere.center;\r\n    let camera_forward = this.get_forward_dir(CameraManager.current).clone();\r\n\r\n    let plane = new THREE.Plane().setFromNormalAndCoplanarPoint(camera_forward, world_space_center);\r\n\r\n\r\n\r\n    let points_on_plane = MathUtilities.project_points_on_plane(points, plane)\r\n\r\n    let projected_points_center = new THREE.Vector3();\r\n    let box =  new THREE.Box3().setFromPoints(points_on_plane);\r\n    box.getCenter(projected_points_center);\r\n\r\n\r\n    let up = new THREE.Vector3(0,1,0).applyQuaternion(CameraManager.current.quaternion)\r\n    let right = up.clone().cross(camera_forward).normalize();\r\n    let mat = new THREE.Matrix4().set(  right.x, up.x, camera_forward.x, world_space_center.x,\r\n                                        right.y, up.y, camera_forward.y, world_space_center.y,\r\n                                        right.z, up.z, camera_forward.z, world_space_center.z,\r\n                                              0,    0,                0,        1);\r\n\r\n    let inverse_mat = new THREE.Matrix4().getInverse(mat);\r\n    for(let i=0; i< points_on_plane.length; i++)\r\n    {\r\n      points_on_plane[i].applyMatrix4(inverse_mat);\r\n    }\r\n\r\n\r\n    let size = new THREE.Vector3();\r\n    box =  new THREE.Box3().setFromPoints(points_on_plane);\r\n    box.getSize(size);\r\n    size.multiplyScalar(zoom_scale);\r\n    let projected_center = new THREE.Vector3();\r\n    box.getCenter(projected_center);\r\n\r\n\r\n    return {\r\n      position: projected_points_center,\r\n      zoom: this.get_zoom_to_fit_rect(size.x/2, size.y/2)\r\n    }\r\n\r\n  }\r\n\r\n  get_zoom_to_fit_rect(width,height)\r\n  {\r\n    let v_fov = (CameraManager.current.fov/2) * Math.PI/180;\r\n    let h_fov = (2 * Math.atan(Math.tan(v_fov) * CameraManager.current.aspect))/2;\r\n\r\n    let distV = height / Math.tan(v_fov);\r\n    let distH = width / Math.tan(h_fov);\r\n\r\n    return Math.max(Math.abs(distH), Math.abs(distV));\r\n  }\r\n\r\n  get_zoom_to_fit_box(bb, camera)\r\n  {\r\n    if(camera.isOrthographicCamera)\r\n    {\r\n      bb.getSize(this.tmp_size);\r\n\r\n      let obj_x = this.tmp_size.x;\r\n      let obj_y = this.tmp_size.y;\r\n      let object_aspect = obj_x / obj_y;\r\n      if(Screen.aspect_ratio / object_aspect > 1)\r\n      {\r\n        return Screen.height/obj_y;\r\n      }\r\n      else\r\n      {\r\n        return Screen.width/obj_x;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      // return this.fit_points_on_camera([bb.min, bb.max], 1).zoom;\r\n      let size = new THREE.Vector3();\r\n      bb.getSize(size);\r\n      return this.get_zoom_to_fit_rect(size.x, size.y);\r\n\r\n    }\r\n  }\r\n\r\n  get_html_screen_pos(object, camera)\r\n  {\r\n    object.getWorldPosition(this.tmp_vec);\r\n    this.tmp_vec.project(camera);\r\n\r\n    this.tmp_vec.x = (this.tmp_vec.x * 0.5 + 0.5) * (Screen.width);\r\n    this.tmp_vec.y = (1-(this.tmp_vec.y * 0.5 + 0.5)) * Screen.height;\r\n    return this.tmp_vec;\r\n  }\r\n\r\n  update_projection(camera)\r\n  {\r\n    camera.left   = -Screen.width/2;\r\n    camera.right  = Screen.width/2;\r\n    camera.top    = Screen.height/2;\r\n    camera.bottom = -Screen.height/2;\r\n    camera.aspect = Screen.aspect_ratio;\r\n    camera.updateProjectionMatrix(true);\r\n  }\r\n}\r\n\r\nconst camera_utilities = new CameraUtilities();\r\nmodule.exports = camera_utilities;\r\n","class Capabilities\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis.max_anisotropy = 0;\r\n\t\tthis.vertex_texture_sampler_available = false;\r\n\t\tthis.fp_textures_available = false;\r\n\t}\r\n}\r\n\r\nconst capabilities = new Capabilities();\r\nmodule.exports = capabilities;\r\n","export default class EasingFunctions\r\n{\r\n\tconstructor(){}\r\n\r\n\tstatic ease_out_sine(x) {\r\n\t\treturn Math.sin(x * 3.14 / 2);\r\n\t}\r\n\r\n\tstatic ease_in_out_cubic(x) {\r\n\t\treturn x < 0.5 ?\r\n\t\t\t4 * x * x * x :\r\n\t\t\t1 - Math.pow(-2 * x + 2, 3) / 2;\r\n\t}\r\n\r\n\tstatic ease_out_cubic (x) {\r\n\t\treturn 1 - Math.pow(1 - x, 3);\r\n\t}\r\n\r\n\tstatic ease_in_out_quint (x) {\r\n\t\treturn x < 0.5 ?\r\n\t\t\t16 * x * x * x * x * x :\r\n\t\t\t1 - Math.pow(-2 * x + 2, 5) / 2;\r\n\t}\r\n\r\n\tstatic ease_out_quint (x) {\r\n\t\treturn 1 - Math.pow(1 - x, 5);\r\n\t}\r\n\r\n\tstatic ease_in_out_circ (x) {\r\n\t\treturn x < 0.5 ?\r\n\t\t\t(1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 :\r\n\t\t\t(Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\r\n\t}\r\n\r\n\tstatic ease_out_quad (x) {\r\n\t\treturn 1 - (1 - x) * (1 - x);\r\n\t}\r\n\r\n}","class EventManager\r\n{\r\n\r\n    constructor()\r\n    {\r\n        this.queue = {};\r\n\r\n        this.zoom_changed_evt           = \"zoom_changed\";\r\n        this.store_clickd_evt           = \"store_clicked\";\r\n        this.point_selected_evt         = \"point_selected\";\r\n        this.config_changed             = \"config_changed\";\r\n\r\n        this.path_substep_completed     = \"path_substep_completed\";\r\n        this.path_completed             = \"path_completed\";\r\n        this.go_to_store_requested_evt  = \"go_to_store_requested\";\r\n\r\n        this.resource_loaded_evt        = \"resource_loaded\";\r\n        this.service_clicked_evt        = \"service_clicked\";\r\n        this.unit_pos_updated_evt       = \"unit_position_updated\";\r\n\r\n        this.floor_changed_evt          = \"floor_changed\";\r\n\r\n        this.on_enter_floor_navigation  = \"on_enter_floor_navigation\";\r\n        this.on_exit_floor_navigation   = \"on_exit_floor_navigation\";\r\n\r\n        this.on_enter_floor_selection   = \"on_enter_floor_selection\";\r\n        this.on_exit_floor_selection    = \"on_exit_floor_selection\";\r\n\r\n        this.on_enter_outside_navigation  = \"on_enter_outside_navigation\";\r\n        this.on_exit_outside_navigation   = \"on_exit_outside_navigation\";\r\n\r\n        this.step_selected_evt = \"step_selected\";\r\n\r\n\r\n        \r\n    }\r\n\r\n    fire(event, payload)\r\n    {\r\n        let queue = this.queue[event];\r\n\r\n        if (queue === undefined) {\r\n            return;\r\n        }\r\n        let i = queue.length;\r\n        while (i--) {\r\n            queue[i](payload);\r\n        }\r\n\r\n    }\r\n\r\n    on(event, callback)\r\n    {\r\n        if (typeof this.queue[event] === 'undefined') \r\n        {\r\n            this.queue[event] = [];\r\n        }\r\n\r\n        this.queue[event].push(callback);\r\n    }\r\n\r\n    fire_zoom_changed(zoom)\r\n    {\r\n        this.fire(this.zoom_changed_evt, zoom);\r\n    }\r\n    fire_store_selected(store_id)\r\n    {\r\n        this.fire(this.store_clickd_evt, store_id);\r\n    }\r\n    fire_point_selected(hit_data)\r\n    {\r\n        this.fire(this.point_selected_evt, hit_data);\r\n    }\r\n    fire_config_changed()\r\n    {\r\n        this.fire(this.config_changed);\r\n    }\r\n    fire_path_substep_completed(step_number)\r\n    {\r\n        this.fire(this.path_substep_completed, step_number);\r\n    }\r\n    fire_path_completed()\r\n    {\r\n        this.fire(this.path_completed);\r\n    }\r\n    fire_step_selected(step_index)\r\n    {\r\n        this.fire(this.step_selected_evt, step_index);\r\n    }\r\n\r\n    fire_go_to_store_requested(store_id)\r\n    {\r\n        this.fire(this.go_to_store_requested_evt, store_id);\r\n    }\r\n\r\n    fire_resource_loaded(resource)\r\n    {\r\n        this.fire(this.resource_loaded_evt, resource);\r\n    }\r\n\r\n    fire_service_clicked(service)\r\n    {\r\n        this.fire(this.service_clicked_evt, service);\r\n    }\r\n    fire_unit_position_updated(unit_data)\r\n    {\r\n        this.fire(this.unit_pos_updated_evt, unit_data);\r\n    }\r\n\r\n    fire_floor_switched(floor_id)\r\n    {\r\n        this.fire(this.floor_changed_evt, floor_id);\r\n    }\r\n\r\n    fire_on_enter_floor_navigation(state)\r\n    {\r\n        this.fire(this.on_enter_floor_navigation, state);\r\n    }\r\n\r\n    fire_on_exit_floor_navigation(state)\r\n    {\r\n        this.fire(this.on_exit_floor_navigation, state);\r\n    }\r\n\r\n    fire_on_enter_floor_selection(state)\r\n    {\r\n        this.fire(this.on_enter_floor_selection,state);\r\n    }\r\n\r\n    fire_on_exit_floor_selection(state)\r\n    {\r\n        this.fire(this.on_exit_floor_selection,state);\r\n    }\r\n    \r\n    fire_on_enter_outside_navigation(state)\r\n    {\r\n        this.fire(this.on_enter_outside_navigation,state);\r\n    }\r\n\r\n    fire_on_exit_outside_navigation(state)\r\n    {\r\n        this.fire(this.on_exit_outside_navigation,state);\r\n    }\r\n\r\n\r\n}\r\n\r\nconst event_manager = new EventManager();\r\nmodule.exports = event_manager;","\r\nexport default class AxisHelper extends THREE.Object3D {\r\n  constructor(scale = 1.0) {\r\n    super();\r\n\r\n    const blueAxisMat = new THREE.LineBasicMaterial({ color: 0x4444ff, depthFunc: THREE.AlwaysDepth });\r\n    const blueAxisGeo = new THREE.Geometry();\r\n    blueAxisGeo.vertices.push(new THREE.Vector3(0, 0, 0));\r\n    blueAxisGeo.vertices.push(new THREE.Vector3(0, 0, -1000));\r\n    const blueAxisLine = new THREE.Line(blueAxisGeo, blueAxisMat);\r\n    blueAxisLine.renderOrder = 50000;\r\n\r\n    const greenAxisMat = new THREE.LineBasicMaterial({ color: 0x44ff44, depthFunc: THREE.AlwaysDepth });\r\n    const greenAxisGeo = new THREE.Geometry();\r\n    greenAxisGeo.vertices.push(new THREE.Vector3(0, 0, 0));\r\n    greenAxisGeo.vertices.push(new THREE.Vector3(0, 1000, 0));\r\n    const greenAxisLine = new THREE.Line(greenAxisGeo, greenAxisMat);\r\n    greenAxisLine.renderOrder = 50000;\r\n\r\n    const redAxisMat = new THREE.LineBasicMaterial({ linewidth: 100, color: 0xff4444, depthFunc: THREE.AlwaysDepth });\r\n    const redAxisGeo = new THREE.Geometry();\r\n    redAxisGeo.vertices.push(new THREE.Vector3(0, 0, 0));\r\n    redAxisGeo.vertices.push(new THREE.Vector3(1000, 0, 0));\r\n    const redAxisLine = new THREE.Line(redAxisGeo, redAxisMat);\r\n    redAxisLine.renderOrder = 50000;\r\n    this.renderOrder = 100000;\r\n    this.add(blueAxisLine);\r\n    this.add(greenAxisLine);\r\n    this.add(redAxisLine);\r\n    this.scale.set(scale, scale, scale);\r\n\r\n  }\r\n\r\n  update() {\r\n  }\r\n\r\n  dispose() {\r\n\r\n  }\r\n}\r\n","export default class BaseRender\r\n{\r\n\tconstructor()\r\n\t{\r\n\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t\r\n\t}\r\n\r\n\ton_enter(context, renderer)\r\n\t{\r\n\r\n\t}\r\n\r\n\ton_exit(context, renderer)\r\n\t{\r\n\t\t\r\n\t}\r\n\r\n\tresize()\r\n\t{\r\n\t\t\r\n\t}\r\n\r\n}\r\n"," \r\nexport default class RenderLayers {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  static get opaque()            { return 0; }\r\n  static get transparent()       { return 1; }\r\n  static get outline()       \t\t { return 2; }\r\n  static get selectable()\t\t\t\t { return 3; }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform sampler2D _Blur;\\nuniform vec2 _Screen;\\nvarying vec2 vUv;\\n\\nfloat aastep(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\nvoid main()\\n{\\n\\tvec2 pixel_size = 1.0/_Screen;\\n\\n\\tvec4 color = texture2D( _MainTex, vUv);\\n\\tfloat mask = 1.0 - color.a;\\n\\n\\tfloat blur = texture2D( _Blur, vUv).a;\\n\\n  // gl_FragColor = vec4(mask,mask,mask,0.0);\\n  // gl_FragColor = color;\\n\\n\\tgl_FragColor = vec4(mix(color.rgb, mix(color.rgb, vec3(1.,0.,0.),aastep(0.076, blur)), mask), 1.0);\\n}\\n\\n\";","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform vec2 _Resolution;\\nuniform vec2 _SampleDir;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n\\n\\tvec3 sum = vec3(0.,0.,0.);\\n\\tvec2 dir = (0.5/_Resolution) * _SampleDir;\\n\\tfloat _Distance = 2.0;\\n\\tsum += texture2D( _MainTex, vUv + dir * -4. * _Distance ).rgb * 0.0525;\\n\\tsum += texture2D( _MainTex, vUv + dir * -3. * _Distance ).rgb * 0.075;\\n\\tsum += texture2D( _MainTex, vUv + dir * -2. * _Distance ).rgb * 0.110;\\n\\tsum += texture2D( _MainTex, vUv + dir * -1. * _Distance ).rgb * 0.150;\\n\\tsum += texture2D( _MainTex, vUv + dir *  0. * _Distance ).rgb * 0.225;\\n\\tsum += texture2D( _MainTex, vUv + dir *  1. * _Distance ).rgb * 0.150;\\n\\tsum += texture2D( _MainTex, vUv + dir *  2. * _Distance ).rgb * 0.110;\\n\\tsum += texture2D( _MainTex, vUv + dir *  3. * _Distance ).rgb * 0.075;\\n\\tsum += texture2D( _MainTex, vUv + dir *  4. * _Distance ).rgb * 0.0525;\\n\\tgl_FragColor = vec4(sum, 1.0);\\n\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\n\\nvarying vec2 vUv;\\nvoid main()\\n{\\n\\tgl_FragColor = texture2D(_MainTex, vUv);\\n}\";","module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvoid main()\\n{\\n\\tgl_Position = vec4(uv * 2.0 - 1.0, 1.0, 1.0);\\n\\tvUv = uv;\\n}\";","import Screen from '/Screen';\r\nimport RenderLayers from '/RenderLayers';\r\n\r\nimport compose_frag from '/shaders/box_blur/compose_frag';\r\nimport box_blur_frag from '/shaders/box_blur/box_blur_frag';\r\nimport copy_frag from '/shaders/copy/copy_frag';\r\nimport copy_vert from '/shaders/copy/copy_vert';\r\nimport background_frag from '/shaders/basic_color/basic_color_frag';\r\n\r\nexport default class OutlineRender\r\n{\r\n\r\n\tconstructor(webgl)\r\n\t{\r\n\t\tthis.main_rt \t\t\t\t= new THREE.WebGLRenderTarget(Screen.width, Screen.height);\r\n\t\tthis.rt1\t\t \t\t\t\t= new THREE.WebGLRenderTarget(Screen.width, Screen.height);\r\n\t\tthis.rt2\t\t \t\t\t\t= new THREE.WebGLRenderTarget(Screen.width, Screen.height);\r\n\r\n\r\n    this.compose_material \t\t= this.__get_compose_material();\r\n    this.copy_material \t\t\t\t= this.__get_copy_material();\r\n    this.box_blur_material \t\t= this.__get_box_blur_material();\r\n    this.background_material \t= this.__get_background_material();\r\n\r\n\t\tthis.copy_plane = new THREE.Mesh( new THREE.PlaneGeometry(1,1), this.copy_material );\r\n\t\tthis.copy_plane.frustumCulled = false;\r\n\t\tthis.copy_scene = new THREE.Scene();\r\n\t\tthis.copy_scene.add(this.copy_plane);\r\n\r\n\t}\r\n\r\n\tresize(w,h)\r\n\t{\r\n\t\tthis.main_rt.setSize(w,h);\r\n\t\tthis.rt1.setSize(w,h);\r\n\t\tthis.rt2.setSize(w,h);\r\n\t\tthis.box_blur_material.uniforms._Screen.value.set(w,h);\r\n\t\tthis.compose_material.uniforms._Screen.value.set(w,h);\r\n\t}\r\n\r\n\r\n\trender(webgl)\r\n\t{\r\n\t\twebgl.camera.updateMatrix();\r\n\t\twebgl.camera.updateMatrixWorld();\r\n\r\n\t\twebgl.camera.layers.enable(RenderLayers.opaque);\r\n\t\twebgl.camera.layers.enable(RenderLayers.transparent);\r\n\t\twebgl.camera.layers.disable(RenderLayers.outline);\r\n\r\n\t\t//render scene\r\n\t\twebgl._renderer.setClearColor(webgl.clear_color, 0);\r\n\t\twebgl._renderer.clearTarget(this.main_rt,true,true,true);\r\n\r\n\t\tthis.copy_scene.overrideMaterial = this.background_material;\r\n\t\tthis.background_material.uniforms._Color.value.set(webgl.clear_color.r, webgl.clear_color.g, webgl.clear_color.b, 0);\r\n\t\twebgl._renderer.render(this.copy_scene, webgl.camera, this.main_rt, false);\r\n\r\n\r\n\t\twebgl._renderer.render(webgl.scene, webgl.camera, this.main_rt, false);\r\n\r\n\r\n\r\n\r\n\t\t//horizontal blur\r\n\t\tthis.box_blur_material.uniforms._MainTex.value = this.main_rt.texture;\r\n\t\tthis.box_blur_material.uniforms._SampleDir.value.set(1,0);\r\n\r\n\t\tthis.copy_scene.overrideMaterial = this.box_blur_material;\r\n\t\twebgl._renderer.render(this.copy_scene, webgl.camera, this.rt1, false);\r\n\r\n\t\t//vertical blur\r\n\t\tthis.box_blur_material.uniforms._SampleDir.value.set(0,1);\r\n\t\tthis.box_blur_material.uniforms._MainTex.value = this.rt1.texture;\r\n\r\n\t\twebgl._renderer.render(this.copy_scene, webgl.camera, this.rt2, false);\r\n\r\n\r\n\t\t//compose\r\n\t\tthis.copy_scene.overrideMaterial = this.compose_material;\r\n\t\tthis.compose_material.uniforms._MainTex.value = this.main_rt.texture;\r\n\t\tthis.compose_material.uniforms._Blur.value = this.rt2.texture;\r\n\t\twebgl._renderer.render(this.copy_scene, webgl.camera, undefined, false);\r\n\t\tthis.copy_scene.overrideMaterial = undefined;\r\n\t}\r\n\r\n\t__get_copy_material()\r\n\t{\r\n\t\treturn new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        _MainTex: \t\t\t{value : undefined}\r\n      },\r\n      vertexShader: copy_vert,\r\n      fragmentShader: copy_frag,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    });\r\n\t}\r\n\r\n\t__get_box_blur_material()\r\n\t{\r\n \t\treturn new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        _MainTex: \t\t\t{value : undefined},\r\n        _SampleDir: \t\t{value : new THREE.Vector2()},\r\n        _Screen: \t\t\t\t{value : new THREE.Vector2(Screen.width, Screen.height)}\r\n      },\r\n      vertexShader: copy_vert,\r\n      fragmentShader: box_blur_frag,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    });\r\n\t}\r\n\r\n\t__get_compose_material()\r\n\t{\r\n\t\treturn new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        _MainTex: \t\t\t{value : undefined},\r\n        _Blur: \t\t\t\t\t{value : undefined},\r\n        _Screen: \t\t\t\t{value : new THREE.Vector2(Screen.width, Screen.height)}\r\n      },\r\n      vertexShader: copy_vert,\r\n      fragmentShader: compose_frag,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n      extensions: {\r\n      \tderivatives: true\r\n      }\r\n    });\r\n\t}\r\n\r\n\t__get_background_material()\r\n\t{\r\n\t\treturn new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        _Color: \t\t\t\t{value : new THREE.Vector4(0,0,0,0)}\r\n      },\r\n      vertexShader: copy_vert,\r\n      fragmentShader: background_frag,\r\n      depthTest: true,\r\n      depthWrite: false\r\n\r\n    });\r\n\t}\r\n\r\n\ton_enter(webgl)\r\n\t{\r\n\t\twebgl._renderer.autoClear = false;\r\n\t}\r\n\r\n\ton_exit(webgl)\r\n\t{\r\n\t\twebgl._renderer.autoClear = true;\r\n\t}\r\n}\r\n","import vert from '/shaders/copy/copy_vert';\r\nimport frag from '/shaders/copy/copy_frag';\r\n\r\nexport default class BlitMaterial extends THREE.ShaderMaterial\r\n{\r\n\tconstructor(frag_shader, vert_shader, defines)\r\n\t{\r\n\t\tsuper({\r\n\t\t\tuniforms: {\r\n\t\t\t\t_MainTex: {value: null},\r\n        _Resolution:{value: new THREE.Vector2(0,0)}\r\n\t\t\t},\r\n\t\t\tdefines: defines || {},\r\n\t\t\tvertexShader: vert_shader || vert,\r\n\t\t\tfragmentShader: frag_shader || frag,\r\n\t\t\tdepthWrite: false,\r\n      blending: THREE.NoBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n      depthFunc: THREE.AlwaysDepth\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nuniform vec4 _DepthNormal;\\nvec2 EncodeFloatRG( float v )\\n{\\n    vec2 kEncodeMul = vec2(1.0, 255.0);\\n    float kEncodeBit = 1.0/255.0;\\n    vec2 enc = kEncodeMul * v;\\n    enc = fract (enc);\\n    enc.x -= enc.y * kEncodeBit;\\n    return enc;\\n}\\n\\nvec2 EncodeNormal (vec3 n)\\n{\\n    float scale = 1.7777;\\n    vec2 enc = n.xy / (n.z+1.0);\\n    enc /= scale;\\n    enc = enc*0.5+0.5;\\n    return enc;\\n}\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(EncodeFloatRG(_DepthNormal.x), EncodeNormal(normalize(_DepthNormal.yzw)));  \\n}\";","import BlitMaterial from '/materials/BlitMaterial';\r\nimport frag from '/shaders/clear/clear_depth_normal_frag';\r\n\r\nexport default class ClearDepthNormalMaterial extends BlitMaterial\r\n{\r\n\tconstructor(clear_depth, clear_normal)\r\n\t{\r\n\t\tsuper(frag);\r\n\t\tthis.uniforms._DepthNormal = {value: new THREE.Vector4(clear_depth, clear_normal.x, clear_normal.y, clear_normal.z)};\r\n\t}\r\n\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nvarying vec3 v_normal;\\nvarying vec3 v_pos;\\n\\nvoid main()\\n{\\n  vec3 pos = position;\\n  mat4 MVP = projectionMatrix * modelViewMatrix;\\n\\n  v_normal \\t= (modelViewMatrix * vec4(normal, 0.0)).xyz;\\n  v_pos \\t\\t= (modelViewMatrix * vec4( pos, 1.0 )).xyz;\\n\\n  gl_Position = MVP * vec4( pos, 1.0 );\\n}\";","module.exports=\"#define GLSLIFY 1\\nvarying vec3 v_normal;\\nvarying vec3 v_pos;\\n\\nuniform float _FarPlane;\\n\\nvec2 EncodeFloatRG( float v )\\n{\\n    vec2 kEncodeMul = vec2(1.0, 255.0);\\n    float kEncodeBit = 1.0/255.0;\\n    vec2 enc = kEncodeMul * v;\\n    enc = fract (enc);\\n    enc.x -= enc.y * kEncodeBit;\\n    return enc;\\n}\\n\\nvec2 EncodeNormal (vec3 n)\\n{\\n    float scale = 1.7777;\\n    vec2 enc = n.xy / (n.z+1.0);\\n    enc /= scale;\\n    enc = enc*0.5+0.5;\\n    return enc;\\n}\\n\\nvoid main()\\n{\\n\\tgl_FragColor = vec4(EncodeFloatRG(length(v_pos.z)/_FarPlane), EncodeNormal(normalize(v_normal)));\\t\\n}\\n\\n\";","import vert from '/shaders/depth_normals/depth_normals_vert';\r\nimport frag from '/shaders/depth_normals/depth_normals_frag';\r\n\r\nexport default class DepthNormalMaterial extends THREE.ShaderMaterial\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper({\r\n      uniforms: {\r\n      \t_FarPlane: {value: 1}\r\n      },\r\n      vertexShader: vert,\r\n      fragmentShader: frag\r\n    });\r\n\t}\r\n\r\n\tset far_plane(value)\r\n\t{\r\n\t\tthis.uniforms._FarPlane.value = value;\r\n\t}\r\n\r\n}\r\n","import CameraManager from '/CameraManager';\r\nimport SceneManager from '/SceneManager';\r\nimport Screen from '/Screen';\r\n\r\nimport ClearDepthNormalMaterial from '/materials/ClearDepthNormalMaterial';\r\nimport DepthNormalMaterial from '/materials/DepthNormalMaterial';\r\n\r\nexport default class DepthAndNormalsRenderer\r\n{\r\n\tconstructor()\r\n\t{\r\n    this.RT = new THREE.WebGLRenderTarget(Screen.width, Screen.height);\r\n\r\n    this.clear_depth_normal_mat = new ClearDepthNormalMaterial(1, new THREE.Vector3(0,0,1));\r\n    this.depth_normal_material = new DepthNormalMaterial();\r\n\t}\r\n\r\n\r\n\trender(graphics)\r\n\t{\r\n\t\tthis.__resize_RT_if_necessary();\r\n\r\n\r\n    graphics.clear(this.RT, undefined, true,true)\r\n\r\n    graphics.blit_clear_with_material(this.RT, this.clear_depth_normal_mat);\r\n\r\n    this.depth_normal_material.far_plane = CameraManager.current.far;\r\n\r\n    graphics.render(undefined, undefined, this.RT, this.depth_normal_material);\r\n\r\n\t}\r\n\r\n  __resize_RT_if_necessary()\r\n  {\r\n    if(this.RT.width !== Screen.width || this.RT.height !== Screen.height)\r\n    {\r\n      this.RT.setSize(Screen.width, Screen.height);\r\n    }\r\n  }\r\n\r\n\tget render_target()\r\n\t{\r\n\t\treturn this.RT;\r\n\t}\r\n\r\n}\r\n","import BlitMaterial from '/materials/BlitMaterial';\r\n\r\nexport default class Blitter\r\n{\r\n\r\n  constructor(renderer)\r\n  {\r\n      this.renderer = renderer;\r\n      this._blit_scene = new THREE.Scene();\r\n      this._blit_material = new BlitMaterial();\r\n      this._blit_quad = new THREE.Mesh(\r\n        new THREE.PlaneBufferGeometry( 1, 1 ),this._blit_material );\r\n      this._blit_scene.add( this._blit_quad );\r\n      this._blit_camera = new THREE.OrthographicCamera( -1, 1, 1, -1, -10000, 10000 );\r\n\r\n  }\r\n\r\n\r\n  blit(src, dst)\r\n  {\r\n    this._blit_quad.material = this._blit_material;\r\n    this._blit_quad.material.uniforms._MainTex.value = src.texture;\r\n    this._blit_quad.material.uniforms._Resolution.value.set(src.width, src.height);\r\n\r\n    this.renderer.setRenderTarget(dst === undefined? null : dst);\r\n\r\n    this.renderer.render( this._blit_scene,\r\n                          this._blit_camera);\r\n  }\r\n\r\n  blit_with_material(src, dst, mat)\r\n  {\r\n    this._blit_quad.material = mat;\r\n    this._blit_quad.material.uniforms._MainTex.value = src.texture;\r\n    this._blit_quad.material.uniforms._Resolution.value.set(src.width, src.height);\r\n\r\n    this.renderer.setRenderTarget(dst === undefined? null : dst);\r\n\r\n    this.renderer.render( this._blit_scene,\r\n                          this._blit_camera );\r\n  }\r\n\r\n  blit_clear_with_material(dst_RT, mat)\r\n  {\r\n    this._blit_quad.material = mat;\r\n\r\n    this.renderer.setRenderTarget(dst_RT === undefined? null : dst_RT);\r\n\r\n    this.renderer.render( this._blit_scene, this._blit_camera);\r\n  }\r\n\r\n}\r\n","import Configuration from           '/Configuration';\r\nimport BaseRender from   '/render_mode/BaseRender';\r\nimport OutlineRender from           '/render_mode/OutlineRender';\r\nimport Screen from '/Screen';\r\nimport CameraManager from '/CameraManager';\r\nimport SceneManager from '/SceneManager';\r\nimport Capabilities from '/Capabilities';\r\nimport DepthAndNormalsRenderer from '/render_utilities/DepthAndNormalsRenderer';\r\nimport Blitter from '/render_utilities/Blitter';\r\n\r\nclass Graphics {\r\n\r\n\r\n  constructor() {\r\n    this._renderer = undefined;\r\n    this.blitter = undefined;\r\n    this.canvas = undefined;\r\n    this.no_render = undefined;\r\n    this.current_render_mode = undefined;\r\n    this.generateDepthNormalTexture = false;\r\n    this.depth_and_normals_renderer = undefined;\r\n  }\r\n\r\n  init(canvas, msaa = true) {\r\n    this._renderer = new THREE.WebGLRenderer({\r\n      antialias: msaa,\r\n      preserveDrawingBuffer: true,\r\n      alpha: true,\r\n      canvas: canvas\r\n    });\r\n\r\n    this._renderer.autoClear = false;\r\n\r\n    this._renderer.setPixelRatio(1);\r\n\r\n    Screen.dpr = window.devicePixelRatio;\r\n\r\n\t\tthis._renderer.extensions.get( 'ANGLE_instanced_arrays' )\r\n\r\n    this.blitter = new Blitter(this._renderer);\r\n\r\n    this.canvas = this._renderer.domElement;\r\n\r\n    this.no_render = new BaseRender();\r\n\r\n    this.current_render_mode = this.no_render;\r\n\r\n    Capabilities.max_anisotropy = this._renderer.capabilities.getMaxAnisotropy();\r\n    Capabilities.vertex_texture_sampler_available = this._renderer.capabilities.maxVertexTextures > 0;\r\n    Capabilities.fp_textures_available = this._renderer.capabilities.floatVertexTextures;\r\n\r\n    this.generateDepthNormalTexture = false;\r\n\r\n    this.depth_and_normals_renderer = new DepthAndNormalsRenderer();\r\n\r\n  }\r\n\r\n  get dom_element()\r\n  {\r\n    return this._renderer.domElement;\r\n  }\r\n\r\n  get depth_normals_RT()\r\n  {\r\n    return this.depth_and_normals_renderer.render_target;\r\n  }\r\n\r\n\r\n  set_state(new_state)\r\n  {\r\n    console.log(\"VIEWAPI - map render mode switch to: \" + new_state.constructor.name);\r\n\r\n    this.current_render_mode.on_exit(this, this._renderer);\r\n    this.current_render_mode = new_state;\r\n    this.current_render_mode.on_enter(this, this._renderer);\r\n  }\r\n\r\n  update() {\r\n    this.check_for_resize();\r\n\r\n    if(this.generateDepthNormalTexture)\r\n    {\r\n      this.depth_and_normals_renderer.render(this);\r\n    }\r\n\r\n    if(CameraManager.current)\r\n    {\r\n      CameraManager.current.aspect = Screen.aspect_ratio;\r\n\r\n      CameraManager.current.updateProjectionMatrix();\r\n\r\n      CameraManager.current.updateMatrix();\r\n      CameraManager.current.updateMatrixWorld(true);\r\n      this.current_render_mode.render();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render(scene, camera, RT, override_mat)\r\n  {\r\n    this.__apply_override_material(scene, override_mat);\r\n\r\n    this._renderer.setRenderTarget(RT === undefined? null : RT);\r\n    this._renderer.render(scene  || SceneManager.current,\r\n                          camera || CameraManager.current);\r\n\r\n    this.__apply_override_material(scene, undefined);\r\n\r\n\r\n  }\r\n\r\n  __apply_override_material(scene, mat)\r\n  {\r\n    if(scene)\r\n      scene.overrideMaterial = mat;\r\n    else\r\n      SceneManager.current.overrideMaterial = mat;\r\n  }\r\n\r\n  readback_RT(RT, buffer)\r\n  {\r\n    this._renderer.readRenderTargetPixels( RT, 0, 0, RT.width, RT.height, buffer);\r\n  }\r\n\r\n  clear(RT, camera, clear_depth, clear_stencil)\r\n  {\r\n    this._renderer.setRenderTarget(RT === undefined? null : RT);\r\n\r\n    if(camera)\r\n    {\r\n      this._renderer.setClearColor(camera.clear_color, camera.clear_alpha);\r\n    }\r\n\r\n    this._renderer.clear( camera?         true : false, // clear color\r\n                          clear_depth?    true : false,\r\n                          clear_stencil?  true : false);\r\n  }\r\n\r\n  check_for_resize()\r\n  {\r\n    let current_width = this.canvas.clientWidth;\r\n    let current_height = this.canvas.clientHeight;\r\n\r\n    if (this.canvas.width !== Screen.render_width ||\r\n        this.canvas.height !== Screen.render_height ||\r\n\r\n        current_width !== Screen.width ||\r\n        current_height !== Screen.height)\r\n    {\r\n      Screen.update_size(current_width, current_height);\r\n\r\n      this._renderer.setSize(Screen.render_width, Screen.render_height, false);\r\n      this.current_render_mode.resize(Screen.render_width, Screen.render_height);\r\n    }\r\n  }\r\n\r\n  on_resize() {\r\n    console.error(\"Graphics.on_resize call no longer needed.\")\r\n  }\r\n\r\n\r\n  blit(src_RT, dst_RT, mat)\r\n  {\r\n    if(mat)\r\n      this.blitter.blit_with_material(src_RT, dst_RT, mat);\r\n    else\r\n      this.blitter.blit(src_RT, dst_RT);\r\n  }\r\n\r\n  blit_clear_with_material(dst_RT, mat)\r\n  {\r\n    this.blitter.blit_clear_with_material(dst_RT, mat);\r\n  }\r\n\r\n\r\n  take_screenshot(blob_callback)\r\n  {\r\n\r\n    const ctx = this;\r\n\r\n\r\n    let old_width = Screen.width;\r\n    let old_height = Screen.height;\r\n\r\n    let new_width = 4096;\r\n    let new_height = 4096;\r\n\r\n    let tile_width = 1024;\r\n    let tile_height = 1024;\r\n\r\n    let divisions_x = parseInt(Math.ceil(new_width / tile_width));\r\n    let divisions_y = parseInt(Math.ceil(new_height / tile_height));\r\n\r\n    Screen.update_size(tile_width, tile_height);\r\n\r\n    this._renderer.setPixelRatio(1);\r\n\r\n    this._renderer.setSize(tile_width ,tile_height, false);\r\n\r\n    this.ctx_2D.canvas.width  = new_width;\r\n    this.ctx_2D.canvas.height = new_height;\r\n\r\n    CameraManager.current.aspect = Screen.aspect_ratio;\r\n    CameraManager.current.updateMatrix();\r\n    CameraManager.current.updateMatrixWorld(true);\r\n\r\n    for(let x = 0; x < divisions_x; x++)\r\n    {\r\n      for(let y = 0; y < divisions_y; y++)\r\n      {\r\n\r\n        CameraManager.current.setViewOffset( new_width,             new_height,\r\n                                             Screen.width*x,         Screen.height*y,\r\n                                             Screen.width,            Screen.height);\r\n        this.current_render_mode.render();\r\n\r\n        this.ctx_2D.drawImage(this._renderer.domElement, Screen.width*x, Screen.height*y);\r\n      }\r\n    }\r\n\r\n    // transform the result canvas into a blob\r\n    // from them the callback turns into a ULR and download it\r\n    this.ctx_2D.canvas.toBlob(blob_callback,\"image/png;base64;\");\r\n\r\n    CameraManager.current.clearViewOffset();\r\n    Screen.update_size(old_width,old_height);\r\n    this._renderer.setPixelRatio(window.devicePixelRatio);\r\n    this._renderer.setSize(old_width,old_height, false);\r\n\r\n    CameraManager.current.aspect = Screen.aspect_ratio;\r\n    CameraManager.current.updateMatrix();\r\n    CameraManager.current.updateMatrixWorld(true);\r\n\r\n  }\r\n\r\n  download_screenshot (blob) {\r\n    console.log(\"el blob\", blob);\r\n    let link = document.createElement('a');\r\n    link.download = \"Snapshot.png\";\r\n\r\n    link.href = URL.createObjectURL(blob);\r\n    link.click()\r\n\r\n    link.onclick = function() {\r\n      requestAnimationFrame(function() {\r\n        URL.revokeObjectURL(a.href);\r\n      });\r\n      a.removeAttribute('href')\r\n    };\r\n\r\n  }\r\n\r\n}\r\n\r\nconst graphics = new Graphics();\r\nmodule.exports = graphics;\r\n\r\n","import Mesh from '/Mesh';\r\n\r\nexport default class Cube extends Mesh\r\n{\r\n\tconstructor(size, segments, color)\r\n\t{\r\n\t\tsize \t\t\t= size || new THREE.Vector3(1,1,1);\r\n\t\tsegments \t= segments || new THREE.Vector3(1,1,1);\r\n    color \t\t= color || 0xff0000;\r\n    let geometry = new THREE.BoxGeometry( size.x, size.y, size.z, segments.x, segments.y, segments.z);\r\n    let material = new THREE.MeshBasicMaterial( {color: color} );\r\n\t\tsuper(geometry, material);\r\n\t}\r\n}\r\n","import AxisHelper from '/components/AxisHelper';\r\nimport basic_color_vert from '/shaders/basic_color/basic_color_vert';\r\nimport basic_color_frag from '/shaders/basic_color/basic_color_frag';\r\nimport SceneManager from '/SceneManager';\r\nimport Graphics from '/Graphics';\r\nimport Cube from '/primitives/Cube';\r\nimport Sphere from '/primitives/Sphere';\r\nimport Arrow from '/primitives/Arrow';\r\n\r\nclass Debug {\r\n  constructor() {\r\n    this.Vector3_one = new THREE.Vector3(1,1,1);\r\n    this.Vector3_zero = new THREE.Vector3(0,0,0);\r\n    this.canvas_renderer = undefined;\r\n\r\n    this.rt_debug = undefined;\r\n  }\r\n\r\n  init(webgl)\r\n  {\r\n    this.webgl = webgl;\r\n\r\n    this.ctx = undefined;\r\n\r\n    // var cln = webgl.dom.cloneNode(false);\r\n    // cln.id = \"canvas_debug\";\r\n    // $(cln).css(\"position\", \"absolute\");\r\n    // webgl.dom.parentElement.insertBefore(cln, webgl.dom);\r\n    // this.ctx = cln.getContext('2d');\r\n\r\n    // this.ctx.clearRect(0, 0, cln.width, cln.height);\r\n    // this.ctx.fillStyle =  \"rgba(255, 0, 0, 1)\";\r\n\r\n  }\r\n\r\n  draw_arrow(origin, dir, color = 0xff0000)\r\n  {\r\n    let arrow = new Arrow(color, dir.length(), dir.clone().normalize());\r\n    arrow.position.copy(origin);\r\n    SceneManager.current.add(arrow);\r\n    return arrow;\r\n  }\r\n\r\n  draw_axis()\r\n  {\r\n    let axis = new AxisHelper();\r\n    SceneManager.current.add(axis);\r\n    return axis;\r\n  }\r\n\r\n  set_debug_RT(RT)\r\n  {\r\n    this.rt_debug = RT;\r\n  }\r\n\r\n  draw_rectangle(position_2d, width, height, color)\r\n  {\r\n    width  = width || 100;\r\n    height = height || 100;\r\n    this.ctx.fillStyle =  color || \"rgba(255, 0, 0, 1)\";\r\n    this.ctx.fillRect(position_2d.x - width/2,\r\n                      (this.ctx.canvas.height - position_2d.y) - height/2,width,height);\r\n\r\n  }\r\n\r\n  clear()\r\n  {\r\n    if(this.ctx)\r\n      this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n  }\r\n\r\n  draw_line_2D(from, to, color)\r\n  {\r\n    this.ctx.strokeStyle =  color ||\"rgba(255, 0, 0, 1)\";\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(from.x, from.y);\r\n    this.ctx.lineTo(to.x, to.y);\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  draw_line(points, color)\r\n  {\r\n    var material = new THREE.LineBasicMaterial({\r\n      color: color\r\n    });\r\n\r\n    var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n\r\n    var line = new THREE.Line(geometry, material);\r\n    SceneManager.current.add(line);\r\n    return line;\r\n  }\r\n  draw_cube(pos, size, color)\r\n  {\r\n    size = size || 1;\r\n    color = color || 0xff0000;\r\n    pos = pos || new THREE.Vector3();\r\n\r\n    var cube = new Cube(new THREE.Vector3(size, size, size), undefined, color );\r\n    cube.position.copy(pos);\r\n    SceneManager.current.add( cube );\r\n    return cube;\r\n  }\r\n  draw_oriented_cube(from, to, height = 1, color = \"#FF0000\", depth = 0.1)\r\n  {\r\n  \tlet size = from.distanceTo(to);\r\n    let cube = new Cube(new THREE.Vector3(depth, height, size), undefined, color );\r\n\r\n  \tlet center = to.clone().sub(from).multiplyScalar(0.5);\r\n\t\tlet forward_dir = center.clone().normalize();\r\n\t\tcenter.add(from);\r\n\r\n\t\tcube.position.copy(center);\r\n\r\n\r\n\t\tlet up = new THREE.Vector3(0,1,0);\r\n  \tlet forward = forward_dir.clone();\r\n  \tlet right = forward.clone().cross(up);\r\n\r\n  \t// cube.quaternion.setFromRotationMatrix(new THREE.Matrix4().makeBasis(right,up,forward));\r\n  \tcube.quaternion.setFromUnitVectors(new THREE.Vector3(0,0,-1), forward_dir);\r\n\r\n    SceneManager.current.add( cube );\r\n    return cube;\r\n  }\r\n  draw_plane(width, height, color)\r\n  {\r\n    var geometry = new THREE.PlaneGeometry( width, height );\r\n    let material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        _Color: {value : new THREE.Vector4(0,1,0, 0.2)},\r\n      },\r\n      vertexShader: basic_color_vert,\r\n      fragmentShader: basic_color_frag,\r\n      transparent: true,\r\n      depthWrite: false\r\n    });\r\n\r\n    var plane = new THREE.Mesh( geometry, material );\r\n    plane.renderOrder = -10000\r\n    SceneManager.current.add(plane);\r\n    return plane;\r\n  }\r\n  draw_empty_cube(pos, size,color)\r\n  {\r\n    size = size || 1;\r\n    color = color || 0xff0000;\r\n\r\n    let box = new THREE.Box3().setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(size, size, size));\r\n    let helper = new THREE.Box3Helper( box, color );\r\n    helper.position.copy(pos || new THREE.Vector3());\r\n    return helper;\r\n  }\r\n  draw_sphere(pos, size, color)\r\n  {\r\n    size = size || 1;\r\n    color = color || 0xff0000;\r\n    pos = pos || new THREE.Vector3();\r\n\r\n    var sphere = new Sphere(size, color );\r\n    sphere.position.copy(pos);\r\n    SceneManager.current.add( sphere );\r\n    return sphere;\r\n  }\r\n\r\n  draw_point_array(input_points, open = false, color = 0xff0000 )\r\n  {\r\n    let catmull = new THREE.CatmullRomCurve3(input_points, open)\r\n    catmull.updateArcLengths();\r\n    let points = catmull.getSpacedPoints(200);\r\n    let line_helper = this.draw_line(points, 0x00ff00);\r\n    // line_helper.position.y = 1.5;\r\n    return line_helper;\r\n  }\r\n  draw_sphere_helper(sphere, color)\r\n  {\r\n    color = color || 0xff0000;\r\n    var geometry = new THREE.SphereGeometry( sphere.radius, 32, 32 );\r\n    var material = new THREE.MeshBasicMaterial( {color: color} );\r\n    var sphere_mesh = new THREE.Mesh( geometry, material );\r\n    sphere_mesh.position.copy(sphere.center);\r\n    SceneManager.current.add(sphere_mesh);\r\n    return sphere_mesh;\r\n  }\r\n\r\n  draw_math_sphere(sphere)\r\n  {\r\n    var geometry = new THREE.SphereGeometry( sphere.radius, 32, 32 );\r\n    let material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        _Color: {value : new THREE.Vector4(1,0,0, 0.2)},\r\n      },\r\n      vertexShader: basic_color_vert,\r\n      fragmentShader: basic_color_frag,\r\n      transparent: true\r\n    });\r\n    // var material = new THREE.MeshBasicMaterial( {color: 0xff0000, transparent = true} );\r\n    var sphere1 = new THREE.Mesh( geometry, material );\r\n    sphere1.position.copy(sphere.center);\r\n    SceneManager.current.add(sphere1)\r\n  }\r\n\r\n  draw_bounding_box(bb)\r\n  {\r\n    var helper = new THREE.Box3Helper( bb, 0xffff00 );\r\n    SceneManager.current.add( helper );\r\n  }\r\n\r\n  draw_curve(curve, options)\r\n  {\r\n    let offset = new THREE.Vector3(0,0, 0);\r\n    if(options)\r\n      offset.y = options.offset || 0;\r\n\r\n    for(let i=0; i< curve.length-1; i++)\r\n    {\r\n      this.draw_line(curve[i].clone().add(offset), curve[i+1].clone().add(offset));\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst DEBUG = new Debug();\r\nmodule.exports = DEBUG;\r\n","import CameraManager from '/CameraManager';\r\nimport SceneManager from '/SceneManager';\r\nimport Screen from '/Screen';\r\nimport BaseRender from '/render_mode/BaseRender';\r\nimport Graphics from '/Graphics';\r\n\r\nexport default class NormalRender extends BaseRender\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\tGraphics.clear(undefined, CameraManager.current, true, true);\r\n\r\n\t\tGraphics.render(SceneManager.current, CameraManager.current);\r\n\t}\r\n\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex; //albedo\\nuniform sampler2D _NormalDepthRT;\\nuniform mat4 _InverseProjMatrix;\\nuniform vec2 _Resolution;\\nvarying vec2 vUv;\\nvarying vec4 vRay;\\n\\nvec3 decode_normal (vec4 enc)\\n{\\n    float scale = 1.7777;\\n    vec3 nn =\\n        enc.xyz*vec3(2.0*scale,2.0*scale,0.0) +\\n        vec3(-scale,-scale,1.0);\\n    float g = 2.0 / dot(nn.xyz,nn.xyz);\\n    vec3 n;\\n    n.xy = g*nn.xy;\\n    n.z = g-1.0;\\n    return n;\\n}\\n\\nfloat DecodeFloatRG( vec2 enc )\\n{\\n    vec2 kDecodeDot = vec2(1.0, 1.0/255.0);\\n    return dot( enc, kDecodeDot );\\n}\\n\\nvec3 DecodeNormal(vec2 uv)\\n{\\n  vec2 encoded_normal = texture2D(_NormalDepthRT, uv).zw;\\n  vec3 normalValue = normalize(decode_normal(vec4(encoded_normal, 0., 0.)));\\n  return normalize(normalValue);\\n}\\nvec3 DecodeViewPos(vec2 uv)\\n{\\n  vec2 depth = texture2D(_NormalDepthRT, uv).xy;\\n  vec4 inv_proj = _InverseProjMatrix * vec4(vUv * 2.0 - 1.0, 1.0, 1.0);\\n  return DecodeFloatRG(depth) * (vRay.xyz/vRay.w);\\n}\\n\\nvoid main()\\n{\\n\\n    vec3 fragPos   = DecodeViewPos(vUv);\\n    vec3 normal    = DecodeNormal(vUv);\\n\\n    vec3 dir_to_light = normalize(fragPos) * -1.0;\\n\\n    float diffuse = dot(normal, dir_to_light);\\n\\n    gl_FragColor = vec4(diffuse, diffuse, diffuse, 1.0);\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec4 vRay;\\n\\nuniform mat4 _InverseProjMatrix;\\n\\nvoid main()\\n{\\n\\tgl_Position = vec4(uv * 2.0 - 1.0, 1.0, 1.0);\\n\\tvRay = _InverseProjMatrix * vec4(uv * 2.0 - 1.0, 1.0, 1.0);\\n\\tvUv = uv;\\n}\\n\";","import BlitMaterial from '/materials/BlitMaterial';\r\nimport frag from '/shaders/deferred/deferred_compose.frag';\r\nimport vert from '/shaders/deferred/blit_copy.vert';\r\n\r\nexport default class DeferredRendererComposeMaterial extends BlitMaterial {\r\n    constructor() {\r\n        super(frag, vert);\r\n\r\n        this.uniforms._NormalDepthRT = { value: undefined }\r\n        this.uniforms._AlbedoRT = {value: undefined}\r\n        this.uniforms._InverseProjMatrix = {value: new THREE.Matrix4()};\r\n\r\n    }\r\n\r\n    set_normal_depth_rt(rt)\r\n    {\r\n        this.uniforms._NormalDepthRT.value = rt.texture;\r\n    }\r\n    set_albedo_rt(tex) {\r\n        this.uniforms._AlbedoRT.value = tex;\r\n    }\r\n\r\n    set_proj_matrix(mat4)\r\n    {\r\n        this.uniforms._InverseProjMatrix.value.getInverse(mat4);\r\n    }\r\n\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec4 vProjPos;\\nvarying vec3 vCenter;\\n\\nvoid main()\\n{\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\n    vProjPos = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\tvUv = uv;\\n    vCenter = vec3(modelMatrix[3][0],modelMatrix[3][1],modelMatrix[3][2]);\\n    vCenter = (viewMatrix * vec4(vCenter, 1.0)).xyz;\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _AlbedoTex; //albedo\\nuniform sampler2D _NormalDepthTex;\\nuniform mat4 _InverseProjMatrix;\\nvarying vec2 vUv;\\nvarying vec4 vProjPos;\\nvarying vec3 vCenter;\\n\\nuniform float _Intensity;\\n\\nvec3 decode_normal (vec4 enc)\\n{\\n    float scale = 1.7777;\\n    vec3 nn =\\n        enc.xyz*vec3(2.0*scale,2.0*scale,0.0) +\\n        vec3(-scale,-scale,1.0);\\n    float g = 2.0 / dot(nn.xyz,nn.xyz);\\n    vec3 n;\\n    n.xy = g*nn.xy;\\n    n.z = g-1.0;\\n    return n;\\n}\\n\\nfloat DecodeFloatRG( vec2 enc )\\n{\\n    vec2 kDecodeDot = vec2(1.0, 1.0/255.0);\\n    return dot( enc, kDecodeDot );\\n}\\n\\nvec3 DecodeNormal(vec2 uv)\\n{\\n  vec2 encoded_normal = texture2D(_NormalDepthTex, uv).zw;\\n  vec3 normalValue = normalize(decode_normal(vec4(encoded_normal, 0., 0.)));\\n  return normalize(normalValue);\\n}\\nvec3 DecodeViewPos(vec2 uv, vec4 ray)\\n{\\n  vec2 depth = texture2D(_NormalDepthTex, uv).xy;\\n  vec4 inv_proj = _InverseProjMatrix * vec4(uv * 2.0 - 1.0, 1.0, 1.0);\\n  return DecodeFloatRG(depth) * (ray.xyz/ray.w);\\n}\\n\\nfloat saturate(float x)\\n{\\n    return clamp(x, 0.0, 1.0);\\n}\\n\\nvoid main()\\n{\\n    vec2 uv = (vProjPos.xy/vProjPos.w)*0.5+vec2(0.5);\\n\\tvec4 ray = _InverseProjMatrix * vec4(uv * 2.0 - 1.0, 1.0, 1.0);\\n\\n    vec3 fragPos   = DecodeViewPos(uv, ray);\\n    vec3 normal    = DecodeNormal(uv);\\n    vec3 albedo    = texture2D(_AlbedoTex, uv).rgb;\\n\\n    vec3 dir_to_light = normalize(vCenter - fragPos);\\n    float diffuse = saturate(dot(normal, dir_to_light));\\n    float attenuation = _Intensity/pow(length(vCenter - fragPos), 2.0);\\n    gl_FragColor = vec4(albedo * diffuse * attenuation, 1.0);\\n}\\n\";","import vert from '/shaders/deferred/point_light.vert';\r\nimport frag from '/shaders/deferred/point_light.frag';\r\nimport BaseShaderMaterial from '/materials/BaseShaderMaterial';\r\n\r\nexport default class DeferredPointLightMaterial extends BaseShaderMaterial\r\n{\r\n    constructor(intensity = 1)\r\n    {\r\n        super(vert,frag,{\r\n            _Intensity: { value: intensity},\r\n            _AlbedoTex: { value: undefined },\r\n            _NormalDepthTex: { value: undefined },\r\n            _InverseProjMatrix: { value: new THREE.Matrix4() }\r\n        });\r\n\r\n        this.blending = THREE.AdditiveBlending;\r\n        this.depthWrite = false;\r\n        this.side = THREE.BackSide;\r\n\r\n    }\r\n    set_inverse_proj_matrix(mat4) {\r\n        this.uniforms._InverseProjMatrix.value.copy(mat4);\r\n    }\r\n\r\n    set_normal_depth_rt(rt) {\r\n        this.uniforms._NormalDepthTex.value = rt.texture;\r\n    }\r\n    set_albedo_rt(rt) {\r\n        this.uniforms._AlbedoTex.value = rt.texture;\r\n    }\r\n}\r\n","import CameraManager from '/CameraManager';\r\nimport SceneManager from '/SceneManager';\r\nimport Screen from '/Screen';\r\nimport BaseRender from '/render_mode/BaseRender';\r\nimport DeferredRendererComposeMaterial from '/materials/DeferredRendererComposeMaterial';\r\nimport Graphics from '/Graphics';\r\n\r\nimport DeferredPointLightMaterial from '/materials/deferred/DeferredPointLightMaterial'\r\nexport default class DeferredRender extends BaseRender {\r\n    constructor() {\r\n        super();\r\n\r\n\r\n\r\n        this.compose_mat = new DeferredRendererComposeMaterial();\r\n        this.main_rt = new THREE.WebGLRenderTarget(Screen.width, Screen.height, {\r\n            // magFilter: THREE.NearestFilter,\r\n            // minFilter: THREE.NearestFilter\r\n        });\r\n\r\n        this.scene_lights = new THREE.Scene();\r\n\r\n        let light_intensity = 1;\r\n        let light_brightest_component = 1;\r\n        let radius_needed_for_intensity = Math.sqrt(4 * light_intensity * (light_brightest_component * (256.0/5.0)))/(2*light_intensity);\r\n        let sphere = new THREE.Mesh(new THREE.SphereBufferGeometry(radius_needed_for_intensity), new DeferredPointLightMaterial(light_intensity));\r\n        // sphere.position.y = 2;\r\n        // this.scene_lights.add(sphere);\r\n\r\n        // let sphere2 = sphere.clone();\r\n        // sphere2.position.x = 2;\r\n        // this.scene_lights.add(sphere2);\r\n\r\n        // let sphere3 = sphere.clone();\r\n        // sphere3.position.x = -2;\r\n        // this.scene_lights.add(sphere3);\r\n\r\n        // let sphere4 = sphere.clone();\r\n        // sphere4.position.z = -2;\r\n        // this.scene_lights.add(sphere4);\r\n\r\n        // let sphere5 = sphere.clone();\r\n        // sphere5.position.z = 2;\r\n        // this.scene_lights.add(sphere5);\r\n\r\n        let light_row = 2;\r\n        let light_col = 2;\r\n        for (let x = 0; x < light_row; x++)\r\n        {\r\n            for (let y = 0; y < light_col; y++)\r\n            {\r\n                let clone = sphere.clone();\r\n                clone.position.set(x*2 - light_row / 2, 1, y*2 - light_col/2);\r\n                this.scene_lights.add(clone);\r\n            }\r\n        }\r\n\r\n        this.camera_inverse_proj_mat = new THREE.Matrix4();\r\n    }\r\n\r\n    on_enter()\r\n    {\r\n        Graphics.generateDepthNormalTexture = true;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        this.__check_RT_size();\r\n\r\n        Graphics.clear(this.main_rt, CameraManager.current, true, false);\r\n\r\n        Graphics.render(SceneManager.current, CameraManager.current, this.main_rt);\r\n\r\n        // this.compose_mat.set_normal_depth_rt(Graphics.depth_normals_RT);\r\n        // this.compose_mat.set_proj_matrix(CameraManager.current.projectionMatrix);\r\n\r\n        // Graphics.blit(this.main_rt, undefined, this.compose_mat);\r\n\r\n        this.camera_inverse_proj_mat.getInverse(CameraManager.current.projectionMatrix);\r\n\r\n        let inverse_proj = this.camera_inverse_proj_mat;\r\n        let albedo_rt = this.main_rt;\r\n        let depth_normals_rt = Graphics.depth_normals_RT;\r\n        this.scene_lights.traverse((child)=>{\r\n            if(child.material)\r\n            {\r\n                child.material.set_inverse_proj_matrix(inverse_proj);\r\n                child.material.set_normal_depth_rt(depth_normals_rt);\r\n                child.material.set_albedo_rt(albedo_rt);\r\n            }\r\n\r\n        })\r\n        // Graphics.clear(undefined, CameraManager.current, true, true);\r\n        // Graphics.render(SceneManager.current, CameraManager.current);\r\n        Graphics.clear(undefined, CameraManager.current, true, true);\r\n        Graphics.render(this.scene_lights, CameraManager.current);\r\n\r\n    }\r\n\r\n\r\n    __check_RT_size() {\r\n        if (this.main_rt.width !== Screen.width || this.main_rt.height !== Screen.height) {\r\n            this.main_rt.setSize(Screen.width, Screen.height);\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nvarying vec3 v_normal;\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(v_normal * 0.5 + vec3(0.5), 1.0);\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nvarying vec3 v_normal;\\nvoid main()\\n{\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    v_normal = (modelMatrix * vec4(normal, 0.0)).xyz;\\n}\\n\";","import frag from '/shaders/normal/normal.frag';\r\nimport vert from '/shaders/normal/normal.vert';\r\n\r\nexport default class NormalMaterial extends THREE.ShaderMaterial {\r\n    constructor() {\r\n        super({\r\n            uniforms: {\r\n            },\r\n            vertexShader: vert,\r\n            fragmentShader: frag\r\n        });\r\n\r\n    }\r\n\r\n}\r\n","import CameraManager from '/CameraManager';\r\nimport SceneManager from '/SceneManager';\r\nimport Screen from '/Screen';\r\nimport BaseRender from '/render_mode/BaseRender';\r\nimport Graphics from '/Graphics';\r\nimport NormalMaterial from '/materials/NormalMaterial';\r\nexport default class DebugNormalsRender extends BaseRender {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n    render() {\r\n        Graphics.clear(undefined, CameraManager.current, true, true);\r\n\r\n        Graphics.render(SceneManager.current, CameraManager.current, undefined, new NormalMaterial());\r\n    }\r\n\r\n}\r\n","export default class ObjectUtilities\r\n{\r\n\tconstructor(){}\r\n\r\n  // Changes XML to JSON\r\n  static xml_to_json(xml) {\r\n\r\n    // Create the return object\r\n    var obj = {};\r\n\r\n    if (xml.nodeType == 1) { // element\r\n      // do attributes\r\n      if (xml.attributes.length > 0) {\r\n        obj[\"@attributes\"] = {};\r\n        for (var j = 0; j < xml.attributes.length; j++) {\r\n          var attribute = xml.attributes.item(j);\r\n          obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n        }\r\n      }\r\n    } else if (xml.nodeType == 3) { // text\r\n      obj = xml.nodeValue;\r\n    }\r\n\r\n    // do children\r\n    if (xml.hasChildNodes()) {\r\n      for (var i = 0; i < xml.childNodes.length; i++) {\r\n        var item = xml.childNodes.item(i);\r\n        var nodeName = item.nodeName;\r\n        if (typeof (obj[nodeName]) == \"undefined\") {\r\n          obj[nodeName] = this.xml_to_json(item);\r\n        } else {\r\n          if (typeof (obj[nodeName].push) == \"undefined\") {\r\n            var old = obj[nodeName];\r\n            obj[nodeName] = [];\r\n            obj[nodeName].push(old);\r\n          }\r\n          obj[nodeName].push(this.xml_to_json(item));\r\n        }\r\n      }\r\n    }\r\n    return obj;\r\n  };\r\n\r\n}\r\n\r\n","export default class PerspectiveCamera extends THREE.PerspectiveCamera\r\n{\r\n\tconstructor(fov, aspect, near, far)\r\n\t{\r\n\t\tsuper(fov, aspect, near, far);\r\n\r\n\t\tthis.clear_color = new THREE.Color(\"#000000\");\r\n\t\tthis.clear_alpha = 1;\r\n\t}\r\n}","import Input from '/Input';\r\nimport CameraManager from '/CameraManager';\r\nimport Graphics from '/Graphics';\r\nimport Screen from '/Screen';\r\n\r\n\r\n\r\nclass UI\r\n{\r\n\r\n    constructor()\r\n    {\r\n        this.ui_elements = [];\r\n        this._tmp_normalized_pos = new THREE.Vector2();\r\n        this.ss_scene = new THREE.Scene();\r\n        this.ss_scene.autoUpdate = false;\r\n        this.ss_scene.frustumCulled = false;\r\n\r\n        this.ws_scene = new THREE.Scene();\r\n        this.ws_scene.autoUpdate = false;\r\n        this.ws_scene.frustumCulled = false;\r\n\r\n        this.ss_camera = new THREE.OrthographicCamera(-1, 1, 1,-1, -100, 100);\r\n    }\r\n\r\n    delete_element(elem)\r\n    {\r\n        let index = this.ui_elements.indexOf(elem);\r\n        if (index > -1) {\r\n            this.ui_elements.splice(index, 1);\r\n        }\r\n\r\n        this.ss_scene.remove(elem);\r\n        this.ws_scene.remove(elem);\r\n\r\n        elem.dispose();\r\n    }\r\n\r\n    add_screen_space_element(elem)\r\n    {\r\n        this.ui_elements.push(elem);\r\n        this.ss_scene.add(elem);\r\n\r\n        elem.set_screen_space_coordinate_system()\r\n    }\r\n    add_world_space_element(elem)\r\n    {\r\n        this.ui_elements.push(elem);\r\n        this.ws_scene.add(elem);\r\n\r\n        elem.set_world_space_coordinate_system();\r\n    }\r\n\r\n\r\n    update()\r\n    {\r\n\r\n        // this.ss_camera.left     = -Screen.width / 2;\r\n        // this.ss_camera.right    = Screen.width / 2;\r\n        // this.ss_camera.top      = Screen.top / 2;\r\n        // this.ss_camera.right    = -Screen.bottom / 2;\r\n        this.ss_camera.updateProjectionMatrix();\r\n\r\n        this._tmp_normalized_pos.copy(Input.normalized_mouse_pos);\r\n        for(let i=0; i< this.ui_elements.length; i++)\r\n        {\r\n            this.ui_elements[i].update_state(this._tmp_normalized_pos)\r\n        }\r\n    }\r\n\r\n    render(renderer)\r\n    {\r\n        // renderer.render_ui(this.scene);\r\n        if(this.ss_scene.children.length > 0)\r\n            Graphics.render(this.ss_scene, this.ss_camera);\r\n        if (this.ws_scene.children.length > 0)\r\n            Graphics.render(this.ws_scene, CameraManager.current);\r\n    }\r\n\r\n    clear()\r\n    {\r\n        this.current_clicked_element = undefined\r\n    }\r\n}\r\n\r\nconst ui = new UI();\r\nmodule.exports = ui;\r\n","export default class GeometryBatch\r\n{\r\n\tconstructor(geometry, batch_width)\r\n\t{\r\n\t\tthis.geometry = geometry;\r\n\r\n\t\tthis.material = undefined;\r\n\t\tthis.uniforms = {};\r\n\t\tthis.batch_width = batch_width;\r\n\r\n\t\tthis.data_textures = [];\r\n\r\n\t\tthis.object_names = undefined;\r\n\r\n\r\n\t\tthis.zero_offset = new THREE.Vector2();\r\n\t\tthis.write_offset = new THREE.Vector2();\r\n\r\n\t\tthis.uniform_dirty_count = 0;\r\n\r\n\t\tthis.tmp_uploaded_data_count = 0;\r\n\r\n\t}\r\n\r\n\tinit(object_names, vert_shader, frag_shader)\r\n\t{\r\n\t\tthis.material = new THREE.ShaderMaterial({\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: vert_shader,\r\n\t\t\tfragmentShader: frag_shader\r\n\t\t});\r\n\t\tthis.object_names = object_names;\r\n\r\n\t}\r\n\r\n\tadd_global_uniform(name, data)\r\n\t{\r\n\t\tthis.uniforms[name] = {value: data};\r\n\t\tthis.material.needsUpdate = true;\r\n\t}\r\n\tset_global_uniform(name, data)\r\n\t{\r\n\t\tthis.uniforms[name].value = data;\r\n\t}\r\n\r\n\tadd_object_uniform_v3(uniform_name, default_value_v3)\r\n\t{\r\n\t\tlet src_tex \t\t= this.__create_rgb_texture(this.batch_width);\r\n\t\tlet dst_tex \t\t= this.__create_rgb_texture(this.batch_width);\r\n\t\tlet one_pixel_tex = this.__create_rgb_texture(1);\r\n\r\n\r\n\t\tlet new_data_tex = this.__add_data_texture(uniform_name, src_tex, dst_tex, one_pixel_tex);\r\n\r\n\t\tif(default_value_v3)\r\n\t\t\tthis.__flood_data_texture_rgb(new_data_tex, default_value_v3);\r\n\t\r\n\t}\r\n\r\n\tadd_object_uniform_v4(uniform_name, default_value_v4)\r\n\t{\r\n\t\tlet src_tex \t\t= this.__create_rgba_texture(this.batch_width);\r\n\t\tlet dst_tex \t\t= this.__create_rgba_texture(this.batch_width);\r\n\t\tlet one_pixel_tex = this.__create_rgba_texture(1);\r\n\r\n\r\n\t\tlet new_data_tex = this.__add_data_texture(uniform_name, src_tex, dst_tex, one_pixel_tex);\r\n\r\n\t\tif(default_value_v4)\r\n\t\t\tthis.__flood_data_texture_rgba(new_data_tex, default_value_v4);\r\n\t\r\n\t}\r\n\r\n\tadd_object_uniform_v4_float(uniform_name, default_value_v4)\r\n\t{\r\n\t\tlet src_tex \t\t= this.__create_rgba_float_texture(this.batch_width);\r\n\t\tlet dst_tex \t\t= this.__create_rgba_float_texture(this.batch_width);\r\n\t\tlet one_pixel_tex = this.__create_rgba_float_texture(1);\r\n\r\n\r\n\t\tlet new_data_tex = this.__add_data_texture(uniform_name, src_tex, dst_tex, one_pixel_tex);\r\n\r\n\t\tif(default_value_v4)\r\n\t\t\tthis.__flood_data_texture_rgba(new_data_tex, default_value_v4);\r\n\t\r\n\t}\r\n\r\n\tset_object_uniform_v3(object_name, uniform_name, vector3, use_r, use_g, use_b)\r\n\t{\r\n\t\tlet obj_index = this.__get_object_index(object_name);\r\n\t\tlet data_texture = this.__get_data_texture(uniform_name);\r\n\r\n\t\tthis.__set_pixel_rgb(data_texture.src, obj_index, vector3, use_r, use_g, use_b);\r\n\t\tthis.__set_pixel_rgb(data_texture.one_pixel, 0\t, vector3, use_r, use_g, use_b);\r\n\r\n\t\tdata_texture.last_accessed_index = obj_index;\r\n\r\n\t\tdata_texture.dirty_count++; \r\n\t}\r\n\r\n\tset_object_uniform_v4(object_name, uniform_name, vector4, use_r, use_g, use_b, use_a)\r\n\t{\r\n\t\tlet obj_index = this.__get_object_index(object_name);\r\n\t\tlet data_texture = this.__get_data_texture(uniform_name);\r\n\r\n\t\tthis.__set_pixel_rgba(data_texture.src, obj_index, vector4, use_r, use_g, use_b, use_a);\r\n\t\tthis.__set_pixel_rgba(data_texture.one_pixel, 0, vector4, use_r, use_g, use_b, use_a);\r\n\t\tdata_texture.last_accessed_index = obj_index;\r\n\r\n\t\tdata_texture.dirty_count++; \r\n\t}\r\n\r\n\r\n\tupload_texture_data(renderer, upload_budget)\r\n\t{\r\n\t\tfor(let i=0; i< this.data_textures.length; i++)\r\n\t\t{\r\n\t\t\tif(upload_budget > 0 && this.data_textures[i].dirty_count > 0)\r\n\t\t\t{\r\n\t\t\t\tif(this.data_textures[i].dirty_count === 1)\r\n\t\t\t\t\tthis.__partial_texture_data_upload(renderer, this.data_textures[i]);\r\n\t\t\t\tif(this.data_textures[i].dirty_count > 1)\r\n\t\t\t\t\tthis.__full_texture_data_upload(renderer, this.data_textures[i]);\r\n\r\n\t\t\t\tthis.data_textures[i].dirty_count = 0;\r\n\r\n\t\t\t\tupload_budget--;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tget_uniform_dirty_count()\r\n\t{\r\n\t\tthis.uniform_dirty_count = 0;\r\n\t\tfor(let i=0; i< this.data_textures.length; i++)\r\n\t\t{\r\n\t\t\tif(this.data_textures[i].dirty_count > 0)\r\n\t\t\t\tthis.uniform_dirty_count++;\r\n\t\t}\r\n\t\treturn this.uniform_dirty_count;\r\n\t}\r\n\r\n\r\n\t__full_texture_data_upload(renderer, texture_data)\r\n\t{\r\n\t\t// console.log(\"full texture update of\"+ texture_data.name);\r\n\t\ttexture_data.dst.needsUpdate = true;\r\n\t\trenderer.copyTextureToTexture(\r\n\t\t\t\t\tthis.zero_offset, \r\n\t\t\t\t\ttexture_data.src, \r\n\t\t\t\t\ttexture_data.dst\r\n\t\t\t);\r\n\t}\r\n\t__partial_texture_data_upload(renderer, texture_data)\r\n\t{\r\n\t\t// console.log(\"partial texture update\"+ texture_data.name);\r\n\t\tlet index = texture_data.last_accessed_index;\r\n\t\tif(index === -1)\r\n\t\t\treturn;\r\n\t\t\r\n  \tthis.write_offset.y = Math.floor(index/this.batch_width);\r\n  \tthis.write_offset.x = index - this.batch_width*this.write_offset.y;\r\n\t\trenderer.copyTextureToTexture(\r\n\t\t\tthis.write_offset, \r\n\t\t\ttexture_data.one_pixel, \r\n\t\t\ttexture_data.dst\r\n\t\t);\r\n\t}\r\n\r\n\tget_mesh()\r\n\t{\r\n\t\treturn new THREE.Mesh(this.geometry, this.material);\r\n\t}\r\n\r\n\t__set_pixel_rgb(data_texture, index, vector3, use_r, use_g, use_b)\r\n\t{\r\n\t\tif(use_r)\r\n\t\t\tdata_texture.image.data[index*3+0] = vector3.x;\t    \r\n\t\tif(use_g)\r\n\t\t\tdata_texture.image.data[index*3+1] = vector3.y;\t    \r\n\t\tif(use_b)\r\n\t\t\tdata_texture.image.data[index*3+2] = vector3.z;\t\r\n\t}\r\n\t__set_pixel_rgba(data_texture, index, vector4, use_r, use_g, use_b, use_a)\r\n\t{\r\n\t\tif(use_r)\r\n\t\t\tdata_texture.image.data[index*4+0] = vector4.x;\t    \r\n\t\tif(use_g)\r\n\t\t\tdata_texture.image.data[index*4+1] = vector4.y;\t    \r\n\t\tif(use_b)\r\n\t\t\tdata_texture.image.data[index*4+2] = vector4.z;\t\r\n\t\tif(use_a)\r\n\t\t\tdata_texture.image.data[index*4+3] = vector4.w;\r\n\t}\r\n\r\n\t__flood_data_texture_rgb(data_texture, v3)\r\n\t{\r\n\t\tfor(let i=0; i< this.batch_width * this.batch_width; i++)\r\n\t\t{\r\n\t\t\tthis.__set_pixel_rgb(data_texture.src, i, v3, true, true, true);\r\n\t\t\tdata_texture.dirty_count++;\r\n\t\t}\r\n\t}\r\n\r\n\t__flood_data_texture_rgba(data_texture, v4)\r\n\t{\r\n\t\tfor(let i=0; i< this.batch_width * this.batch_width; i++)\r\n\t\t{\r\n\t\t\tthis.__set_pixel_rgba(data_texture.src, i, v4, true, true, true, true);\r\n\t\t\tdata_texture.dirty_count++;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t__create_rgb_texture(width)\r\n\t{\r\n\t\tlet data = new Uint8Array( 3 * width * width );\r\n\t\treturn new THREE.DataTexture( data, width, width, THREE.RGBFormat );\r\n\t}\r\n\t__create_rgba_texture(width)\r\n\t{\r\n\t\tlet data = new Uint8Array( 4 * width * width );\r\n\t\treturn new THREE.DataTexture( data, width, width, THREE.RGBAFormat );\r\n\t}\r\n\r\n\t__create_rgba_float_texture(width)\r\n\t{\r\n\t\tlet data = new Float32Array( 4 * width * width );\r\n\t\treturn new THREE.DataTexture( data, width, width, THREE.RGBA, THREE.FloatType );\r\n\t}\r\n\r\n\t__get_data_texture(uniform_name)\r\n\t{\r\n\t\tfor(let i=0; i< this.data_textures.length; i++)\r\n\t\t{\r\n\t\t\tif(this.data_textures[i].name === uniform_name)\r\n\t\t\t\treturn this.data_textures[i];\r\n\t\t}\r\n\t\tconosle.error(\"Data texture \"+uniform_name+\" does not exist\");\r\n\t\treturn undefined;\r\n\t}\r\n\t__get_object_index(name)\r\n\t{\r\n\t\tfor(let i=0; i< this.object_names.length; i++)\r\n\t\t{\r\n\t\t\tif(this.object_names[i] === name)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\tconsole.error(\"the name \"+name+\" is not contained in this batch\");\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t__add_data_texture(uniform_name, src_texture, dst_texture, one_pixel_text)\r\n\t{\r\n\t\tdst_texture.needsUpdate = true;\r\n\r\n\t\tthis.data_textures.push({\r\n\t\t\tname: uniform_name,\r\n\t\t\tsrc: src_texture, \r\n\t\t\tdst: dst_texture,\r\n\t\t\tone_pixel: one_pixel_text,\r\n\t\t\tlast_accessed_index: -1,\r\n\t\t\tdirty_count: 0\r\n\t\t});\r\n\r\n\t\tthis.uniforms[uniform_name] = {value: dst_texture};\r\n\t\treturn this.data_textures[this.data_textures.length-1];\r\n\t}\r\n\r\n\tdispose()\r\n\t{\r\n\t\tfor(let i=0; i< this.data_textures.length; i++)\r\n\t\t{\r\n\t\t\tthis.data_textures[i].src.dispose();\r\n\t\t\tthis.data_textures[i].dst.dispose();\r\n\t\t\tthis.data_textures[i].one_pixel.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n}","import GeometryBatch from '/static_batcher/GeometryBatch'\r\n\r\nclass GeometryBatcher\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis.batches = [];\r\n\t}\r\n\r\n\tbatch(buffer_geometries)\r\n\t{\r\n\t  let attr_accessor_uvs = [];\r\n\t  let texture_width = THREE.Math.ceilPowerOfTwo(Math.sqrt(buffer_geometries.length));\r\n\t  // console.log(\"Store count: \" + buffer_geometries.length + \", Texture size: \" +texture_width);\r\n\r\n\t  this.__init_uv_array(attr_accessor_uvs, texture_width);\r\n\r\n\r\n\t  let uv_index = 0;\r\n\r\n\t  for(let i=0; i< buffer_geometries.length; i++)\r\n\t  {\r\n\t    let vertex_count = buffer_geometries[i].getAttribute('position').count;\r\n\t    let y = Math.floor(i/texture_width);\r\n\t    let x = i - texture_width*y;\r\n\t    for(let count = 0; count < vertex_count; count++)\r\n\t    {\r\n\r\n\t      attr_accessor_uvs[uv_index] = (x/texture_width) + 0.5/texture_width;\r\n\t      attr_accessor_uvs[uv_index+1] = (y/texture_width) + 0.5/texture_width;\r\n\t      uv_index+=2;\r\n\t    }\r\n\t  }\r\n\r\n\t  let buffer_attribute = new THREE.BufferAttribute( new Float32Array( attr_accessor_uvs ), 2);\r\n\t  let buffer_geometry = THREE.BufferGeometryUtils.mergeBufferGeometries(buffer_geometries);\r\n\t  buffer_geometry.setAttribute( 'attr_accessor_uv', buffer_attribute);\r\n\r\n\t  this.batches.push(new GeometryBatch(buffer_geometry, texture_width));\r\n\t  return this.batches[this.batches.length-1];\r\n\r\n\t}\r\n\r\n\tupload_texture_data(renderer)\r\n\t{\r\n\t\tfor(let i=0; i< this.batches.length; i++)\r\n\t\t{\r\n\t\t\tthis.batches[i].upload_texture_data(renderer, 1);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t__init_uv_array(uvs, texture_width)\r\n\t{\r\n\t\tfor(let i=0; i< texture_width*texture_width*2; i++)\r\n\t  {\r\n\t    uvs.push(0);\r\n\t  }\r\n\t}\r\n}\r\n\r\n\r\nconst geometry_batcher = new GeometryBatcher();\r\nmodule.exports = geometry_batcher;\r\n","import Time from '/Time';\r\nimport Input from '/Input';\r\nimport UI from '/UI';\r\nimport Debug from '/Debug';\r\nimport GeometryBatcher from '/static_batcher/GeometryBatcher';\r\nimport BaseApplication from '/BaseApplication';\r\n\r\nexport default class RenderLoop {\r\n\r\n  constructor(target_application, renderer) {\r\n\r\n    target_application = target_application || new BaseApplication();\r\n\r\n    this._frame_id = -1;\r\n\r\n    this.target_application = target_application;\r\n    this.renderer = renderer;\r\n\r\n    this.is_running = true;\r\n    this.frames_passed = 0;\r\n\r\n  }\r\n\r\n  update() {\r\n\r\n    if(!this.is_running)\r\n      return;\r\n\r\n    Time.__update();\r\n    Debug.clear();\r\n\r\n    //###### START CYCLE ######\r\n    if (this.frames_passed === 5) {\r\n      this.target_application.post_start();\r\n    }\r\n\r\n    this.target_application.update();\r\n\r\n    this.target_application.on_pre_render();\r\n\r\n    this.renderer.update();     // render scene\r\n    UI.update();                // update after new camera matrix has been calculated\r\n    UI.render(this.renderer);   // render ui layer on top\r\n\r\n    this.target_application.on_post_render();\r\n\r\n    if(Debug.rt_debug)\r\n      this.renderer.blit(Debug.rt_debug);\r\n    //###### END  CYCLE #######\r\n    Input.clear();\r\n    UI.clear();\r\n\r\n    //   GeometryBatcher.upload_texture_data(this.renderer);\r\n\r\n    this._frame_id = requestAnimationFrame(this.update.bind(this));\r\n    this.frames_passed++;\r\n  }\r\n\r\n  start() {\r\n    this.target_application.start();\r\n    this.update();\r\n    this.is_running = true;\r\n\r\n\r\n  }\r\n\r\n  stop() {\r\n    this.is_running = false;\r\n    this.target_application.end();\r\n\r\n    cancelAnimationFrame(this._frame_id);\r\n  }\r\n}\r\n","export default class AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tthis.progress = 0;\r\n\t\tthis.resource_id = resource_id;\r\n\t\tthis.url = url;\r\n\r\n\t\tthis.has_finished = false;\r\n\t\tthis.has_error = false;\r\n\t\tthis.error_message = \"none\";\r\n\t}\r\n\r\n\t__update_progress(value)\r\n\t{\r\n\t\tthis.progress = value;\r\n\t}\r\n\t__loading_ended()\r\n\t{\r\n\t\tthis.has_finished = true;\r\n\t}\r\n\t__set_error(message)\r\n\t{\r\n\t\tthis.has_error = true;\r\n\t\tthis.error_message = message;\r\n\t}\r\n\r\n\tprint_error()\r\n\t{\r\n\t\tconsole.error(\"Error while loading \"+this.resource_id+\"\\n\\t path: \"+this.url+\"\\n\\t\\t\"+this.error_message);\r\n\t}\r\n\r\n\tload(resource_container) {\r\n\r\n\t}\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class TextureLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.TextureLoader();\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.url, (image)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, image);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\tundefined,\r\n\t\t\t() => {\r\n\t\t\t\tctx.__set_error(\"Image could not  be loaded. Maybe wrong name or path, I don't know\" + '¯\\\\_(ツ)_/¯');\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class GLTFLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.GLTFLoader();\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.url, (gltf)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, gltf);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\t(xhr) =>{\r\n\t\t\t\tctx.__update_progress(xhr.loaded/xhr.total);\r\n\t\t\t},\r\n\t\t\t(msg) => {\r\n\t\t\t\tctx.__set_error(msg +\"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class DAELoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.ColladaLoader();\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.url, (gltf)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, gltf);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\t(xhr) =>{\r\n\t\t\t\tctx.__update_progress(xhr.loaded/xhr.total);\r\n\t\t\t},\r\n\t\t\t(msg) => {\r\n\t\t\t\tctx.__set_error(msg +\"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class TextLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.FileLoader();\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.url, (gltf)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, gltf);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\t(xhr) =>{\r\n\t\t\t\tctx.__update_progress(xhr.loaded/xhr.total);\r\n\t\t\t},\r\n\t\t\t(msg) => {\r\n\t\t\t\tctx.__set_error(msg);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class CubemapLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.CubeTextureLoader();\r\n\t\tthis.loader.setPath(url + \"/\");\r\n\t\tthis.urls = [\r\n\t\t\t'px.png',\r\n\t\t\t'nx.png',\r\n\t\t\t'py.png',\r\n\t\t\t'ny.png',\r\n\t\t\t'pz.png',\r\n\t\t\t'nz.png'\r\n\t\t]\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(\tthis.urls, (image)=> {\r\n\t\t\tresource_container.set_resource(ctx.resource_id, image);\r\n\t\t\t\tctx.__update_progress(1);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t},\r\n\t\t\tundefined,\r\n\t\t\t(error) => {\r\n\t\t\t\tctx.__set_error(\"Image could not  be loaded. Maybe wrong name or path, I don't know\" + '¯\\\\_(ツ)_/¯', error);\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class AudioLoader extends AbstractLoader\r\n{\r\n\tconstructor(resource_id, url, listener, loop, volume)\r\n\t{\r\n\t\tsuper(resource_id, url);\r\n\t\tthis.loader = new THREE.AudioLoader();\r\n\t\tthis.loop = loop;\r\n\t\tthis.listener = listener;\r\n\t\tthis.voluem = volume;\r\n\t}\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tlet ctx = this;\r\n\t\tlet sound = new THREE.Audio(this.listener);\r\n\r\n\t\tthis.loader.load(this.url, (audio)=> {\r\n\t\t\tsound.setBuffer(audio);\r\n\t\t\tsound.setLoop(this.loop);\r\n\t\t\tsound.setVolume(this.voluem);\r\n\r\n\t\t\tresource_container.set_resource(ctx.resource_id, sound);\r\n\r\n\t\t\tif (!resource_container.get_resource('audio_listener')) {\r\n\t\t\t\tresource_container.set_resource('audio_listener', this.listener);\r\n\t\t\t}\r\n\r\n\t\t\tctx.__update_progress(1);\r\n\t\t\tctx.__loading_ended()\r\n\t\t},\r\n\t\tundefined,\r\n\t\t(error) => {\r\n\t\t\tctx.__set_error(\"Audio could not be loaded. Maybe wrong name or path, I don't know\" + '¯\\\\_(ツ)_/¯', error);\r\n\t\t\tctx.__loading_ended()\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class JSONLoader extends AbstractLoader {\r\n\tconstructor(resource_id, url) {\r\n\t\tsuper(resource_id, url);\r\n\r\n\t\tthis.loader = new THREE.FileLoader();\r\n\r\n\t}\r\n\r\n\tload(resource_container) {\r\n\r\n\t\tlet ctx = this;\r\n\r\n\t\tthis.loader.load(this.url, (data) => {\r\n\r\n\t\t\tresource_container.set_resource(ctx.resource_id, JSON.parse(data));\r\n\t\t\tctx.__update_progress(1);\r\n\t\t\tctx.__loading_ended()\r\n\t\t},\r\n\t\t\t(xhr) => {\r\n\t\t\t\tctx.__update_progress(xhr.loaded / xhr.total);\r\n\t\t\t},\r\n\t\t\t(msg) => {\r\n\t\t\t\tctx.__set_error(msg + \"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\r\n\t\t\t\tctx.__loading_ended()\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class OBJLoader extends AbstractLoader {\r\n    constructor(resource_id, url) {\r\n        super(resource_id, url);\r\n        this.loader = new THREE.OBJLoader();\r\n    }\r\n\r\n    load(resource_container) {\r\n        let ctx = this;\r\n\r\n        this.loader.load(this.url, (gltf) => {\r\n            resource_container.set_resource(ctx.resource_id, gltf);\r\n            ctx.__update_progress(1);\r\n            ctx.__loading_ended()\r\n        },\r\n            (xhr) => {\r\n                ctx.__update_progress(xhr.loaded / xhr.total);\r\n            },\r\n            (msg) => {\r\n                ctx.__set_error(msg + \"\\n\\n\\t If the error says something about unexpected token < in JSON then probably the problem is related to the file not being found. Check the name and path of the resource\");\r\n                ctx.__loading_ended()\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","import AbstractLoader from './AbstractLoader';\r\n\r\nexport default class RGBETextureLoader extends AbstractLoader\r\n{\r\n  constructor(resource_id, url)\r\n  {\r\n    super(resource_id, url);\r\n    this.loader = new THREE.RGBELoader();\r\n    this.loader.setDataType( THREE.UnsignedByteType );\r\n\r\n  }\r\n\r\n  load(resource_container)\r\n  {\r\n    let ctx = this;\r\n\r\n    this.loader.load( this.url, (hdr)=> {\r\n        resource_container.set_resource(ctx.resource_id, hdr);\r\n        ctx.__update_progress(1);\r\n        ctx.__loading_ended()\r\n      },\r\n      (xhr) =>{\r\n        ctx.__update_progress(xhr.loaded/xhr.total);\r\n      },\r\n      (msg) => {\r\n        ctx.__set_error(msg +\"\\n\\n\\t If the error says something about unexpected token < in JSON then the probably the problem is related to the file not being found. Check the name and path of the resource\");\r\n        ctx.__loading_ended()\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import AbstractLoader from '/resource_loader/AbstractLoader';\r\n\r\nexport default class PointArrayLoader extends AbstractLoader {\r\n    constructor(resource_id, url) {\r\n        super(resource_id, url);\r\n        this.loader = new THREE.FileLoader();\r\n    }\r\n\r\n    load(resource_container) {\r\n        let ctx = this;\r\n\r\n        this.loader.load(this.url, (text) => {\r\n            resource_container.set_resource(ctx.resource_id, ctx.parse_path(text));\r\n            ctx.__update_progress(1);\r\n            ctx.__loading_ended()\r\n        },\r\n            (xhr) => {\r\n                ctx.__update_progress(xhr.loaded / xhr.total);\r\n            },\r\n            (msg) => {\r\n                ctx.__set_error(msg);\r\n                ctx.__loading_ended()\r\n            }\r\n        );\r\n    }\r\n\r\n    parse_path(raw_data) {\r\n        let string_array = raw_data.split('\\n');\r\n\r\n        if (string_array[string_array.length - 1] === \"\") {\r\n            string_array.pop();\r\n        }\r\n\r\n        let positions = [];\r\n\r\n        for (let i = 0; i < string_array.length; i += 3) {\r\n            let x = parseFloat(string_array[i + 0]);\r\n            let y = parseFloat(string_array[i + 1]);\r\n            let z = parseFloat(string_array[i + 2]);\r\n            positions.push(new THREE.Vector3(x, y, z));\r\n        }\r\n        return positions;\r\n        // let curve = new THREE.CatmullRomCurve3(positions);\r\n        // return curve.getPoints(100);\r\n    }\r\n\r\n}\r\n","import EventManager from '/EventManager';\r\n\r\nclass ResourceContainer\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis.resources = {};\r\n\t}\r\n\r\n\tset_resource(name, resource)\r\n\t{\r\n\t\tthis.resources[name] = resource;\r\n\t\tEventManager.fire_resource_loaded({name: name, value: resource});\r\n\t}\r\n\r\n\tget_resource(name)\r\n\t{\r\n\t\treturn this.resources[name];\r\n\t}\r\n\tget(name)\r\n\t{\r\n\t\treturn this.resources[name];\r\n\t}\r\n\r\n}\r\n\r\nconst resource_container = new ResourceContainer();\r\nmodule.exports = resource_container;\r\n","import TextureLoader from '/resource_loader/TextureLoader';\r\nimport GLTFLoader from '/resource_loader/GLTFLoader';\r\nimport DAELoader from '/resource_loader/DAELoader';\r\nimport TextLoader from '/resource_loader/TextLoader';\r\nimport CubemapLoader from '/resource_loader/CubemapLoader';\r\nimport AudioLoader from '/resource_loader/AudioLoader';\r\nimport JSONLoader from '/resource_loader/JSONLoader';\r\nimport OBJLoader from '/resource_loader/OBJLoader';\r\nimport RGBETextureLoader from '/resource_loader/RGBETextureLoader';\r\nimport PointArrayLoader from '/resource_loader/PointArrayLoader';\r\nimport ResourceContainer from '/ResourceContainer';\r\n\r\nexport default class ResourceBatch\r\n{\r\n\tconstructor(batch_name)\r\n\t{\r\n\t\tthis.resource_loaders = [];\r\n\t\tthis.batch_name = batch_name || \"unnamed batch\";\r\n\t}\r\n\r\n\tadd_texture(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new TextureLoader(resource_id, url));\r\n\t}\r\n\r\n\tadd_gltf(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new GLTFLoader(resource_id, url));\r\n\t}\r\n\tadd_dae(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new DAELoader(resource_id, url));\r\n\t}\r\n\tadd_obj(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new OBJLoader(resource_id, url));\r\n\t}\r\n\tadd_text(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new TextLoader(resource_id, url));\r\n\t}\r\n\tadd_cubemap(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new CubemapLoader(resource_id, url));\r\n\t}\r\n\tadd_audio(resource_id, url, listener, loop, volume) {\r\n\t\tthis.resource_loaders.push(new AudioLoader(resource_id, url, listener, loop, volume));\r\n\t}\r\n\tadd_json(resource_id, url) {\r\n\t\tthis.resource_loaders.push(new JSONLoader(resource_id, url));\r\n\t}\r\n\tadd_point_array(resource_id, url)\r\n\t{\r\n\t\tthis.resource_loaders.push(new PointArrayLoader(resource_id, url));\r\n\t}\r\n  add_hdr(resource_id, url)\r\n  {\r\n    this.resource_loaders.push(new RGBETextureLoader(resource_id, url));\r\n  }\r\n\r\n\tload(resource_container)\r\n\t{\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\tthis.resource_loaders[i].load(resource_container || ResourceContainer);\r\n\t\t}\r\n\t}\r\n\r\n\tget loading_finished()\r\n\t{\r\n\t\tlet finished = true;\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\tfinished = finished && this.resource_loaders[i].has_finished;\r\n\t\t}\r\n\t\treturn finished;\r\n\t}\r\n\r\n\tget has_errors()\r\n\t{\r\n\t\tlet has_error = false;\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\thas_error = has_error || this.resource_loaders[i].has_error;\r\n\t\t}\r\n\t\treturn has_error;\r\n\t}\r\n\r\n\tprint_errors()\r\n\t{\r\n\t\tconsole.error(\"Batch <\"+this.batch_name+\"> could not load successfully\")\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\tif(this.resource_loaders[i].has_error)\r\n\t\t\t\tthis.resource_loaders[i].print_error();\r\n\t\t}\r\n\t}\r\n\r\n\tget_progress()\r\n\t{\r\n\t\tlet progress = 0;\r\n\t\tfor(let i=0; i< this.resource_loaders.length; i++)\r\n\t\t{\r\n\t\t\tprogress+=this.resource_loaders[i].progress;\r\n\t\t}\r\n\t\tif(progress === 0)\r\n\t\t{\r\n\t\t\tconsole.error(\"Batch \"+this.name+\" does not contain any loaders\");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn progress/this.resource_loaders.length;\r\n\t}\r\n}\r\n","// This class helps with parsing an entire recording that spans several days, into one-day recordings\r\n// that start at 0:00:00 and ends at 23:59:59, except for the first and last day of a recording range\r\nexport default class TimeUtilities\r\n{\r\n\tconstructor(){}\r\n\r\n}\r\n\r\n","export default class ImageUtilities {\r\n    constructor() { }\r\n\r\n    static get_image_data(image) {\r\n\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n\r\n        var context = canvas.getContext('2d');\r\n        context.drawImage(image, 0, 0);\r\n\r\n        return context.getImageData(0, 0, image.width, image.height);\r\n    }\r\n    static get_pixel(imagedata, x, y) {\r\n\r\n        let position = (x + imagedata.width * y) * 4;\r\n        let data = imagedata.data;\r\n        return new THREE.Vector4(data[position + 0], data[position + 1], data[position + 2], data[position + 3]);\r\n    }\r\n\r\n}\r\n","export class ModelUtilities\r\n{\r\n\r\n\tget_mesh(scene, result_callback)\r\n\t{\r\n\t\tscene.traverse((child)=>{\r\n\t\t\tif(child instanceof THREE.Mesh)\r\n\t\t\t{\r\n\t\t\t\tif(child.geometry instanceof THREE.Geometry)\r\n\t\t\t\t{\r\n\t\t\t\t\tchild.geometry = new THREE.BufferGeometry().fromGeometry(child.geometry);\r\n\t\t\t\t}\r\n\t\t\t\tresult_callback(child);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tget_geometries(scene)\r\n\t{\r\n\t\tlet geometries = [];\r\n\r\n\t\tthis.get_mesh(scene, (child)=>{\r\n\t\t\tgeometries.push(child.geometry);\r\n\t\t});\r\n\t\treturn geometries;\r\n\t}\r\n\r\n\r\n\tassign_material(scene, material, name)\r\n\t{\r\n\t\tscene.traverse((child) => {\r\n\t\t\tif(child instanceof THREE.Mesh)\r\n\t\t\t{\r\n\t\t\t\t// assign to all if no name is given\r\n\t\t\t\tif(name === undefined)\r\n\t\t\t\t\tchild.material = material;\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// if name is given, assign only to that\r\n\t\t\t\t\tif(child.name === name )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchild.material = material;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tclone_animated_gltf(gltf)\r\n\t{\r\n\t\tconst clone = {\r\n\t\t\tanimations: gltf.animations,\r\n\t\t\tscene: gltf.scene.clone(true)\r\n\t\t};\r\n\r\n\t\tconst skinnedMeshes = {};\r\n\r\n\t\tgltf.scene.traverse(node => {\r\n\t\t\tif (node.isSkinnedMesh) {\r\n\t\t\t\tskinnedMeshes[node.name] = node;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst cloneBones = {};\r\n\t\tconst cloneSkinnedMeshes = {};\r\n\r\n\t\tclone.scene.traverse(node => {\r\n\t\t\tif (node.isBone) {\r\n\t\t\t\tcloneBones[node.name] = node;\r\n\t\t\t}\r\n\r\n\t\t\tif (node.isSkinnedMesh) {\r\n\t\t\t\tcloneSkinnedMeshes[node.name] = node;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor (let name in skinnedMeshes) {\r\n\t\t\tconst skinnedMesh = skinnedMeshes[name];\r\n\t\t\tconst skeleton = skinnedMesh.skeleton;\r\n\t\t\tconst cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n\r\n\t\t\tconst orderedCloneBones = [];\r\n\r\n\t\t\tfor (let i = 0; i < skeleton.bones.length; ++i) {\r\n\t\t\t\tconst cloneBone = cloneBones[skeleton.bones[i].name];\r\n\t\t\t\torderedCloneBones.push(cloneBone);\r\n\t\t\t}\r\n\r\n\t\t\tcloneSkinnedMesh.bind(\r\n\t\t\t\tnew THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n\t\t\t\tcloneSkinnedMesh.matrixWorld);\r\n\t\t}\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tset_shadow_config(scene, cast, receive)\r\n\t{\r\n\t\tscene.traverse((child) => {\r\n\t\t\tif(child instanceof THREE.Mesh)\r\n\t\t\t{\r\n\t\t\t\tchild.castShadow = cast;\r\n\t\t\t\tchild.receiveShadow = receive;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t__find_object(scene, object_name, result_callback)\r\n\t{\r\n\r\n\t\tscene.traverse((obj)=>{\r\n\t\t\tif(obj.name === object_name)\r\n\t\t\t\tresult_callback(obj);\r\n\t\t});\r\n\t}\r\n\r\n\tget_object(scene, object_name)\r\n\t{\r\n\t\tlet object = undefined;\r\n\t\tscene.traverse((obj)=>{\r\n\t\t\tif(obj.name === object_name)\r\n\t\t\t\tobject = obj;\r\n\t\t});\r\n\t\treturn object;\r\n\t}\r\n\tget_object_by_type(scene, object_type)\r\n\t{\r\n\t\tlet object = undefined;\r\n\t\tscene.traverse((obj)=>{\r\n\t\t\tif(obj.constructor.name === object_type)\r\n\t\t\t\tobject = obj;\r\n\t\t});\r\n\t\treturn object;\r\n\t}\r\n\r\n}\r\n\r\nconst model_utilities = new ModelUtilities();\r\nmodule.exports = model_utilities;\r\n","export default class Validation\r\n{\r\n\tconstructor(){}\r\n\r\n  static is_int(n) {\r\n    return Number(n) === n && n % 1 === 0;\r\n  }\r\n\r\n  static is_float(n) {\r\n    return Number(n) === n && n % 1 !== 0;\r\n  }\r\n\r\n  static is_json(str)\r\n  {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nuniform vec3 _Color;\\n\\nvarying vec3 vBarycentric;\\n\\nfloat edgeFactor(vec3 baryc ){\\n    vec3 d = fwidth(baryc);\\n    vec3 a3 = smoothstep(vec3(0.0), d*1.5, baryc);\\n    return min(min(a3.x, a3.y), a3.z);\\n}\\n\\nvoid main()\\n{\\t\\n\\tfloat alpha = edgeFactor(vBarycentric + vec3(1. , 1., 0.));\\n\\tgl_FragColor.rgb = mix(_Color, vec3(0.), alpha);\\n\\tgl_FragColor.a = 1.0 - alpha;\\n\\tgl_FragColor.a *= 0.2;\\n}\";","module.exports=\"#define GLSLIFY 1\\nattribute vec3 barycentric;\\nvarying vec3 vBarycentric;\\nvoid main()\\n{\\n\\n  mat4 VP = projectionMatrix * viewMatrix;\\n  vec3 pos = (modelMatrix * vec4(position, 1.0)).xyz;\\n  gl_Position = VP * vec4(pos, 1.0);\\n  vBarycentric = barycentric;\\n}\";","export default class GeometryUtilities\r\n{\r\n\tstatic convert_to_non_indexed_geometry(geometry_buffer)\r\n\t{\r\n\t\tlet indices = geometry_buffer.index;\r\n\t\tlet positions = geometry_buffer.getAttribute(\"position\");\r\n\r\n\t\tlet bar_coordinates = [];\r\n\t\tlet vertices = [];\r\n\r\n\t\tfor(let i=0; i< indices.count; i+=3)\r\n\t\t{\r\n\t\t\t// VERTEX 1\r\n\t\t\tvertices.push(positions.getX(indices.array[i+0]));\r\n\t\t\tvertices.push(positions.getY(indices.array[i+0]));\r\n\t\t\tvertices.push(positions.getZ(indices.array[i+0]));\r\n\r\n\t\t\tbar_coordinates.push(1);\r\n\t\t\tbar_coordinates.push(0);\r\n\t\t\tbar_coordinates.push(0);\r\n\r\n\r\n\t\t\t// VERTEX 2\r\n\r\n\t\t\tvertices.push(positions.getX(indices.array[i+1]));\r\n\t\t\tvertices.push(positions.getY(indices.array[i+1]));\r\n\t\t\tvertices.push(positions.getZ(indices.array[i+1]));\r\n\r\n\t\t\tbar_coordinates.push(0);\r\n\t\t\tbar_coordinates.push(1);\r\n\t\t\tbar_coordinates.push(0);\r\n\r\n\r\n\t\t\t// VERTEX 3\r\n\r\n\t\t\tvertices.push(positions.getX(indices.array[i+2]));\r\n\t\t\tvertices.push(positions.getY(indices.array[i+2]));\r\n\t\t\tvertices.push(positions.getZ(indices.array[i+2]));\r\n\r\n\t\t\tbar_coordinates.push(0);\r\n\t\t\tbar_coordinates.push(0);\r\n\t\t\tbar_coordinates.push(1);\r\n\r\n\r\n\t\t}\r\n\r\n\t\tlet geometry = new THREE.BufferGeometry();\r\n\t\t// geometry.setAttribute('barycentric', new THREE.BufferAttribute( new Float32Array(bar_coordinates), 3 ));\r\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute( new Float32Array(vertices), 3 ) );\r\n\t\tGeometryUtilities.add_barycentric_attribute(geometry);\r\n\t\treturn geometry;\r\n\t}\r\n\r\n\tstatic add_barycentric_attribute(non_indexed_geometry_buffer)\r\n\t{\r\n\t\tlet bar_coordinates = [];\r\n\t\tlet positions = non_indexed_geometry_buffer.getAttribute(\"position\");\r\n\r\n\t\tfor(let i=0; i< positions.count; i+=3)\r\n\t\t{\r\n\t\t\tbar_coordinates.push(1);\r\n\t\t\tbar_coordinates.push(0);\r\n\t\t\tbar_coordinates.push(0);\r\n\r\n\t\t\tbar_coordinates.push(0);\r\n\t\t\tbar_coordinates.push(1);\r\n\t\t\tbar_coordinates.push(0);\r\n\r\n\t\t\tbar_coordinates.push(0);\r\n\t\t\tbar_coordinates.push(0);\r\n\t\t\tbar_coordinates.push(1);\r\n\r\n\t\t}\r\n\t\tnon_indexed_geometry_buffer.setAttribute('barycentric', new THREE.BufferAttribute( new Float32Array(bar_coordinates), 3 ));\r\n\t}\r\n}\r\n","import grid_frag from '/shaders/grid/grid_frag';\r\nimport grid_vert from '/shaders/grid/grid_vert';\r\nimport GeometryUtilities from '/utilities/GeometryUtilities';\r\n\r\nexport default class Grid extends THREE.Mesh {\r\n\tconstructor()\r\n\t{\r\n\r\n\t\tlet material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n      \t_Color: {value: new THREE.Color(\"#919191\")}\r\n      },\r\n      vertexShader: grid_vert,\r\n      fragmentShader: grid_frag,\r\n      extensions: {derivatives: true},\r\n      transparent: true,\r\n      depthWrite: false\r\n    });\r\n\r\n\r\n    let plane_geometry = new THREE.PlaneBufferGeometry( 100, 100, 100,100 );\r\n\r\n\t\tlet non_indexed_geometry = GeometryUtilities.convert_to_non_indexed_geometry(plane_geometry);\r\n\r\n\t\tsuper(non_indexed_geometry, material);\r\n\r\n\t\tthis.rotation.x = -3.14/2;\r\n\t}\r\n\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nuniform vec2 _ScreenSize;\\nuniform vec2 _TextureSize;\\nuniform vec2 _PixelOffset;\\nuniform vec3 _NDC;\\nuniform vec2 _PivotPoint;\\nuniform float _DepthOffset;\\nvarying vec2 vUv;\\n\\nvec2 add_pixel_offset(vec2 pos)\\n{\\n\\tpos = pos * 0.5 + 0.5;\\n\\tpos *= _ScreenSize;\\n\\tpos = ceil(pos+_PixelOffset)+0.5;\\n\\tpos /= _ScreenSize;\\n\\treturn pos * 2.0 - 1.0;\\n}\\nvoid main()\\n{\\n\\tvec4 projected_pos = projectionMatrix * viewMatrix * vec4(_NDC, 1.0);\\n  projected_pos.zw += _DepthOffset;\\n\\n\\tprojected_pos.xyz /= projected_pos.w;\\n\\n  vec2 normalized_size = _TextureSize/_ScreenSize;\\n  vec2 dir = uv * 2.0 - 1.0;\\n  dir -= _PivotPoint;\\n  vec2 pos = projected_pos.xy+dir * normalized_size;\\n  gl_Position = vec4(add_pixel_offset(pos), projected_pos.z, 1.0);\\n  vUv = uv;\\n\\n}\\n\";","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform vec2 _ScreenSize;\\nuniform vec2 _TextureSize;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n\\tgl_FragColor = texture2D(_MainTex, vUv + vec2(0.5, 0.5)/_TextureSize);\\n}\\n\";","import vert from '/shaders/ui_element/ui_element.vert';\r\nimport frag from '/shaders/ui_element/ui_element.frag';\r\nimport BaseShaderMaterial from '/materials/BaseShaderMaterial';\r\n\r\nexport default class UIElementMaterial extends BaseShaderMaterial {\r\n    constructor(intensity = 1) {\r\n        super(vert, frag, {\r\n            _MainTex: { value: undefined },\r\n            _ScreenSize: { value: new THREE.Vector2(Screen.width, Screen.height) },\r\n            _TextureSize: { value: new THREE.Vector2() },\r\n            _PixelOffset: { value: new THREE.Vector2(0, 0) },\r\n            _NDC: { value: new THREE.Vector3() },\r\n            _PivotPoint: { value: new THREE.Vector2() },\r\n            _DepthOffset: { value: 0 }\r\n        });\r\n        this.transparent = true;\r\n        this.depthWrite = false;\r\n        this.depthTest = false;\r\n    }\r\n\r\n}\r\n","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D _MainTex;\\nuniform vec2 _ScreenSize;\\nuniform vec2 _TextureSize;\\nvarying vec2 vUv;\\n\\nvoid main()\\n{\\n\\tgl_FragColor = texture2D(_MainTex, vUv + vec2(0.5, 0.5)/_TextureSize);\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform vec2 _ScreenSize;\\nuniform vec2 _TextureSize;\\nuniform vec2 _PixelOffset;\\nuniform vec3 _NDC;\\nuniform vec2 _PivotPoint;\\nuniform float _DepthOffset;\\nvarying vec2 vUv;\\n\\nvec2 round_to_ceil(vec2 pos)\\n{\\n\\tpos = pos * 0.5 + 0.5;\\n\\tpos *= _ScreenSize;\\n\\tpos = ceil(pos)+0.5;\\n\\tpos /= _ScreenSize;\\n\\treturn pos * 2.0 - 1.0;\\n}\\nvoid main()\\n{\\n\\tvec4 projected_pos = projectionMatrix * viewMatrix * vec4(_NDC, 1.0);\\n  projected_pos.zw += _DepthOffset;\\n\\n\\tprojected_pos.xyz /= projected_pos.w;\\n\\t\\n  vec2 normalized_size = _TextureSize/_ScreenSize;\\n  vec2 dir = uv * 2.0 - 1.0;\\n  dir -= _PivotPoint; \\n  vec2 pos = projected_pos.xy+ dir * normalized_size;\\n  gl_Position = vec4(round_to_ceil(pos), projected_pos.z, 1.0);\\n  vUv = uv;\\n\\n}\";","export default class ScreenSpacePosition\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis.tmp_vec = new THREE.Vector2();\r\n\t}\r\n\r\n\tget_pos_NDC(position)\r\n\t{\r\n\t\treturn this.tmp_vec.set(position.x, position.y);\r\n\t}\r\n}","import CameraManager from '/CameraManager';\r\n\r\nexport default class WorldSpacePosition\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tthis.tmp_vec3 = new THREE.Vector3();\r\n\t\tthis.tmp_vec2 = new THREE.Vector2();\r\n\t}\r\n\r\n\tget_pos_NDC(position)\r\n\t{\r\n\t\tthis.tmp_vec3.copy(position);\r\n    \tthis.tmp_vec3.project(CameraManager.current);\r\n\r\n\t\treturn this.tmp_vec2.set(this.tmp_vec3.x, this.tmp_vec3.y);\r\n\t}\r\n}\r\n","export default class UIElementState\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\r\n\t}\r\n\r\n\tupdate(ui_element, normalized_mouse_position)\r\n\t{\r\n\r\n\t}\r\n\r\n\ton_enter(ui_element){}\r\n\ton_exit(ui_element){}\r\n}","import UIElementState from '/ui/ui_element_state/UIElementState'\r\n\r\nexport default class OnIdle extends UIElementState\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tupdate(ui_element, normalized_mouse_position)\r\n\t{\r\n\t\tif(ui_element.is_mouse_over(normalized_mouse_position))\r\n\t\t{\r\n\t\t\tui_element.set_state(ui_element._on_enter_state);\r\n\t\t}\r\n\t}\r\n}\r\n","import UIElementState from '/ui/ui_element_state/UIElementState'\r\n\r\nexport default class OnMouseEnter extends UIElementState\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\ton_enter(ui_element)\r\n\t{\r\n\t\tui_element.on_mouse_enter();\r\n\t}\r\n\r\n\tupdate(ui_element, normalized_mouse_position)\r\n\t{\r\n\t\tif(ui_element.is_mouse_over(normalized_mouse_position))\r\n\t\t{\r\n\t\t\tui_element.set_state(ui_element._on_hover_state);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tui_element.set_state(ui_element._on_exit_state);\r\n\t\t}\r\n\t}\r\n}\r\n","import UIElementState from '/ui/ui_element_state/UIElementState'\r\n\r\nexport default class OnMouseExit extends UIElementState\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\ton_enter(ui_element)\r\n\t{\r\n\t\tui_element.on_mouse_exit();\r\n\t\tui_element.set_state(ui_element._on_idle_state);\r\n\t}\r\n\r\n}\r\n","import UIElementState from '/ui/ui_element_state/UIElementState'\r\n\r\nexport default class OnMouseHover extends UIElementState\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\ton_enter(ui_element)\r\n\t{\r\n\t\tthis.__trigger_on_hover(ui_element);\r\n\t}\r\n\r\n\tupdate(ui_element, normalized_mouse_position)\r\n\t{\r\n\t\tif(ui_element.is_mouse_over(normalized_mouse_position))\r\n\t\t{\r\n\t\t\tthis.__trigger_on_hover(ui_element);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tui_element.set_state(ui_element._on_exit_state);\r\n\t\t}\r\n\t}\r\n\r\n\t__trigger_on_hover(ui_element)\r\n\t{\r\n\t\tui_element.on_mouse_hover();\r\n\t}\r\n}\r\n","import UI from '/UI';\r\nimport CameraManager from '/CameraManager';\r\nimport Screen from '/Screen';\r\n\r\nimport UIElementMaterial from '/materials/UIElementMaterial';\r\nimport screen_space_text_frag from '/shaders/ui/ss_texture_frag';\r\nimport screen_space_text_vert from '/shaders/ui/ss_texture_vert';\r\n\r\nimport ScreenSpacePosition from '/ui/ui_element_position/ScreenSpacePosition';\r\nimport WorldSpacePosition from '/ui/ui_element_position/WorldSpacePosition';\r\n\r\nimport OnIdle from '/ui/ui_element_state/OnIdle';\r\nimport OnMouseEnter from '/ui/ui_element_state/OnMouseEnter';\r\nimport OnMouseExit from '/ui/ui_element_state/OnMouseExit';\r\nimport OnMouseHover from '/ui/ui_element_state/OnMouseHover';\r\n\r\n\r\nexport default class UIElement extends THREE.Mesh\r\n{\r\n  constructor(vert, frag)\r\n  {\r\n    super(new THREE.PlaneGeometry(1, 1), new UIElementMaterial());\r\n\r\n\r\n    this.is_clickable = false;\r\n\r\n    this.position_strategy = new WorldSpacePosition();\r\n    this.current_state = new OnIdle();\r\n\r\n    this._position = new THREE.Vector3();\r\n\r\n    this._on_idle_state = new OnIdle();\r\n    this._on_enter_state = new OnMouseEnter();\r\n    this._on_exit_state = new OnMouseExit();\r\n    this._on_hover_state = new OnMouseHover();\r\n\r\n    this.on_enter = undefined;\r\n    this.on_exit = undefined;\r\n    this.on_hover = undefined;\r\n\r\n    this.mouse_pos_tmp = new THREE.Vector2();\r\n    this.cached_NDC_position = new THREE.Vector2();\r\n    this.screen_pos_tmp = new THREE.Vector2();\r\n\r\n\r\n    this.texture_size = new THREE.Vector2(1,1);\r\n\r\n\r\n    this.frustumCulled = false;\r\n    this.matrixAutoUpdate = false;\r\n    this.renderOrder = 0;\r\n\r\n    this.size = 1;\r\n    this.pixel_offset = new THREE.Vector2();\r\n  }\r\n\r\n  set_render_order(value)\r\n  {\r\n    this.renderOrder = value;\r\n  }\r\n\r\n  get pivot_point()\r\n  {\r\n    return this.material.uniforms._PivotPoint.value;\r\n  }\r\n\r\n  set_pixel_offset(offset)\r\n  {\r\n    this.pixel_offset.copy(offset);\r\n    this.material.uniforms._PixelOffset.value.copy(offset);\r\n  }\r\n\r\n  set_state(new_state)\r\n  {\r\n    this.current_state.on_exit(this);\r\n    this.current_state = new_state;\r\n    this.current_state.on_enter(this);\r\n  }\r\n\r\n  get position()\r\n  {\r\n    return this._position;\r\n  }\r\n\r\n  set use_depth(boolean)\r\n  {\r\n    this.material.depthTest = boolean;\r\n  }\r\n\r\n  set depth_offset(value)\r\n  {\r\n    this.material.uniforms._DepthOffset.value = value;\r\n  }\r\n\r\n  clear_state()\r\n  {\r\n    this.visible = false;\r\n  }\r\n\r\n\r\n  set_world_space_coordinate_system()\r\n  {\r\n    this.position_strategy = new WorldSpacePosition();\r\n  }\r\n  set_screen_space_coordinate_system()\r\n  {\r\n    this.position_strategy = new ScreenSpacePosition();\r\n  }\r\n\r\n  set_texture(texture)\r\n  {\r\n    texture.minFilter = THREE.NearestFilter;\r\n    texture.magFilter = THREE.NearestFilter;\r\n    texture.needsUpdate = true;\r\n\r\n    this.texture_size.set(texture.image.width, texture.image.height);\r\n\r\n    this.material.uniforms._MainTex.value = texture;\r\n    this.get_size(this.material.uniforms._TextureSize.value);\r\n    this.visible = true;\r\n  }\r\n\r\n  update_state(normalized_mouse_pos)\r\n  {\r\n    this.material.uniforms._ScreenSize.value.set(Screen.width, Screen.height);\r\n    this.get_size(this.material.uniforms._TextureSize.value);\r\n\r\n    this.cached_NDC_position.copy(this.position_strategy.get_pos_NDC(this.position));\r\n    this.material.uniforms._NDC.value.copy(this.position);\r\n    this.current_state.update(this, normalized_mouse_pos);\r\n  }\r\n\r\n  is_mouse_over(normalized_mouse_pos)\r\n  {\r\n\r\n    this.screen_pos_tmp.copy(this.cached_NDC_position)\r\n    this.to_screen_position(this.screen_pos_tmp);\r\n    this.screen_pos_tmp.x += this.pixel_offset.x;\r\n    this.screen_pos_tmp.y += this.pixel_offset.y;\r\n\r\n    let rect = new THREE.Box2().setFromCenterAndSize(this.screen_pos_tmp, this.get_size());\r\n\r\n\r\n    this.mouse_pos_tmp.copy(normalized_mouse_pos);\r\n    this.to_screen_position(this.mouse_pos_tmp);\r\n\r\n    return rect.containsPoint(this.mouse_pos_tmp);\r\n  }\r\n\r\n  to_screen_position(projected_pos)\r\n  {\r\n    projected_pos.x = (projected_pos.x * 0.5 + 0.5) * Screen.width  + this.pixel_offset.x;\r\n    projected_pos.y = (projected_pos.y * 0.5 + 0.5) * Screen.height + this.pixel_offset.y;\r\n  }\r\n\r\n  get_screen_space_position()\r\n  {\r\n    let pos = this.cached_NDC_position.clone()\r\n    this.to_screen_position(pos);\r\n    return pos;\r\n  }\r\n  set_screen_space_position(screen_pos)\r\n  {\r\n    this.position.x = (screen_pos.x / Screen.width) * 2 - 1;\r\n    this.position.y = (screen_pos.y / Screen.height) * 2 - 1;\r\n  }\r\n\r\n  dispose()\r\n  {\r\n    if(this.material.uniforms._MainTex.value)\r\n    {\r\n      this.material.uniforms._MainTex.value.dispose();\r\n    }\r\n    Screen.remove_screen_material(this.material);\r\n    this.geometry.dispose();\r\n    this.material.dispose();\r\n  }\r\n\r\n  get_size(vector2)\r\n  {\r\n    if (vector2)\r\n    {\r\n      return vector2.copy(this.texture_size).multiplyScalar(this.size / Screen.dpr);\r\n    }\r\n    else\r\n    {\r\n      return new THREE.Vector2().copy(this.texture_size).multiplyScalar(this.size / Screen.dpr);\r\n    }\r\n  }\r\n\r\n  on_mouse_enter(){}\r\n  on_mouse_exit(){}\r\n  on_mouse_hover(){}\r\n\r\n}\r\n\r\n","module.exports=\"#define GLSLIFY 1\\nuniform float _Thickness;\\n\\nattribute vec3 next_position;\\nattribute vec3 previous_position;\\nattribute float orientation;\\nattribute float coverage;\\n\\nvarying float line_coverage;\\nvarying float uv_u;\\n\\nvec3 w_space_normal(vec3 from, vec3 to)\\n{\\n  vec3 w_from = (modelMatrix * vec4(from, 1.0)).xyz;\\n  vec3 w_to   = (modelMatrix * vec4(to, 1.0)).xyz;\\n\\n  vec3 z = normalize(w_to - w_from);\\n  return normalize(cross(z , normalize(cameraPosition - w_from)));\\n\\n}\\n\\nvoid main()\\n{\\n\\n  mat4 VP = projectionMatrix * viewMatrix;\\n\\n  vec3 pos = position;\\n  vec3 normal = w_space_normal(next_position ,previous_position);\\n  pos = (modelMatrix * vec4(pos, 1.0)).xyz;\\n  pos += normal * (_Thickness * 0.5) * orientation;\\n\\n  gl_Position = VP * vec4(pos, 1.0);\\n\\n  line_coverage = coverage;\\n  uv_u = orientation * 0.5 + 0.5;\\n\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform float _Length;\\nuniform float _ElapsedTime;\\nuniform float _Thickness;\\nuniform vec3  _Color;\\n\\nvarying float line_coverage;\\nvarying float uv_u;\\n\\nfloat aastep(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\nvoid main()\\n{\\n\\n    // float y = fract(line_coverage /_Thickness - _TrueElapsedTime) ;\\n\\n    // vec2 uv = vec2(uv_u, y);\\n\\n   \\n    // vec4 col = texture2D(_ArrowsTex,uv);\\n    // col.rgb *= _ForwardColor;\\n    // col.a = aastep(0.5, col.a);\\n    // gl_FragColor = col;\\n    float u = (1.0 - abs(uv_u * 2.0 - 1.0));\\n    float diffuse = dot(vec2(u, u), vec2(0.0, 1.0)) * 0.5+0.5;\\n    gl_FragColor = vec4(_Color * diffuse, 1.0);\\n\\n}\";","import line_vs from '/shaders/basic_line/basic_line_vert'\r\nimport line_fs from '/shaders/basic_line/basic_line_frag'\r\n\r\nexport default class Line extends THREE.Mesh {\r\n\r\n  constructor(points) {\r\n\r\n\r\n    let geometry = new THREE.BufferGeometry();\r\n    geometry.setAttribute('position',           new THREE.BufferAttribute(new Float32Array([]), 3));\r\n    geometry.setAttribute('next_position',      new THREE.BufferAttribute(new Float32Array([]), 3));\r\n    geometry.setAttribute('previous_position',  new THREE.BufferAttribute(new Float32Array([]), 3));\r\n    geometry.setAttribute('orientation',        new THREE.BufferAttribute(new Float32Array([]), 1));\r\n    geometry.setAttribute('coverage',           new THREE.BufferAttribute(new Float32Array([]), 1));\r\n\r\n    let material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        _Thickness: { value: 0.2 },\r\n        _Length: { value: 0 },\r\n        _ElapsedTime: { value: 0 },\r\n        _Color: {value: new THREE.Color(\"#FF0000\")},\r\n      },\r\n      vertexShader: line_vs,\r\n      fragmentShader: line_fs,\r\n      transparent: true,\r\n      depthWrite: false,\r\n      extensions: { derivatives: true}\r\n\r\n    });\r\n\r\n    super(geometry, material);\r\n\r\n    if(points)\r\n      this.setup(points);\r\n  }\r\n\r\n  setup(points)\r\n  {\r\n\r\n    let vertices = [];\r\n    let next_position = [];\r\n    let previous_position = [];\r\n    let orientation = [];\r\n    let coverage = [];\r\n    let accumulated_length = 0;\r\n\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n\r\n      vertices.push(points[i].x);\r\n      vertices.push(points[i].y);\r\n      vertices.push(points[i].z);\r\n      orientation.push(1);\r\n\r\n      vertices.push(points[i].x);\r\n      vertices.push(points[i].y);\r\n      vertices.push(points[i].z);\r\n      orientation.push(-1);\r\n\r\n      let next_point = this.__get_next_position(points, i);\r\n      next_position.push(next_point.x);\r\n      next_position.push(next_point.y);\r\n      next_position.push(next_point.z);\r\n\r\n      next_position.push(next_point.x);\r\n      next_position.push(next_point.y);\r\n      next_position.push(next_point.z);\r\n\r\n      let previous_point = this.__get_previous_position(points, i);\r\n      previous_position.push(previous_point.x);\r\n      previous_position.push(previous_point.y);\r\n      previous_position.push(previous_point.z);\r\n\r\n      previous_position.push(previous_point.x);\r\n      previous_position.push(previous_point.y);\r\n      previous_position.push(previous_point.z);\r\n\r\n\r\n      if(i < points.length -1)\r\n        accumulated_length += points[i].distanceTo(next_point);\r\n\r\n      coverage.push(accumulated_length);\r\n      coverage.push(accumulated_length);\r\n\r\n    }\r\n\r\n    let vertexList            = new Float32Array(vertices);\r\n    let nextPositionList      = new Float32Array(next_position);\r\n    let previousPositionList  = new Float32Array(previous_position);\r\n    let orientationList       = new Float32Array(orientation);\r\n    let coverageList          = new Float32Array(coverage);\r\n\r\n\r\n    let indices = [];\r\n    for (let i = 0; i < ((vertexList.length / 3) - 2) / 2; i++) {\r\n      let index = (i * 2) + 1;\r\n      indices.push(index);\r\n      indices.push(index + 1);\r\n      indices.push(index - 1);\r\n\r\n      indices.push(index);\r\n      indices.push(index + 2);\r\n      indices.push(index + 1);\r\n    }\r\n\r\n    this.geometry.setIndex(indices);\r\n    this.geometry.getAttribute('position').copy(          new THREE.BufferAttribute(vertexList, 3));\r\n    this.geometry.getAttribute('next_position').copy(     new THREE.BufferAttribute(nextPositionList, 3));\r\n    this.geometry.getAttribute('previous_position').copy( new THREE.BufferAttribute(previousPositionList, 3));\r\n    this.geometry.getAttribute('orientation').copy(       new THREE.BufferAttribute(orientationList, 1));\r\n    this.geometry.getAttribute('coverage').copy(          new THREE.BufferAttribute(coverageList, 1));\r\n\r\n    this.geometry.getAttribute('position').needsUpdate = true;\r\n    this.geometry.getAttribute('next_position').needsUpdate = true;\r\n    this.geometry.getAttribute('previous_position').needsUpdate = true;\r\n    this.geometry.getAttribute('orientation').needsUpdate = true;\r\n    this.geometry.getAttribute('coverage').needsUpdate = true;\r\n\r\n    this.material.uniforms._Length.value = accumulated_length;\r\n    this._length = accumulated_length;\r\n  }\r\n\r\n  set thickness(value)\r\n  {\r\n    this.material.uniforms._Thickness.value = value;\r\n  }\r\n\r\n\r\n\r\n  __get_previous_position(points, i)\r\n  {\r\n    if(i === 0)\r\n    {\r\n      return points[1].clone().sub(points[0]).multiplyScalar(-1).add(points[0]);\r\n    }\r\n    else\r\n    {\r\n      return points[i-1];\r\n    }\r\n  }\r\n  __get_next_position(points, i)\r\n  {\r\n    if(i === points.length-1)\r\n    {\r\n      return points[points.length-2].clone().sub(points[points.length-1]).multiplyScalar(-1).add(points[points.length-1]);\r\n    }\r\n    else\r\n    {\r\n      return points[i+1];\r\n    }\r\n  }\r\n\r\n  update() {\r\n  }\r\n\r\n  distance()\r\n  {\r\n    return this.accumulated_length;\r\n  }\r\n  total_length()\r\n  {\r\n    return this.accumulated_length;\r\n  }\r\n\r\n  dispose()\r\n  {\r\n    this.geometry.dispose();\r\n    this.material.dispose();\r\n    if(this.parent)\r\n      this.parent.remove(this);\r\n  }\r\n\r\n  set color(col)\r\n  {\r\n  \tthis.material.uniforms._Color.value.set(col);\r\n  }\r\n  copy_color(col)\r\n  {\r\n  \tthis.material.uniforms._Color.value.copy(col);\r\n  }\r\n}\r\n","import Grid from '/components/Grid';\r\nimport UIElement from '/components/UIElement';\r\nimport Line from '/components/Line';\r\nexport default {\r\n  Grid: Grid,\r\n  Line: Line,\r\n  UIElement: UIElement\r\n}\r\n","export default class CanvasDrawer\r\n{\r\n\tconstructor (uses_dynamic_font)\r\n  {\r\n    this.uses_dynamic_font = uses_dynamic_font;\r\n    this.__textHeight = null;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.ctx = this.canvas.getContext('2d');\r\n  }\r\n\r\n  getFontHeight (fontStyle = \"Arial\") {\r\n\r\n    if(this.__textHeight == null || this.uses_dynamic_font)\r\n    {\r\n      var body = document.getElementsByTagName('body')[0];\r\n      var dummy = document.createElement('div');\r\n      var dummyText = document.createTextNode('MÉqgOLAKTAL');\r\n      dummy.appendChild(dummyText);\r\n      dummy.setAttribute('style', `font:${ fontStyle };position:absolute;top:0;left:0`);\r\n      body.appendChild(dummy);\r\n      this.__textHeight = dummy.offsetHeight;\r\n      body.removeChild(dummy);\r\n    }\r\n    return this.__textHeight;\r\n\r\n  }\r\n\r\n\r\n\r\n  get_text_size(text, font = \"24px Arial\")\r\n  {\r\n\r\n\r\n  \tlet size = new THREE.Vector2();\r\n  \tthis.ctx.font = font;\r\n\t\tsize.x = Math.ceil(this.ctx.measureText(text).width) * window.devicePixelRatio;\r\n    size.y = Math.ceil(this.getFontHeight(font)) * window.devicePixelRatio;\r\n    return size;\r\n  }\r\n\r\n  draw_canvas (text, ctxOptions = {})\r\n  {\r\n    ctxOptions.font = ctxOptions.font || '24px Arial';\r\n    ctxOptions.font_color = ctxOptions.font_color || '#000000';\r\n\r\n  \tthis.__draw(text, ctxOptions, this.canvas, this.ctx);\r\n  \treturn this.canvas;\r\n  }\r\n\r\n  draw_on_texture(text, ctxOptions)\r\n  {\r\n    let canvas = this.draw_canvas(text, ctxOptions);\r\n    let canvas_texture = new THREE.CanvasTexture(canvas, THREE.UVMapping,\r\n                                          THREE.ClampToEdgeWrapping,\r\n                                          THREE.ClampToEdgeWrapping,\r\n                                          THREE.NearestFilter,\r\n                                          THREE.NearestFilter);\r\n    canvas_texture.generateMipMaps = false;\r\n    canvas_texture.needsUpdate = true;\r\n\r\n    return canvas_texture;\r\n  }\r\n\r\n  __draw(text, ctxOptions){};\r\n\r\n  roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n      if (typeof stroke == 'undefined') {\r\n        stroke = true;\r\n      }\r\n      if (typeof radius === 'undefined') {\r\n        radius = 5;\r\n      }\r\n      if (typeof radius === 'number') {\r\n        radius = {tl: radius, tr: radius, br: radius, bl: radius};\r\n      } else {\r\n        var defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};\r\n        for (var side in defaultRadius) {\r\n          radius[side] = radius[side] || defaultRadius[side];\r\n        }\r\n      }\r\n      ctx.beginPath();\r\n      ctx.moveTo(x + radius.tl, y);\r\n      ctx.lineTo(x + width - radius.tr, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n      ctx.lineTo(x + width, y + height - radius.br);\r\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n      ctx.lineTo(x + radius.bl, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n      ctx.lineTo(x, y + radius.tl);\r\n      ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n      ctx.closePath();\r\n      if (fill) {\r\n        ctx.fill();\r\n      }\r\n      if (stroke) {\r\n        ctx.stroke();\r\n      }\r\n\r\n    }\r\n}\r\n","import CanvasDrawer from '/canvas_drawer/CanvasDrawer';\r\n\r\nexport default class SimpleTextDrawer extends CanvasDrawer{\r\n\r\n  constructor ()\r\n  {\r\n    super();\r\n    this.text_margin = new THREE.Vector2(2,0);\r\n  }\r\n\r\n  __draw (text, ctxOptions, canvas, ctx)\r\n  {\r\n    ctx.font = ctxOptions.font;\r\n\r\n    let text_size = this.get_text_size(text, ctxOptions.font);\r\n    // canvas.width = THREE.Math.ceilPowerOfTwo(text_size.x+this.text_margin.x*2);\r\n    // canvas.height = THREE.Math.ceilPowerOfTwo(text_size.y+ this.text_margin.y*2);\r\n    canvas.width = Math.ceil(text_size.x+this.text_margin.x*2);\r\n    canvas.height = Math.ceil(text_size.y+ this.text_margin.y*2);\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // ctx.globalAlpha = 0.2;\r\n    // ctx.fillStyle = \"#FF0000\";\r\n    // ctx.fillRect(0,0, canvas.width, canvas.height);\r\n\r\n\r\n\r\n    ctx.globalAlpha = 1;\r\n\r\n    ctx.font = ctxOptions.font;\r\n    ctx.fillStyle = ctxOptions.font_color || \"#000000\";\r\n    ctx.textBaseline = \"middle\";\r\n    ctx.textAlignment = \"left\";\r\n    ctx.fillText(text, 0, canvas.height/2);\r\n  }\r\n\r\n}\r\n","import ArrayUtilities from '/utilities/ArrayUtilities.js';\r\nimport BaseApplication from '/BaseApplication';\r\nimport BaseShaderMaterial from '/materials/BaseShaderMaterial';\r\nimport CameraManager from '/CameraManager';\r\nimport CameraUtilities from '/utilities/CameraUtilities';\r\nimport Capabilities from '/Capabilities';\r\nimport Configuration from '/Configuration';\r\nimport EasingFunctions from '/utilities/EasingFunctions';\r\nimport EventManager from '/EventManager';\r\nimport Debug from '/Debug';\r\nimport Graphics from '/Graphics';\r\nimport Input from '/Input';\r\nimport MathUtilities from '/utilities/MathUtilities';\r\nimport NormalRender from '/render_mode/NormalRender';\r\nimport DeferredRender from '/render_mode/DeferredRender';\r\nimport DebugNormalsRender from '/render_mode/DebugNormalsRender';\r\nimport ObjectUtilities from '/utilities/ObjectUtilities';\r\nimport PerspectiveCamera from '/PerspectiveCamera';\r\nimport RenderLoop from '/RenderLoop';\r\nimport ResourceBatch from '/resource_loader/ResourceBatch';\r\nimport ResourceContainer from '/ResourceContainer';\r\nimport SceneManager from '/SceneManager';\r\nimport Screen from '/Screen';\r\nimport Time from '/Time';\r\nimport UI from '/UI';\r\nimport TimeUtilities from '/utilities/TimeUtilities';\r\nimport ImageUtilities from '/utilities/ImageUtilities';\r\nimport ModelUtilities from '/utilities/ModelUtilities';\r\nimport Validation from '/utilities/Validation';\r\nimport Components from '/Components';\r\nimport CanvasDrawer from '/canvas_drawer/CanvasDrawer';\r\nimport SimpleTextDrawer from '/canvas_drawer/SimpleTextDrawer';\r\n\r\nmodule.exports = {\r\n  ArrayUtilities: ArrayUtilities,\r\n  BaseApplication: BaseApplication,\r\n  BaseShaderMaterial: BaseShaderMaterial,\r\n  CameraManager: CameraManager,\r\n  CameraUtilities: CameraUtilities,\r\n  Capabilities: Capabilities,\r\n  Configuration: Configuration,\r\n  EasingFunctions: EasingFunctions,\r\n  EventManager: EventManager,\r\n  Debug: Debug,\r\n  Graphics: Graphics,\r\n  Input: Input,\r\n  MathUtilities: MathUtilities,\r\n  NormalRender: NormalRender,\r\n  DeferredRender: DeferredRender,\r\n  DebugNormalsRender: DebugNormalsRender,\r\n  ObjectUtilities: ObjectUtilities,\r\n  PerspectiveCamera: PerspectiveCamera,\r\n  RenderLoop: RenderLoop,\r\n  ResourceBatch: ResourceBatch,\r\n  ResourceContainer: ResourceContainer,\r\n  SceneManager: SceneManager,\r\n  Screen: Screen,\r\n  Time: Time,\r\n  TimeUtilities: TimeUtilities,\r\n  ImageUtilities: ImageUtilities,\r\n  ModelUtilities: ModelUtilities,\r\n  Validation: Validation,\r\n  Components: Components,\r\n  UI: UI,\r\n  CanvasDrawer: CanvasDrawer,\r\n  SimpleTextDrawer: SimpleTextDrawer\r\n}\r\n"]}